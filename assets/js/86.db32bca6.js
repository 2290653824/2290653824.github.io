(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{408:function(a,s,t){"use strict";t.r(s);var n=t(4),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"_1-排查小案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-排查小案例"}},[a._v("#")]),a._v(" 1. 排查小案例")]),a._v(" "),s("h3",{attrs:{id:"young-gc-频繁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#young-gc-频繁"}},[a._v("#")]),a._v(" Young GC 频繁")]),a._v(" "),s("p",[a._v("之前有个任务会频繁地重复调用一个接口。所以用guava cache做了一个简单的内存缓存。结果上线后发现经常收到Young GC频繁的告警，时间跟这个任务的启动时间也比较吻合。")]),a._v(" "),s("p",[a._v("通过监控看到的GC图大概是这样：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230718212631442.png",alt:"image-20230718212631442"}}),a._v("^案例1^")]),a._v(" "),s("p",[a._v("可以看到，Young GC的次数会在某一个时间点飙升。同时伴随着Old区域内存快速升高，最后会触发一次Full GC。")]),a._v(" "),s("p",[a._v("根据这个情况，可以肯定的是由于本次代码改动引起的。通过Heap Dump分析后发现，占用内存较大的是一个guava cache的Map对象。")]),a._v(" "),s("p",[a._v("查找代码发现，使用guava cache的时候，没有设置最大缓存数量和弱引用，而是设置了一个几分钟的过期时间。而这个任务的量又比较大，到线上后很快就缓存了大量的对象，导致频繁触发Young GC，但又由于有引用GC不掉（这个从Survivor区的内存大小图像可以推测），所以慢慢代数比较多的对象就晋升到了老年代，后面老年代内存到达一定阈值引发Full GC。")]),a._v(" "),s("p",[a._v("后面通过设置最大缓存数量解决了这个问题。又积累了一个宝贵的经验，完美！")]),a._v(" "),s("h3",{attrs:{id:"young-gc和old-gc都频繁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#young-gc和old-gc都频繁"}},[a._v("#")]),a._v(" Young GC和Old GC都频繁")]),a._v(" "),s("p",[a._v("在线上灰度环境中发现收到Young GC和Old GC频繁的告警。监控看到的GC图大概长这样：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230718212623092.png",alt:"image-20230718212623092"}})]),a._v(" "),s("p",[a._v("根据GC图大概可以看出来，Young GC和Old GC都非常频繁，且每次都能回收走大量的对象。那可以简单地推测：确实是产生了大量的对象，且极有可能有一部分大对象。小对象引发的Young GC频繁，而大对象引发了Old GC频繁。")]),a._v(" "),s("p",[a._v("排查下来也是一段代码引起的。对于一个查询和排序分页的SQL，同时这个SQL需要join多张表，在分库分表下，直接调用SQL性能很差，甚至超时。于是想了个比较low的办法：查单表，把所有数据查出来，在内存排序分页。用了一个List来保存数据，而有些数据量大，造成了这个现象。用Heap Dump分析，也印证了这个猜测，List类型的对象占用了大量的空间。")]),a._v(" "),s("h3",{attrs:{id:"接口线程池满和full-gc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口线程池满和full-gc"}},[a._v("#")]),a._v(" "),s("strong",[a._v("接口线程池满和Full GC")])]),a._v(" "),s("p",[a._v("这是一个报接口线程池满的问题。但每次都会在同一时间Full GC。监控图大概长这样：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230718212701999.png",alt:"image-20230718212701999"}}),a._v("^案例3^")]),a._v(" "),s("p",[a._v("从时间上来看，先是Java线程数量飙升，然后触发Full GC。后面重启后，Java线程数量恢复正常水位。")]),a._v(" "),s("p",[a._v("这里涉及到一个冷知识：一个Java线程默认会占用多少内存？")]),a._v(" "),s("blockquote",[s("p",[a._v("->")]),a._v(" "),s("p",[a._v("这个参数可以控制：-XX:ThreadStackSize。在64 位的Linux下, 默认是1 MB（这个说法也不全对，还是取决于栈深度）。Java 11对这个有一个优化，可以减少内存占用。详情可以参考这篇文章：https://dzone.com/articles/how-much-memory-does-a-java-thread-take")]),a._v(" "),s("p",[a._v("<-")])]),a._v(" "),s("p",[a._v("排查下来根因是这个应用还是使用的Log4j 1，而Log4j 1有性能问题，在高并发下，下面这段代码的同步块可能会引起大量线程阻塞：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("void callAppenders(LoggingEvent event) {\n    int writes = 0;\n\n    for(Category c = this; c != null; c=c.parent) {\n        // Protected against simultaneous call to addAppender, removeAppender,...\n        synchronized(c) {\n            if(c.aai != null) {\n                writes += c.aai.appendLoopOnAppenders(event);\n            }\n            if(!c.additive) {\n                break;\n            }\n        }\n    }\n\n    if(writes == 0) {\n        repository.emitNoAppenderWarning(this);\n    }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("p",[a._v("解决办法就是减少日志打印，升级日志框架到Log4j 2或者Logback。")]),a._v(" "),s("h3",{attrs:{id:"应用启动时full-gc频繁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用启动时full-gc频繁"}},[a._v("#")]),a._v(" 应用启动时Full GC频繁")]),a._v(" "),s("p",[a._v("这个是较早的一个案例了，GC图已经找不到了。")]),a._v(" "),s("p",[a._v("但引发Full GC频繁的大概就这几种可能性：")]),a._v(" "),s("ul",[s("li",[a._v("调用System.gc()")]),a._v(" "),s("li",[a._v("Old区空间不足")]),a._v(" "),s("li",[a._v("永久代/元空间满")])]),a._v(" "),s("p",[a._v("根据代码和GC图排除了前面两种可能性，那就是元空间满了。在Java 8中，"),s("code",[a._v("XX:MaxMetaspaceSize")]),a._v("是没有上限的，最大容量与机器的内存有关；但是"),s("code",[a._v("XX:MetaspaceSize")]),a._v("是有一个默认值的：21M。而如果应用需要进元空间的对象较多（比如有大量代码），就会频繁触发Full GC。解决办法是可以通过JVM参数指定元空间大小："),s("code",[a._v("-XX:MetaspaceSize=128M")]),a._v("。")]),a._v(" "),s("h2",{attrs:{id:"_2-大型调优问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-大型调优问题"}},[a._v("#")]),a._v(" 2.大型调优问题")]),a._v(" "),s("h3",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[a._v("#")]),a._v(" 背景")]),a._v(" "),s("p",[a._v("我们都知道 JVM 分为了新生代和老年代，并且我们在启动应用的时候都会配置对应的参数，为应用程序运行的 JVM 调整内存大小。但我们都知道，很多时候我们都只是大致估计一个数，随便填填，然后就上线了。")]),a._v(" "),s("p",[a._v("作者所在的公司同样存在这种情况，JVM 内存大小基本上都设得挺大的，毕竟内存大总比内存溢出好，因此就造成了不少的内存浪费。所以作者收到的任务就是对所有的应用进行一次排查，调整合适的内存参数，优化 JVM 的性能。")]),a._v(" "),s("h3",{attrs:{id:"调优实战"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调优实战"}},[a._v("#")]),a._v(" 调优实战")]),a._v(" "),s("p",[a._v("要对应用进行 JVM 性能调优，那么首先得知道其运行的情况。这就像去医院看医生，去开药之前需要医生先望闻问切一样。在 Java 中，有很多方式可以观察到 JVM 的内部情况，例如 JDK 提供的各种命令工作。作者所在公司使用的是 Prometheus 进行监控，因此我们可以直接在 Prometheus 上看到应用的 JVM 运行情况。")]),a._v(" "),s("p",[a._v("Prometheus 面板中与 JVM 相关的主要有四块内容：JVM Misc、JVM Memory Pools（Heap）、JVM Memory Pools（Non-Heap）、Garbage Collection。其中与我们此次较为相关的主要是：JVM Memory Pools（Heap）和 Garbage Collection。")]),a._v(" "),s("p",[a._v("JVM Memory Pools（Heap） 展示 JVM 堆内存的使用情况，主要包括了新生代的 Survivor 区、Eden Space 区、老年代。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220534324.png",alt:"image-20230719220534324"}})]),a._v(" "),s("p",[a._v("Garbage Collection 展示 JVM 的垃圾回收情况，主要包括垃圾回收频率（ops 表示一秒回收几次，一般 0.5 是比较合理的值）、每次 GC 停顿时长（一般 80ms 以下是合理值）、分配到新生代/晋升老年代的内存。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220543397.png",alt:"image-20230719220543397"}})]),a._v(" "),s("p",[a._v("我们要进行 JVM 性能优化，那么最简单的一个方法就是观察 Garbage Collection 的 GC 频率以及停顿时间，我们大致就能判断出应用的内存利用效率。之后根据这两个值的实际情况，将其调整到合理的范围内，提高 JVM 的利用率。")]),a._v(" "),s("p",[a._v("如果一个应用的 GC 频率只有 0.02，即每秒 GC 0.02 次，那么需要 50 秒才 GC 一次，那么其 GC 频率是很低的。这时候很可能是分配了较大的新生代空间，这使得其很久才需要 GC 一次。这时候我们再看看其停顿时间，如果停顿时间也很短的话，那我们就可以判定该应用的内存有优化的空间。")]),a._v(" "),s("p",[a._v("在这种情况下，一般都是缩小分配的新生代的空间。新生代空间一旦变小了，那么其分配完的时间就会缩减。一旦空间被分配完，那么就会启动进行 GC 操作。"),s("strong",[a._v("我们就是通过调整 JVM 的内存空间，来提高 GC 的频率，从而使其处于一个合理的空间。")])]),a._v(" "),s("p",[s("strong",[a._v("在进行内存空间调整的时候，为了避免内存剧烈波动导致的问题，一般我们都是小步快跑地一点点调整。先调整一点试一试，没太大问题之后再调整到目标值。")]),a._v(" 毕竟是生产环境，要是出了什么叉子，那就得提桶跑路了，还是谨慎为好！")]),a._v(" "),s("p",[a._v("看到这里，想必大家应该也知道怎么做了。接下来无非就是调整 JVM 内存空间的三个参数（-Xmx -Xms -Xmn），使 GC 频率与 GC 停顿时间处于合理的区间。")]),a._v(" "),s("h3",{attrs:{id:"应用层面优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用层面优化"}},[a._v("#")]),a._v(" 应用层面优化")]),a._v(" "),s("p",[a._v("除了 GC 频率、GC 停顿时间，我们还能从应用的类型来分析 JVM 的内存消耗情况。")]),a._v(" "),s("p",[a._v("例如对于接口类型的系统来说，很多请求都是 1 秒中之内就结束。对于这种类型的请求，他们进入应用时会分配内存，结束时内存就会立刻被回收，留存下来的对象很少。这种应用的 JVM 内存情况大概是这样的：新生代消耗比较大，并且随着周期性回收内存，但老年代的内存消耗则更小。对于那些持续性处理的应用，例如持续时间长的应用处理。因为其存活时间较久，所以可能会有更多的对象晋升到老年代，因此老年代的内存消耗就比较大。")]),a._v(" "),s("p",[a._v("通过观察 JVM 年轻代与老年代的内存消耗情况，再结合应用本身的特性，我们可以发现应用中不合理的地方，再对应用进行针对性的优化。例如：应用某个地方每次都会存储大量的临时数据到内容中，这样就造成了 JVM 可能爆发 GC，从而导致应用卡顿。")]),a._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("总结一下本篇文章的调优方法："),s("strong",[a._v("通过观察 GC 频率和停顿时间，来进行 JVM 内存空间调整，使其达到最合理的状态。调整过程记得小步快跑，避免内存剧烈波动影响线上服务。")]),a._v(" 这其实是最为简单的一种 JVM 性能调优方式了，可以算是粗调吧。但 JVM 性能调优还有更多、更详细的参数，后续有机会我们再聊聊。")]),a._v(" "),s("p",[a._v("此外，通过观察 JVM 年轻代与老年代的情况，也可以帮助我们对应用进行针对性的优化，从而提升应用本身的性能。")]),a._v(" "),s("p",[a._v("如果你之前没了解过 JVM 的基础理论知识，那么你可能看不懂这篇文章。那么我推荐你看看我的「JVM 基础入门系列」，文章由浅入深、循序渐进，可以让你对 JVM 有个感性的理解。看完之后再来看这篇文章，你肯定有种豁然开朗的感觉！")]),a._v(" "),s("h2",{attrs:{id:"_3-young-gc问题排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-young-gc问题排查"}},[a._v("#")]),a._v(" 3. young GC问题排查")]),a._v(" "),s("p",[a._v("在高并发下，Java程序的GC问题属于很典型的一类问题，带来的影响往往会被进一步放大。不管是「GC频率过快」还是「GC耗时太长」，由于GC期间都存在Stop The World问题，因此很容易导致服务超时，引发性能问题。")]),a._v(" "),s("p",[a._v("我们团队负责的广告系统承接了比较大的C端流量，平峰期间的请求量基本达到了上千QPS，过去也遇到了很多次GC相关的线上问题。")]),a._v(" "),s("p",[a._v("这篇文章，我再分享一个更棘手的Young GC耗时过长的线上案例，同时会整理下YGC相关的知识点，希望让你有所收获。内容分成以下2个部分：")]),a._v(" "),s("ul",[s("li",[a._v("从一次YGC耗时过长的案例说起")]),a._v(" "),s("li",[a._v("YGC的相关知识点总结")])]),a._v(" "),s("h3",{attrs:{id:"从一次ygc耗时过长的案例说起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从一次ygc耗时过长的案例说起"}},[a._v("#")]),a._v(" 从一次YGC耗时过长的案例说起")]),a._v(" "),s("p",[a._v("今年4月份，我们的广告服务在新版本上线后，收到了大量的服务超时告警，通过下面的监控图可以看到：超时量突然大面积增加，1分钟内甚至达到了上千次接口超时。下面详细介绍下该问题的排查过程。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220551786.png",alt:"image-20230719220551786"}})]),a._v(" "),s("h4",{attrs:{id:"检查监控"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查监控"}},[a._v("#")]),a._v(" 检查监控")]),a._v(" "),s("p",[a._v("收到告警后，我们第一时间查看了监控系统，立马发现了YoungGC耗时过长的异常。我们的程序大概在21点50左右上线，通过下图可以看出：在上线之前，YGC基本几十毫秒内完成，而上线后YGC耗时明显变长，最长甚至达到了3秒多。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220600276.png",alt:"image-20230719220600276"}})]),a._v(" "),s("p",[a._v("由于YGC期间程序会Stop The World，而我们上游系统设置的服务超时时间都在几百毫秒，因此推断：是因为YGC耗时过长引发了服务大面积超时。\n按照GC问题的常规排查流程，我们立刻摘掉了一个节点，然后通过以下命令dump了堆内存文件用来保留现场。\njmap -dump:format=b,file=heap pid\n最后对线上服务做了回滚处理，回滚后服务立马恢复了正常，接下来就是长达1天的问题排查和修复过程。")]),a._v(" "),s("h4",{attrs:{id:"确认jvm配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#确认jvm配置"}},[a._v("#")]),a._v(" 确认JVM配置")]),a._v(" "),s("p",[a._v("用下面的命令，我们再次检查了JVM的参数")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('ps aux | grep "applicationName=adsearch"\n-Xms4g -Xmx4g -Xmn2g -Xss1024K \n-XX:ParallelGCThreads=5 \n-XX:+UseConcMarkSweepGC \n-XX:+UseParNewGC \n-XX:+UseCMSCompactAtFullCollection \n-XX:CMSInitiatingOccupancyFraction=80\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("可以看到堆内存为4G，新生代和老年代均为2G，新生代采用ParNew收集器。\n再通过命令 jmap -heap pid 查到：新生代的Eden区为1.6G，S0和S1区均为0.2G。\n本次上线并未修改JVM相关的任何参数，同时我们服务的请求量基本和往常持平。因此猜测：此问题大概率和上线的代码相关。")]),a._v(" "),s("h4",{attrs:{id:"检查代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检查代码"}},[a._v("#")]),a._v(" 检查代码")]),a._v(" "),s("p",[a._v("再回到YGC的原理来思考这个问题，一次YGC的过程主要包括以下两个步骤：")]),a._v(" "),s("blockquote",[s("p",[a._v("1、从GC Root扫描对象，对存活对象进行标注\n2、将存活对象复制到S1区或者晋升到Old区")])]),a._v(" "),s("p",[a._v("根据下面的监控图可以看出：正常情况下，Survivor区的使用率一直维持在很低的水平（大概30M左右），但是上线后，Survivor区的使用率开始波动，最多的时候快占满0.2G了。而且，YGC耗时和Survivor区的使用率基本成正相关。因此，我们推测：应该是长生命周期的对象越来越多，导致标注和复制过程的耗时增加。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220608837.png",alt:"image-20230719220608837"}})]),a._v(" "),s("p",[a._v("再回到服务的整体表现：上游流量并没有出现明显变化，正常情况下，核心接口的响应时间也基本在200ms以内，YGC的频率大概每8秒进行1次。")]),a._v(" "),s("p",[a._v("很显然，对于局部变量来说，在每次YGC后就能够马上被回收了。那为什么还会有如此多的对象在YGC后存活下来呢？")]),a._v(" "),s("p",[a._v("我们进一步将怀疑对象锁定在：程序的全局变量或者类静态变量上。但是diff了本次上线的代码，我们并未发现代码中有引入此类变量。")]),a._v(" "),s("h4",{attrs:{id:"对dump的堆内存文件进行分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对dump的堆内存文件进行分析"}},[a._v("#")]),a._v(" 对dump的堆内存文件进行分析")]),a._v(" "),s("p",[a._v("代码排查没有进展后，我们开始从堆内存文件中寻找线索，使用MAT工具导入了第1步dump出来的堆文件后，然后通过Dominator Tree视图查看到了当前堆中的所有大对象。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220615875.png",alt:"image-20230719220615875"}})]),a._v(" "),s("p",[a._v("立马发现NewOldMappingService这个类所占的空间很大，通过代码定位到：这个类位于第三方的client包中，由我们公司的商品团队提供，用于实现新旧类目转换（最近商品团队在对类目体系进行改造，为了兼容旧业务，需要进行新旧类目映射）。")]),a._v(" "),s("p",[a._v("进一步查看代码，发现这个类中存在大量的静态HashMap，用于缓存新旧类目转换时需要用到的各种数据，以减少RPC调用，提高转换性能。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220622515.png",alt:"image-20230719220622515"}})]),a._v(" "),s("p",[a._v("原本以为，非常接近问题的真相了，但是深入排查发现：这个类的所有静态变量全部在类加载时就初始化完数据了，虽然会占到100多M的内存，但是之后基本不会再新增数据。并且，这个类早在3月份就上线使用了，client包的版本也一直没变过。")]),a._v(" "),s("p",[a._v("经过上面种种分析，这个类的静态HashMap会一直存活，经过多轮YGC后，最终晋升到老年代中，它不应该是YGC持续耗时过长的原因。因此，我们暂时排除了这个可疑点。")]),a._v(" "),s("h4",{attrs:{id:"分析ygc处理reference的耗时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分析ygc处理reference的耗时"}},[a._v("#")]),a._v(" 分析YGC处理Reference的耗时")]),a._v(" "),s("p",[a._v("团队对于YGC问题的排查经验很少，不知道再往下该如何分析了。基本扫光了网上可查到的所有案例，发现原因集中在这两类上：")]),a._v(" "),s("blockquote",[s("p",[a._v("1、对存活对象标注时间过长：比如重载了Object类的Finalize方法，导致标注Final Reference耗时过长；或者String.intern方法使用不当，导致YGC扫描StringTable时间过长。\n2、长周期对象积累过多：比如本地缓存使用不当，积累了太多存活对象；或者锁竞争严重导致线程阻塞，局部变量的生命周期变长。")])]),a._v(" "),s("p",[a._v("针对第1类问题，可以通过以下参数显示GC处理Reference的耗时-XX:+PrintReferenceGC。添加此参数后，可以看到不同类型的 reference 处理耗时都很短，因此又排除了此项因素。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220629198.png",alt:"image-20230719220629198"}})]),a._v(" "),s("h4",{attrs:{id:"再回到长周期对象进行分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#再回到长周期对象进行分析"}},[a._v("#")]),a._v(" 再回到长周期对象进行分析")]),a._v(" "),s("p",[a._v("再往后，我们添加了各种GC参数试图寻找线索都没有结果，似乎要黔驴技穷，没有思路了。综合监控和种种分析来看：应该只有长周期对象才会引发我们这个问题。\n折腾了好几个小时，最终峰回路转，一个小伙伴重新从MAT堆内存中找到了第二个怀疑点。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220637906.png",alt:"image-20230719220637906"}})]),a._v(" "),s("p",[a._v("从上面的截图可以看到：大对象中排在第3位的ConfigService类进入了我们的视野，该类的一个ArrayList变量中竟然包含了270W个对象，而且大部分都是相同的元素。\nConfigService这个类在第三方Apollo的包中，不过源代码被公司架构部进行了二次改造，通过代码可以看出："),s("strong",[a._v("问题出在了第11行，每次调用getConfig方法时都会往List中添加元素，并且未做去重处理")]),a._v("。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220645842.png",alt:"image-20230719220645842"}})]),a._v(" "),s("p",[a._v("我们的广告服务在apollo中存储了大量的广告策略配置，而且大部分请求都会调用ConfigService的getConfig方法来获取配置，因此会不断地往静态变量namespaces中添加新对象，从而引发此问题。")]),a._v(" "),s("p",[a._v("至此，整个问题终于水落石出了。这个BUG是因为架构部在对apollo client包进行定制化开发时不小心引入的，很显然没有经过仔细测试，并且刚好在我们上线前一天发布到了中央仓库中，而公司基础组件库的版本是通过super-pom方式统一维护的，业务无感知。")]),a._v(" "),s("h4",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),s("p",[a._v("为了快速验证YGC耗时过长是因为此问题导致的，我们在一台服务器上直接用旧版本的apollo client 包进行了替换，然后重启了服务，观察了将近20分钟，YGC恢复正常。\n最后，我们通知架构部修复BUG，重新发布了super-pom，彻底解决了这个问题。\n02 YGC的相关知识点总结\n通过上面这个案例，可以看到YGC问题其实比较难排查。相比FGC或者OOM，YGC的日志很简单，只知道新生代内存的变化和耗时，同时dump出来的堆内存必须要仔细排查才行。")]),a._v(" "),s("p",[a._v("另外，如果不清楚YGC的流程，排查起来会更加困难。这里，我对YGC相关的知识点再做下梳理，方便大家更全面的理解YGC。")]),a._v(" "),s("h3",{attrs:{id:"ygc的相关知识点总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ygc的相关知识点总结"}},[a._v("#")]),a._v(" YGC的相关知识点总结")]),a._v(" "),s("h4",{attrs:{id:"_5个问题重新认识新生代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5个问题重新认识新生代"}},[a._v("#")]),a._v(" 5个问题重新认识新生代")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220653122.png",alt:"image-20230719220653122"}})]),a._v(" "),s("p",[a._v("YGC 在新生代中进行，首先要清楚新生代的堆结构划分。新生代分为Eden区和两个Survivor区，其中Eden:from:to = 8:1:1 (比例可以通过参数 –XX:SurvivorRatio 来设定 )，这是最基本的认识。")]),a._v(" "),s("p",[s("strong",[a._v("为什么会有新生代？")])]),a._v(" "),s("p",[a._v("如果不分代，所有对象全部在一个区域，每次GC都需要对全堆进行扫描，存在效率问题。分代后，可分别控制回收频率，并采用不同的回收算法，确保GC性能全局最优。")]),a._v(" "),s("p",[s("strong",[a._v("为什么新生代会采用复制算法？")])]),a._v(" "),s("p",[a._v("新生代的对象朝生夕死，大约90%的新建对象可以被很快回收，复制算法成本低，同时还能保证空间没有碎片。虽然标记整理算法也可以保证没有碎片，但是由于新生代要清理的对象数量很大，将存活的对象整理到待清理对象之前，需要大量的移动操作，时间复杂度比复制算法高。")]),a._v(" "),s("p",[s("strong",[a._v("为什么新生代需要两个Survivor区？")])]),a._v(" "),s("p",[a._v("为了节省空间考虑，如果采用传统的复制算法，只有一个Survivor区，则Survivor区大小需要等于Eden区大小，此时空间消耗是8 * 2，而两块Survivor可以保持新对象始终在Eden区创建，存活对象在Survivor之间转移即可，空间消耗是8+1+1，明显后者的空间利用率更高。")]),a._v(" "),s("p",[s("strong",[a._v("新生代的实际可用空间是多少？")])]),a._v(" "),s("p",[a._v("YGC后，总有一块Survivor区是空闲的，因此新生代的可用内存空间是90%。在YGC的log中或者通过 jmap -heap pid 命令查看新生代的空间时，如果发现capacity只有90%，不要觉得奇怪。")]),a._v(" "),s("p",[s("strong",[a._v("Eden区是如何加速内存分配的？")])]),a._v(" "),s("p",[a._v("HotSpot虚拟机使用了两种技术来加快内存分配。分别是bump-the-pointer和TLAB（Thread Local Allocation Buffers）。")]),a._v(" "),s("p",[a._v("由于Eden区是连续的，因此bump-the-pointer在对象创建时，只需要检查最后一个对象后面是否有足够的内存即可，从而加快内存分配速度。")]),a._v(" "),s("p",[a._v("TLAB技术是对于多线程而言的，在Eden中为每个线程分配一块区域，减少内存分配时的锁冲突，加快内存分配速度，提升吞吐量。")]),a._v(" "),s("h4",{attrs:{id:"新生代的4种回收器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新生代的4种回收器"}},[a._v("#")]),a._v(" 新生代的4种回收器")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220705722.png",alt:"image-20230719220705722"}})]),a._v(" "),s("p",[a._v("SerialGC（串行回收器），最古老的一种，单线程执行，适合单CPU场景。")]),a._v(" "),s("p",[a._v("ParNew（并行回收器），将串行回收器多线程化，适合多CPU场景，需要搭配老年代CMS回收器一起使用。")]),a._v(" "),s("p",[a._v("ParallelGC（并行回收器），和ParNew不同点在于它关注吞吐量，可设置期望的停顿时间，它在工作时会自动调整堆大小和其他参数。")]),a._v(" "),s("p",[a._v("G1（Garage-First回收器），JDK 9及以后版本的默认回收器，兼顾新生代和老年代，将堆拆成一系列Region，不要求内存块连续，新生代仍然是并行收集。")]),a._v(" "),s("p",[a._v("上述回收器均采用复制算法，都是独占式的，执行期间都会Stop The World.")]),a._v(" "),s("h4",{attrs:{id:"ygc的触发时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ygc的触发时机"}},[a._v("#")]),a._v(" YGC的触发时机")]),a._v(" "),s("p",[a._v("当Eden区空间不足时，就会触发YGC。结合新生代对象的内存分配看下详细过程：")]),a._v(" "),s("p",[a._v("1、新对象会先尝试在栈上分配，如果不行则尝试在TLAB分配，否则再看是否满足大对象条件要在老年代分配，最后才考虑在Eden区申请空间。")]),a._v(" "),s("p",[a._v("2、如果Eden区没有合适的空间，则触发YGC。")]),a._v(" "),s("p",[a._v("3、YGC时，对Eden区和From Survivor区的存活对象进行处理，如果满足动态年龄判断的条件或者To Survivor区空间不够则直接进入老年代，如果老年代空间也不够了，则会发生promotion failed，触发老年代的回收。否则将存活对象复制到To Survivor区。")]),a._v(" "),s("p",[a._v("4、此时Eden区和From Survivor区的剩余对象均为垃圾对象，可直接抹掉回收。")]),a._v(" "),s("p",[a._v("此外，老年代如果采用的是CMS回收器，为了减少CMS Remark阶段的耗时，也有可能会触发一次YGC，这里不作展开。")]),a._v(" "),s("h4",{attrs:{id:"ygc的执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ygc的执行过程"}},[a._v("#")]),a._v(" YGC的执行过程")]),a._v(" "),s("p",[a._v("YGC采用的复制算法，主要分成以下两个步骤：")]),a._v(" "),s("blockquote",[s("p",[a._v("1、查找GC Roots，将其引用的对象拷贝到S1区\n2、递归遍历第1步的对象，拷贝其引用的对象到S1区或者晋升到Old区")])]),a._v(" "),s("p",[a._v("上述整个过程都是需要暂停业务线程的（STW），不过ParNew等新生代回收器可以多线程并行执行，提高处理效率。\nYGC通过可达性分析算法，从GC Root（可达对象的起点）开始向下搜索，标记出当前存活的对象，那么剩下未被标记的对象就是需要回收的对象。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220713899.png",alt:"image-20230719220713899"}})]),a._v(" "),s("p",[a._v("可作为YGC时GC Root的对象包括以下几种：")]),a._v(" "),s("blockquote",[s("p",[a._v("1、虚拟机栈中引用的对象\n2、方法区中静态属性、常量引用的对象\n3、本地方法栈中引用的对象\n4、被Synchronized锁持有的对象\n5、记录当前被加载类的SystemDictionary\n6、记录字符串常量引用的StringTable\n7、存在跨代引用的对象\n8、和GC Root处于同一CardTable的对象")])]),a._v(" "),s("p",[a._v("其中1-3是大家容易想到的，而4-8很容易被忽视，却极有可能是分析YGC问题时的线索入口。")]),a._v(" "),s("p",[a._v("另外需要注意的是，针对下图中跨代引用的情况，老年代的对象A也必须作为GC Root的一部分，但是如果每次YGC时都去扫描老年代，肯定存在效率问题。在HotSpot JVM，引入卡表（Card Table）来对跨代引用的标记进行加速。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220721604.png",alt:"image-20230719220721604"}})]),a._v(" "),s("p",[a._v("Card Table，简单理解是一种空间换时间的思路，因为存在跨代引用的对象大概占比不到1%，因此可将堆空间划分成大小为512字节的卡页，如果卡页中有一个对象存在跨代引用，则可以用1个字节来标识该卡页是dirty状态，卡页状态进一步通过写屏障技术进行维护。")]),a._v(" "),s("p",[a._v("遍历完GC Roots后，便能够找出第一批存活的对象，然后将其拷贝到S1区。接下来，就是一个递归查找和拷贝存活对象的过程。")]),a._v(" "),s("p",[a._v("S1区为了方便维护内存区域，引入了两个指针变量：_saved_mark_word和_top，其中_saved_mark_word表示当前遍历对象的位置，_top表示当前可分配内存的位置，很显然，_saved_mark_word到_top之间的对象都是已拷贝但未扫描的对象。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220735174.png",alt:"image-20230719220735174"}})]),a._v(" "),s("p",[a._v("贝到S1区，_top也会往前移动，直到_saved_mark_word追上_top，说明S1区所有对象都已经遍历完成。")]),a._v(" "),s("p",[a._v("有一个细节点需要注意的是：拷贝对象的目标空间不一定是S1区，也可能是老年代。如果一个对象的年龄（经历的YGC次数）满足动态年龄判定条件便直接晋升到老年代中。对象的年龄保存在Java对象头的mark word数据结构中（如果大家对Java并发锁熟悉，肯定了解这个数据结构，不熟悉的建议查阅资料了解下，这里不做展开）。")]),a._v(" "),s("h3",{attrs:{id:"最后的话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后的话"}},[a._v("#")]),a._v(" 最后的话")]),a._v(" "),s("p",[a._v("这篇文章通过线上案例分析并结合原理讲解，详细介绍了YGC的相关知识。从YGC实战角度出发，再简单总结一下：\n1、首先要清楚YGC的执行原理，比如年轻代的堆内存结构、Eden区的内存分配机制、GC Roots扫描、对象拷贝过程等。\n2、YGC的核心步骤是标注和复制，绝部分YGC问题都集中在这两步，因此可以结合YGC日志和堆内存变化情况逐一排查，同时dump的堆内存文件需要仔细分析。")]),a._v(" "),s("h2",{attrs:{id:"_4-一次大量-jvm-native-内存泄露的排查分析-64m-问题-【难】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-一次大量-jvm-native-内存泄露的排查分析-64m-问题-【难】"}},[a._v("#")]),a._v(" 4. 一次大量 JVM Native 内存泄露的排查分析（64M 问题）【难】")]),a._v(" "),s("p",[a._v("我们有一个线上的项目，刚启动完就占用了使用 top 命令查看 RES 占用了超过 1.5G，这明显不合理，于是进行了一些分析找到了根本的原因，下面是完整的分析过程，希望对你有所帮助。")]),a._v(" "),s("p",[a._v("会涉及到下面这些内容")]),a._v(" "),s("ul",[s("li",[a._v("Linux 经典的 64M 内存问题")]),a._v(" "),s("li",[a._v("堆内存分析、Native 内存分析的基本套路")]),a._v(" "),s("li",[a._v("tcmalloc、jemalloc 在 native 内存分析中的使用")]),a._v(" "),s("li",[a._v("finalize 原理")]),a._v(" "),s("li",[a._v("hibernate 毁人不倦")])]),a._v(" "),s("h3",{attrs:{id:"现象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现象"}},[a._v("#")]),a._v(" 现象")]),a._v(" "),s("p",[a._v("程序启动的参数")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("shell复制代码ENV"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("FAT "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Xms1g")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Xmx1g")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-XX:MetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("120m \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-XX:MaxMetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("400m \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-XX:+UseConcMarkSweepGC")]),a._v("  \n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" \nEasiCareBroadCastRPC.jar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("启动后内存占用如下，惊人的 1.5G，Java 是内存大户，但是你也别这么玩啊。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220743330.png",alt:"image-20230719220743330"}})]),a._v(" "),s("p",[a._v("下面是愉快的分析过程。")]),a._v(" "),s("h3",{attrs:{id:"柿子先挑软的捏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柿子先挑软的捏"}},[a._v("#")]),a._v(" 柿子先挑软的捏")]),a._v(" "),s("p",[a._v("先通过 jcmd 或者 jmap 查看堆内存是否占用比较高，如果是这个问题，那很快就可以解决了。")]),a._v(" "),s("p",[a._v("可以看到堆内存占用 216937K + 284294K = 489.48M，Metaspace 内存虽然不属于 Java 堆，这里也显示了出来占用 80M+，这两部分加起来，远没有到 1.5G。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220750568.png",alt:"image-20230719220750568"}})]),a._v(" "),s("p",[a._v("那剩下的内存去了哪里？到这里，已经可以知道可能是堆以外的部分占用了内存，接下来就是开始使用 "),s("code",[a._v("NativeMemoryTracking")]),a._v(" 来进行下一步分析。")]),a._v(" "),s("h3",{attrs:{id:"nativememorytracking-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nativememorytracking-使用"}},[a._v("#")]),a._v(" NativeMemoryTracking 使用")]),a._v(" "),s("p",[a._v("如果要跟踪其它部分的内存占用，需要通过 "),s("code",[a._v("-XX:NativeMemoryTracking")]),a._v(" 来开启这个特性")]),a._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("java -XX:NativeMemoryTracking")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("[off | summary | detail]")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("加入这个启动参数，重新启动进程，随后使用 jcmd 来打印相关的信息。")]),a._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[a._v("$ jcmd `jps | grep -v Jps | awk '{print $1}'` VM.native_memory detail\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("Total: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("2656938KB, committed=1405158KB")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                 Java Heap (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1048576KB, committed=1048576KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(mmap: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1048576KB, committed=1048576KB)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                     Class (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1130053KB, committed=90693KB)")]),a._v("\n                            (classes #15920)\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1605KB #13168)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(mmap: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1128448KB, committed=89088KB)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                    Thread (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("109353KB, committed=109353KB)")]),a._v("\n                            (thread #107)\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(stack: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("108884KB, committed=108884KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("345KB #546)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(arena")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("124KB #208)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                      Code (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("257151KB, committed=44731KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("7551KB #9960)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(mmap: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("249600KB, committed=37180KB)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                        GC (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("26209KB, committed=26209KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("22789KB #306)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(mmap: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("3420KB, committed=3420KB)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                  Compiler (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("226KB, committed=226KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("95KB #679)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(arena")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("131KB #7)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                  Internal (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("15063KB, committed=15063KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("15031KB #20359)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(mmap: reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("32KB, committed=32KB)")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("-                    Symbol (reserved")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("22139KB, committed=22139KB)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("18423KB #196776)")]),a._v("\n                            "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("(arena")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("3716KB #1)")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br")])]),s("p",[a._v("很失望，这里面显示的所有的部分，看起来都很正常，没有特别大异常占用的情况，到这里我们基本上可以知道是不受 JVM 管控的 native 内存出了问题，那要怎么分析呢？")]),a._v(" "),s("h3",{attrs:{id:"pmap-初步查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pmap-初步查看"}},[a._v("#")]),a._v(" pmap 初步查看")]),a._v(" "),s("p",[a._v("通过 pmap 我们可以查看进程的内存分布，可以看到有大量的 64M 内存区块区域，这部分是 linux 内存 ptmalloc 的典型现象，这个问题在之前的一篇「一次 Java 进程 OOM 的排查分析（glibc 篇）」已经介绍过了，详见："),s("a",{attrs:{href:"https://juejin.cn/post/6854573220733911048",target:"_blank",rel:"noopener noreferrer"}},[a._v("juejin.cn/post/685457…"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/90a10f614a004a4f93fdcf6cc1a4c912~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",alt:"img"}})]),a._v(" "),s("p",[a._v("那这 64M 的内存区域块，是不是在上面 NMT 统计的内存区域里呢？")]),a._v(" "),s("p",[a._v("NMT 工具的地址输出 detail 模式会把每个区域的起始结束地址输出出来，如下所示。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220805768.png",alt:"image-20230719220805768"}})]),a._v(" "),s("p",[a._v("写一个简单的代码（自己正则搞一下就行了）就可以将 pmap、nmt 两部分整合起来，看看真正的堆、栈、GC 等内存占用分布在内存地址空间的哪一个部分。")]),a._v(" "),s("p",[a._v("可以看到大量 64M 部分的内存区域不属于任何 NMT 管辖的部分。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf756676bbcc46d0b7b1cbe2e4a671d5~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",alt:"img"}})]),a._v(" "),s("h3",{attrs:{id:"tcmalloc、jemalloc-来救场"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcmalloc、jemalloc-来救场"}},[a._v("#")]),a._v(" tcmalloc、jemalloc 来救场")]),a._v(" "),s("p",[a._v("我们可以通过 tcmalloc 或者 jemalloc 可以做 native 内存分配的追踪，它们的原理都是 hook 系统 malloc、free 等内存申请释放函数的实现，增加 profile 的逻辑。")]),a._v(" "),s("p",[a._v("下面以 tcmalloc 为例。")]),a._v(" "),s("p",[a._v("从源码编译 tcmalloc（"),s("a",{attrs:{href:"https://link.juejin.cn?target=http%3A%2F%2Fgithub.com%2Fgperftools%2Fgperftools%EF%BC%89%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%9A%E8%BF%87",target:"_blank",rel:"noopener noreferrer"}},[a._v("github.com/gperftools/…"),s("OutboundLink")],1),a._v(" "),s("code",[a._v("LD_PRELOAD")]),a._v(" 来 hook 内存分配释放的函数。")]),a._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("HEAPPROFILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("./heap.log")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("HEAP_PROFILE_ALLOCATION_INTERVAL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("104857600")]),a._v(" \n"),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("LD_PRELOAD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("./libtcmalloc_and_profiler.so")]),a._v("\njava -jar xxx ...\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("启动过程中就会看到生成了很多内存 dump 的分析文件，接下来使用 pprof 将 heap 文件转为可读性比较好的 pdf 文件。")]),a._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[a._v("pprof --pdf /path/to/java heap.log.xx.heap > test.pdf\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("内存申请的链路如下图所示。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220819176.png",alt:"image-20230719220819176"}})]),a._v(" "),s("p",[a._v("可以看到绝大部分的内存申请都耗在了 "),s("code",[a._v("Java_java_util_zip_Inflater_inflateBytes")]),a._v("，jar 包本质就是一个 zip 包， 在读取 jar 包文件过程中大量使用了 jni 中的 cpp 代码来处理，这里面大量申请释放了内存。")]),a._v(" "),s("h3",{attrs:{id:"不用改代码的解决方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不用改代码的解决方式"}},[a._v("#")]),a._v(" 不用改代码的解决方式")]),a._v(" "),s("p",[a._v("既然是因为读取 jar 包这个 zip 文件导致的内存疯长，那我不用 "),s("code",[a._v("java -jar")]),a._v("，直接把原 jar 包解压，然后用 "),s("code",[a._v("java -cp . AppMain")]),a._v(" 来启动是不是可以避免这个问题呢？因为我们项目因为历史原因是使用 shade 的方式，里面已经没有任何 jar 包了，全是 class 文件。奇迹出现了，不用 jar 包启动，RES 占用只有 400M，神奇不神奇！")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220826689.png",alt:"image-20230719220826689"}})]),a._v(" "),s("p",[a._v("到这里，我们更加确定是 jar 包启动导致的问题，那为什么 jar 包启动会导致问题呢？")]),a._v(" "),s("h3",{attrs:{id:"探究根本原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#探究根本原因"}},[a._v("#")]),a._v(" 探究根本原因")]),a._v(" "),s("p",[a._v("通过 tcmalloc 可以看到大量申请释放内存的地方在 java.util.zip.Inflater 类，调用它的 end 方法会释放 native 的内存。")]),a._v(" "),s("p",[a._v("我本以为是 end 方法没有调用导致的，这种的确是有可能的，java.util.zip.InflaterInputStream 类的 close 方法在一些场景下是不会调用 Inflater.end 方法，如下所示。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220832153.png",alt:"image-20230719220832153"}})]),a._v(" "),s("p",[a._v("但是 Inflater 类有实现 finalize 方法，在 Inflater 对象不可达以后，JVM 会帮忙调用 Inflater 类的 finalize 方法，")]),a._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Inflater")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        synchronized "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("zsRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")])]),a._v(" addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" zsRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            zsRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n     * Closes the decompressor when garbage is collected.\n     */")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("finalize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" native "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("initIDs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" native "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")])]),a._v(" addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br")])]),s("p",[a._v("有两种可能性")]),a._v(" "),s("ul",[s("li",[a._v("Inflater 因为被其它对象引用，没能释放，导致 finalize 方法不能被调用，内存自然没法释放")]),a._v(" "),s("li",[a._v("Inflater 的 finalize 方法被调用，但是被 libc 的  ptmalloc 缓存，没能真正释放回操作系统")])]),a._v(" "),s("p",[a._v("第二种可能性，我之前在另外一篇文章「一次 Java 进程 OOM 的排查分析（glibc 篇）」已经介绍过了，详见："),s("a",{attrs:{href:"https://juejin.cn/post/6854573220733911048",target:"_blank",rel:"noopener noreferrer"}},[a._v("juejin.cn/post/685457…"),s("OutboundLink")],1),a._v(" ，经验证，不是这个问题。")]),a._v(" "),s("p",[a._v("我们来看第一个可能性，通过 dump 堆内存来查看。果然，有 8 个 Inflater 对象还存活没能被 GC，除了被 JVM 内部的 java.lang.ref.Finalizer 引用，还有其它的引用，导致 Inflater 在 GC 时无法被回收。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220841665.png",alt:"image-20230719220841665"}})]),a._v(" "),s("p",[a._v("那这些内存是不是真的跟 64M 的内存区块有关呢？空口无凭，我们来确认一把。Inflater 类有一个 zsRef 字段，其实它就是一个指针地址，我们看看未释放的 Inflater 的 zsRef 地址是不是位于我们所说的 64M 内存区块里。")]),a._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Inflater")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" final "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ZStreamRef")]),a._v(" zsRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ZStreamRef")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("volatile")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")])]),a._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    ZStreamRef "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")])]),a._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("address "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        address "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br")])]),s("p",[a._v("通过一个 ZStreamRef 找到 address 等于 140686448095872，转为 16 进制为 0x7ff41dc37280，这个地址位于的虚拟地址空间在这里：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220849459.png",alt:"image-20230719220849459"}})]),a._v(" "),s("p",[a._v("正是在我们所说的 64M 内存区块中。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220857273.png",alt:"image-20230719220857273"}})]),a._v(" "),s("p",[a._v("如果你还不信，我们可以 dump 这块内存，我这里写了一个脚本")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /proc/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v("/maps "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Fv")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".so"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('" 0 "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{print $1}'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("IFS")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" a b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("dd")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/proc/"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v("/mem "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v(" getconf PAGESIZE "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("iflag")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("skip_bytes,count_bytes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("skip")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("x$a "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("x$b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("x$a "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("of")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1_mem_")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$a")]),a._v('.bin"')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("通过传入进程号和你想 dump 的内存起始地址，就可以把这块内存 dump 出来。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./dump.sh "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("pidof "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v(" 7ff41c000000\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("执行上面的脚本，传入两个参数，一个是进程 id，一个地址，会生成一个 64M 的内存 dump 文件，通过 strings 查看。")]),a._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[a._v("strings 6095_mem_7ff41c000000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("bin")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("输出结果如下，满屏的都是类文件相关的信息。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220918587.png",alt:"image-20230719220918587"}})]),a._v(" "),s("p",[a._v("到这里已经应该无需再证明什么了，剩下的就是分析的事了。")]),a._v(" "),s("p",[a._v("那到底是被谁引用的呢？展开引用链，看到出现了一堆 ClassLoader。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91bf915aadb44609a4efa4afcbfd7dc5~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",alt:"img"}})]),a._v(" "),s("h3",{attrs:{id:"一个意外的发现-与本问题关系不大-顺手解决一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个意外的发现-与本问题关系不大-顺手解决一下"}},[a._v("#")]),a._v(" 一个意外的发现（与本问题关系不大，顺手解决一下）")]),a._v(" "),s("p",[a._v("这里出现了一个很奇怪的 nashorn 相关的 ClassLoader，众所周不知，nashorn 是处理 JavaScript 相关的逻辑的，那为毛这个项目会用到 nashorn 呢？经过仔细搜索，项目代码并没有使用。")]),a._v(" "),s("p",[a._v("那是哪个坑货中间件引入的呢？debug 一下马上就找到了原因，原来是臭名昭著的 log4j2，用了这么多年 log4j，头一回知道，原来 log4j2 是支持 javaScript、Groovy 等脚本语言的。")]),a._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[a._v('<?xml version="1.0" encoding="UTF-8"?>')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("Configuration")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("status")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("RoutingTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("Scripts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("Script")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("language")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("javascript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token cdata"}},[a._v('<![CDATA[\n            var result;\n            if (logEvent.getLoggerName().equals("JavascriptNoLocation")) {\n                result = "NoLocation";\n            } else if (logEvent.getMarker() != null && logEvent.getMarker().isInstanceOf("FLOW")) {\n                result = "Flow";\n            }\n            result;\n            ]]>')]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("Script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("ScriptFile")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("groovy.filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("scripts/filter.groovy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("Scripts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("Configuration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("我们项目中并没有用到类似的特性（因为不知道），只能说真是无语，你好好的当一个工具人日志库不好吗，搞这么多花里胡哨的东西，肤浅！")]),a._v(" "),s("p",[a._v("代码在这里")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220927678.png",alt:"image-20230719220927678"}})]),a._v(" "),s("p",[a._v("这个问题我粗略看了一下，截止到官方最新版还没有一个开关可以关掉 ScriptEngine，不行就自己上，自己拉取项目中 log4j 对应版本的代码，做了修改，重新打包运行，")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220934319.png",alt:"image-20230719220934319"}})]),a._v(" "),s("p",[a._v("重新运行后 nashorn 部分的 ClassLoader 确实没有了，不过这里只是一个小插曲，native 内存占用的问题并没有解决。")]),a._v(" "),s("h3",{attrs:{id:"凶手浮出水面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#凶手浮出水面"}},[a._v("#")]),a._v(" 凶手浮出水面")]),a._v(" "),s("p",[a._v("接下来我们就要找哪些代码在疯狂调用 "),s("code",[a._v("java.util.zip.Inflater.inflateBytes")]),a._v(" 方法")]),a._v(" "),s("p",[a._v("使用 watch 每秒 jstack 一下线程，马上就看到了 hibernate 在疯狂的调用。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220940155.png",alt:"image-20230719220940155"}})]),a._v(" "),s("p",[a._v("hibernate 是我们历史老代码遗留下来的，一直没有移除掉，看来还是踩坑了。")]),a._v(" "),s("p",[a._v("找到这个函数对应代码 "),s("code",[a._v("org.hibernate.jpa.boot.archive.internal.JarFileBasedArchiveDescriptor#visitArchive#146")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220945771.png",alt:"image-20230719220945771"}})]),a._v(" "),s("p",[a._v("垃圾代码，"),s("code",[a._v("jarFile.getInputStream( zipEntry )")]),a._v(" 生成了一个新的流但没有做关闭处理。")]),a._v(" "),s("blockquote",[s("p",[a._v("其实我也不知道，为啥 hibernate 要把我 jar 包中所有的类都扫描解析一遍，完全有毛病。")])]),a._v(" "),s("p",[a._v("我们来把这段代码扒出来，写一个最简 demo。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarFileTest")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarFileTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("in"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBytesFromInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InputStream")]),a._v(" inputStream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 省略 read 的逻辑")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarFile")]),a._v(" jarFile "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            jarFile "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("JarFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/data/dev/broadcast/EasiCareBroadCastRPC.jar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Enumeration")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ZipEntry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" zipEntries "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" jarFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("entries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("zipEntries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("hasMoreElements")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ZipEntry")]),a._v(" zipEntry "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" zipEntries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("zipEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("isDirectory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("continue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" bytes "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBytesFromInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("jarFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("zipEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"processing: "')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" zipEntry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\t"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" bytes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("jarFile "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" jarFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br")])]),s("p",[a._v("运行上面的代码。")]),a._v(" "),s("div",{staticClass:"language-ruby line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ruby"}},[s("code",[a._v("javac JarFileTest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("java\njava "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Xms1g "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Xmx1g "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("XX")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[a._v(":MetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("120")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("XX")]),s("span",{pre:!0,attrs:{class:"token symbol"}},[a._v(":MaxMetaspaceSize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("400")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[a._v("XX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("UseConcMarkSweepGC  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("cp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" JarFileTest\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("内存 RES 占用立马飙升到了 1.2G 以上，且无论如何 GC 都无法回收，但堆内存几乎等于 0。")]),a._v(" "),s("p",[a._v("RES 内存占用如下所示。"),s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719220954750.png",alt:"image-20230719220954750"}})]),a._v(" "),s("p",[a._v("堆内存占用如下所示，经过 GC 以后新生代占用为 0，老年代占用为 275K")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719221002241.png",alt:"image-20230719221002241"}})]),a._v(" "),s("p",[a._v("全被 64M 内存占满。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719221010204.png",alt:"image-20230719221010204"}})]),a._v(" "),s("p",[a._v("通过修改代码，将流关闭")]),a._v(" "),s("div",{staticClass:"language-ini line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[a._v("while (zipEntries.hasMoreElements()) {\n    "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("final ZipEntry zipEntry")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("zipEntries.nextElement();")]),a._v("\n    if (zipEntry.isDirectory()) {\n        continue;\n    }\n\n    "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("InputStream is")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("jarFile.getInputStream(zipEntry);")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("byte[] bytes")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("getBytesFromInputStream(is);")]),a._v('\n\n    System.out.println("processing: " + zipEntry.getName() + "\\t" + bytes.length);\n    try {\n        is.close();\n    } catch (Exception e) {\n\n    }\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("p",[a._v("再次测试，问题解决了，native 内存占用几乎消失了，接下来就是解决项目中的问题。一种是彻底移除 hibernate，将它替换为我们现在在用的 mybatis，这个我不会。我打算来改一下 hibernate 的源码。")]),a._v(" "),s("h3",{attrs:{id:"尝试修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#尝试修改"}},[a._v("#")]),a._v(" 尝试修改")]),a._v(" "),s("p",[a._v("修改这段代码（ps这里是不成熟的改动，close 都应该放 finally，多个 close 需要分别捕获异常，但是为了简单，这里先简化），加入 close 的逻辑。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719221019223.png",alt:"image-20230719221019223"}})]),a._v(" "),s("p",[a._v("重新编译 hibernate，install 到本地，然后重新打包运行。此时 RES 占用从 1.5G 左右降到了 700 多 M。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719221026648.png",alt:"image-20230719221026648"}})]),a._v(" "),s("p",[a._v("而且比较可喜的是，64M 区块的 native 内存占用非常非常小，这里 700M 内存有 448M 是 dirty 的 heap 区，这部分只是 JVM 预留的。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8ec2adcdbb1e4ab79d307d8f4069a878~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp",alt:"img"}})]),a._v(" "),s("p",[a._v("到这里，我们基本上已经解决了这个问题。后面我去看了一下 hibernate 的源码，在新版本里面，已经解决了这个问题，但是我不打算升级了，干掉了事。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230719221036547.png",alt:"image-20230719221036547"}})]),a._v(" "),s("h3",{attrs:{id:"后记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后记"}},[a._v("#")]),a._v(" 后记")]),a._v(" "),s("p",[a._v("因为不是本文的重点，文章涉及的一些工具的使用，我没有展开来聊，大家感兴趣可以自己搞定。")]),a._v(" "),s("p",[a._v("其实 native 内存泄露没有我们想象的那么复杂，可以通过 NMT、pmap、tcmalloc 逐步逐步进行分析，只要能复现，都不叫 bug。")]),a._v(" "),s("p",[a._v("最后珍爱生命，远离 hibernate。")]),a._v(" "),s("p",[a._v("有任何 JVM 相关的问题，欢迎加微或者公众号联系我，一起交流。")])])}),[],!1,null,null,null);s.default=e.exports}}]);