(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{523:function(s,a,t){"use strict";t.r(a);var e=t(4),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("基础设施即服务")]),s._v(" "),a("p",[s._v("平台即服务")]),s._v(" "),a("p",[s._v("软件设施即服务")]),s._v(" "),a("p",[s._v("问题：")]),s._v(" "),a("p",[s._v("在最老的未服务架构中，我们一台机器部署一个应用，每个机器之间通过地址端口就可以进行通信。")]),s._v(" "),a("p",[s._v("但是当我们使用容器技术时，每个容器中的端口需要映射到机器的实际端口，这种端口映射在服务很多后就很难管理，这时候我们就需要一种很好的管理工具。")]),s._v(" "),a("p",[s._v("解决方案：")]),s._v(" "),a("ol",[a("li",[s._v("资源管理器 MESOS")])]),s._v(" "),a("p",[s._v("2019 推特由MESOS转向k8s")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("docker SWARM")])]),s._v(" "),a("p",[s._v("缺点：不能进行回滚等功能")]),s._v(" "),a("p",[s._v("2019 阿里云不再使用")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("kubernetes")])]),s._v(" "),a("p",[s._v("google、go语言编写")]),s._v(" "),a("p",[s._v("特点：")]),s._v(" "),a("p",[s._v("轻量级：消耗的资源少")]),s._v(" "),a("h2",{attrs:{id:"介绍说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍说明"}},[s._v("#")]),s._v(" 介绍说明")]),s._v(" "),a("h3",{attrs:{id:"前生今世"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前生今世"}},[s._v("#")]),s._v(" 前生今世")]),s._v(" "),a("h3",{attrs:{id:"组件框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件框架"}},[s._v("#")]),s._v(" 组件框架")]),s._v(" "),a("h4",{attrs:{id:"borg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#borg"}},[s._v("#")]),s._v(" borg")]),s._v(" "),a("p",[s._v("了解组件的前提，先了解borg的架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230116235941881.png",alt:"image-20230116235941881"}})]),s._v(" "),a("ul",[a("li",[s._v("borgmaster")])]),s._v(" "),a("p",[s._v("首先borgMaster主要用作流量的分发，可以处理当一个请求过来了，相应的流量可以打到哪个borglet地方。")]),s._v(" "),a("ul",[a("li",[s._v("borglet")])]),s._v(" "),a("p",[s._v("每一个具体的服务对应的节点，可能对应着一个服务")]),s._v(" "),a("ul",[a("li",[s._v("访问方式")])]),s._v(" "),a("p",[s._v("borgmaster有3种访问方式")]),s._v(" "),a("ol",[a("li",[s._v("命令行")]),s._v(" "),a("li",[s._v("浏览器")]),s._v(" "),a("li",[s._v("文件")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Schedule")]),s._v(" "),a("p",[s._v("调度器。决定调度的顺序。会将相应的调度保存到数据库paxos，然后borglet定时去数据库拉取数据。")])])]),s._v(" "),a("h4",{attrs:{id:"kebernates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kebernates"}},[s._v("#")]),s._v(" kebernates")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117001051135.png",alt:"image-20230117001051135"}})]),s._v(" "),a("ul",[a("li",[s._v("api server")])]),s._v(" "),a("p",[s._v("所有服务访问的入口")]),s._v(" "),a("ul",[a("li",[s._v("scheduel")])]),s._v(" "),a("p",[s._v("负责接收任务，选择合适的节点进行分配任务")]),s._v(" "),a("ul",[a("li",[s._v("控制器ControllerManager")])]),s._v(" "),a("p",[s._v("维护副本期望的数目，一个node可以设置一个期望的副本数目。")]),s._v(" "),a("p",[s._v("副本数量最好为>=3的基数个")]),s._v(" "),a("ul",[a("li",[s._v("etcd")])]),s._v(" "),a("p",[s._v("存储k8s所有重要信息（持久化）")]),s._v(" "),a("p",[s._v("一个可信耐的分布式键值存储服务，它能为整个分布式集群存储一些关键数据，协助分布式集群的正常运转。")]),s._v(" "),a("p",[s._v("分为两种版本：memery和database")]),s._v(" "),a("p",[s._v("注意：kubuernates v1.11后etcd ，memery已经被弃用")]),s._v(" "),a("p",[s._v("etcd架构图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117001912609.png",alt:"image-20230117001912609"}})]),s._v(" "),a("p",[s._v("类比mysql，预写日志。")]),s._v(" "),a("ul",[a("li",[s._v("kubelet")])]),s._v(" "),a("p",[s._v("直接跟容器引擎交互实现容器的生命周期管理")]),s._v(" "),a("ul",[a("li",[s._v("kubeproxy")])]),s._v(" "),a("p",[s._v("负责写入规则至IPTAVLES、IPVS实现服务的映射")]),s._v(" "),a("h4",{attrs:{id:"其他重要的组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他重要的组件"}},[s._v("#")]),s._v(" 其他重要的组件")]),s._v(" "),a("ul",[a("li",[s._v("coreDNS（重要）")])]),s._v(" "),a("p",[s._v("可以为集群中的SVC创建一个域名的对应关系解析")]),s._v(" "),a("ul",[a("li",[s._v("dashboard")])]),s._v(" "),a("p",[s._v("给k8s提供b/s结构访问体系")]),s._v(" "),a("ul",[a("li",[s._v("ingress controller")])]),s._v(" "),a("p",[s._v("官方只能实现4层代理，ingress可以实现7层代理")]),s._v(" "),a("ul",[a("li",[s._v("fedetation：提供一个可以夸集群中心多k8s统一管理的功能")]),s._v(" "),a("li",[s._v("prometheus")])]),s._v(" "),a("p",[s._v("提供一个k8s集群的监控能力")]),s._v(" "),a("ul",[a("li",[s._v("ELK")])]),s._v(" "),a("p",[s._v("提供k8s日志统一接入平台")]),s._v(" "),a("h3",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[s._v("#")]),s._v(" 关键字")]),s._v(" "),a("h2",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[s._v("#")]),s._v(" 基础概念")]),s._v(" "),a("h3",{attrs:{id:"pod概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod概念"}},[s._v("#")]),s._v(" pod概念")]),s._v(" "),a("p",[s._v("管理的最小单位")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117003951692.png",alt:"image-20230117003951692"}})]),s._v(" "),a("p",[s._v("概念：一个pod中，可能存在多个容器。启动一个pod，必须先要启动一个pause容器，然后再启动其他的容器A、B。启动后AB网络共享、存储卷共享，即AB两者采用映射的方式都使用的是pause的网络和存储。")]),s._v(" "),a("ul",[a("li",[s._v("自主式 Pod")])]),s._v(" "),a("h3",{attrs:{id:"管理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理器"}},[s._v("#")]),s._v(" 管理器")]),s._v(" "),a("h4",{attrs:{id:"什么是管理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是管理器"}},[s._v("#")]),s._v(" 什么是管理器")]),s._v(" "),a("p",[s._v("K8S是"),a("a",{attrs:{href:"https://cloud.tencent.com/product/tke?from=10680",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器"),a("OutboundLink")],1),s._v("资源管理和调度平台，容器跑在Pod里，Pod是K8S里最小的单元。所以，这些Pod作为一个个单元我们肯定需要去操作它的状态和生命周期。那么如何操作？这里就需要用到控制器了。")]),s._v(" "),a("p",[s._v("这里一个比较通俗的公式："),a("strong",[s._v("应用APP = 网络 + 载体 + 存储")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117123355829.png",alt:"image-20230117123355829"}})]),s._v(" "),a("p",[s._v("这里应用一般分为无状态应用、有状态应用、守护型应用、批处理应用这四种。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("无状态应用")])]),s._v(" "),a("p",[s._v("应用实例不涉及事务交互，不产生持久化"),a("a",{attrs:{href:"https://cloud.tencent.com/product/cdcs?from=10680",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据存储"),a("OutboundLink")],1),s._v("在本地，并且多个应用实例对于同一个请求响应的结果是完全一致的。举例：nginx或者tomcat")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("有状态应用")])]),s._v(" "),a("p",[s._v("有状态服务可以说是需要数据存储功能的服务或者指多线程类型的服务、队列等。举例：mysql"),a("a",{attrs:{href:"https://cloud.tencent.com/solution/database?from=10680",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据库"),a("OutboundLink")],1),s._v("、kafka、redis、zookeeper等。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("守护型应用")])]),s._v(" "),a("p",[s._v("类似守护进程一样，长期保持运行，监听持续的提供服务。举例：ceph、logstash、fluentd等。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("批处理应用")])]),s._v(" "),a("p",[s._v("工作任务型的服务，通常是一次性的。举例：运行一个批量改文件夹名字的脚本。")])])]),s._v(" "),a("p",[s._v("这些类型的应用服务如果是安装在传统的物理机或者虚拟机上，那么我们一般会通过人肉方式或者自动化工具的方式去管理编排。但是这些服务一旦容器化了跑在了Pod里，那么就应该按照K8S的控制方式来管理了。上一篇文章我们讲到了编排，那么K8S靠什么具体的操作来做编排？答案就是这些控制器。")]),s._v(" "),a("p",[s._v("不会被管理器管理，死亡后不会复活")]),s._v(" "),a("ul",[a("li",[s._v("控制器管理的Pod")])]),s._v(" "),a("h4",{attrs:{id:"rc、rs、dy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rc、rs、dy"}},[s._v("#")]),s._v(" rc、rs、dy")]),s._v(" "),a("p",[s._v("pod管理器")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117004515662.png",alt:"image-20230117004515662"}})]),s._v(" "),a("p",[s._v("rs在大型项目中可以过滤标签进行管理,新版本已经抛弃了RC")]),s._v(" "),a("p",[s._v("deployment支持滚动更新：创建一个新的，删除一个旧的，进行滚动的更新。即当我们要更新一个pod时，会先删除一个新的，再删除一个旧的，这样可以让更新更加平滑。但是deployment并不支持pod的创建。")]),s._v(" "),a("ul",[a("li",[s._v("deployment创建流程")])]),s._v(" "),a("p",[s._v("dy创建后，会由dy自己创建一个rs，rs会创建对应的pod。")]),s._v(" "),a("ul",[a("li",[s._v("更新流程")])]),s._v(" "),a("p",[s._v("因为采用的是滚动更新，此时dy会创建一个新的rs-1，然后进行滚动更新流程，rs-1更新的一个，rs中的pod停用一个，以此类推。更新完成后rs不会被删除而是停用")]),s._v(" "),a("ul",[a("li",[s._v("回滚")])]),s._v(" "),a("p",[s._v("因为之前的rs并没有被删除，所以可以支持回滚")]),s._v(" "),a("p",[s._v("HPA （HorizontalPodAutoScale）")]),s._v(" "),a("p",[s._v("仅适用于deployment和replicaSet，在V1版本中仅支持根据pod的cpu利用率扩容，在vlapha版本中，支持根据内容和自定义用户的metric扩容")]),s._v(" "),a("p",[s._v("解释：HPA会根据dy或rs中的pod的cpu利用率来创建新的pod或者回收pod。即可以根据节点性能自动创建或删除pod")]),s._v(" "),a("h4",{attrs:{id:"statefullset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statefullset"}},[s._v("#")]),s._v(" statefullSet")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117102321866.png",alt:"image-20230117102321866"}})]),s._v(" "),a("p",[s._v("docker是无状态的服务，而k8s是有状态的服务")]),s._v(" "),a("p",[s._v("有序删除：比如一个服务中，需要按照流程顺序启动mysql、apache、nginx等，如果顺序乱了，可能会报错")]),s._v(" "),a("h4",{attrs:{id:"daemonset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daemonset"}},[s._v("#")]),s._v(" daemonSet")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedundefinedimage-20230117102321866.png",alt:""}})]),s._v(" "),a("p",[s._v("不懂 TODO")]),s._v(" "),a("h4",{attrs:{id:"job、cronjob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#job、cronjob"}},[s._v("#")]),s._v(" JOB、CronJob")]),s._v(" "),a("h4",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[s._v("#")]),s._v(" 扩展")]),s._v(" "),a("h5",{attrs:{id:"cloneset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloneset"}},[s._v("#")]),s._v(" CloneSet")]),s._v(" "),a("p",[s._v("扩展了deployment")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://openkruise.io/zh/docs/user-manuals/cloneset/",target:"_blank",rel:"noopener noreferrer"}},[s._v("CloneSet"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117104350199.png",alt:"image-20230117104350199"}})]),s._v(" "),a("h3",{attrs:{id:"通讯模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通讯模式"}},[s._v("#")]),s._v(" 通讯模式")]),s._v(" "),a("p",[s._v("pod与pod之间的通讯")]),s._v(" "),a("h4",{attrs:{id:"服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[s._v("#")]),s._v(" 服务发现")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117104635130.png",alt:"image-20230117104635130"}})]),s._v(" "),a("p",[s._v("service可以通过管理器去发现一组pod，service有一个地址和端口，这样client就可以访问service，service再通过负载均衡访问到pod")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117105612827.png",alt:"image-20230117105612827"}})]),s._v(" "),a("p",[s._v("比如我们创建了3个php-fpm，他们处于平行的服务，squid要调用它，如果在squid中写死了php-fpm的")]),s._v(" "),a("h4",{attrs:{id:"网络模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络模型"}},[s._v("#")]),s._v(" 网络模型")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117133030935.png",alt:"image-20230117133030935"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117133149435.png",alt:"image-20230117133149435"}})]),s._v(" "),a("p",[s._v("overlay network 怎么去实现？")]),s._v(" "),a("p",[s._v("Flannel ：功能是让集群中的不同的节点主机创建docker容器具有全集群唯一的虚拟ip地址。而且它还能在这些ip地址之间建立一个覆盖网络，通过这个覆盖网络，将数据包原封不动地传递到目标容器内")]),s._v(" "),a("p",[s._v("案例：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117134043147.png",alt:"image-20230117134043147"}})]),s._v(" "),a("ul",[a("li",[s._v("解释")])]),s._v(" "),a("p",[s._v("想象一下，backend后台需要调用app1、app2、app3，现在app2向backend发送数据包，app2节点表示的ip会发送至docker0，docker0再到网桥flannel0，再到flanneld，flanneld会在etcd中查看相关的地址映射信息，并组装成相应的数据包，通过udp的方式转发给其他的主机中对应的pod节点。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117134541862.png",alt:"image-20230117134541862"}})]),s._v(" "),a("p",[s._v("iptables与lvs")]),s._v(" "),a("p",[s._v("ETCD非常重要：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("存储管理Flannel可分配的IP地址段资源")])]),s._v(" "),a("li",[a("p",[s._v("监控ETCD中每个POD的实际地址，并在内存中建立维护POD节点路由表")])])]),s._v(" "),a("p",[s._v("如果要考虑高可用，第一个应该考虑的就应该是ETCD的高可用")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117134917055.png",alt:"image-20230117134917055"}})]),s._v(" "),a("p",[s._v("节点网络即是我们物理机的网络，是真实的网络，其中service网络和pod网络都是虚拟的网络")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.51cto.com/article/702401.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("网络"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"kubernates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernates"}},[s._v("#")]),s._v(" kubernates")]),s._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("ul",[a("li",[s._v("minikube")])]),s._v(" "),a("p",[s._v("首先进行Minikube的安装")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-LO")]),s._v(" https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" minikube-darwin-amd64 /usr/local/bin/minikube\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Kubeadm")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117222047701.png",alt:"image-20230117222047701"}})]),s._v(" "),a("h3",{attrs:{id:"自行构建集群"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自行构建集群"}},[s._v("#")]),s._v(" 自行构建集群")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117221022819.png",alt:"image-20230117221022819"}})]),s._v(" "),a("h2",{attrs:{id:"资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源清单"}},[s._v("#")]),s._v(" 资源清单")]),s._v(" "),a("h3",{attrs:{id:"k8s中的资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s中的资源"}},[s._v("#")]),s._v(" k8s中的资源")]),s._v(" "),a("p",[s._v("k8s所有内容都被抽象为资源，资源实例化后都叫做对象")]),s._v(" "),a("ul",[a("li",[s._v("名称空间")])]),s._v(" "),a("p",[s._v("仅在此名称空间下生效")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117233227232.png",alt:"image-20230117233227232"}})]),s._v(" "),a("ul",[a("li",[s._v("集群")])]),s._v(" "),a("p",[s._v("全局都可见")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117233401217.png",alt:"image-20230117233401217"}})]),s._v(" "),a("ul",[a("li",[s._v("元数据")])]),s._v(" "),a("h3",{attrs:{id:"语法-资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法-资源清单"}},[s._v("#")]),s._v(" 语法 资源清单")]),s._v(" "),a("p",[s._v("必须存在的字段")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117233546406.png",alt:"image-20230117233546406"}})]),s._v(" "),a("p",[s._v("非必需")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117233814411.png",alt:"image-20230117233814411"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117233942891.png",alt:"image-20230117233942891"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117234019918.png",alt:"image-20230117234019918"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117234040181.png",alt:"image-20230117234040181"}})]),s._v(" "),a("p",[s._v("如何看更详细的信息？")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl explain pod\nkubectl explain pod.spec\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"编写资源清单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写资源清单"}},[s._v("#")]),s._v(" 编写资源清单")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230117234838563.png",alt:"image-20230117234838563"}})]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code")]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"})]),a("p",[s._v("启动对应的资源清单")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" xx.yaml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("​\t查看Pod状态")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl get pod\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看日志")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("//查看哪个容器有问题\nkubectl describe pod xxxName\n\nkubectl logs xxxName "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" test//查看pod下的指定容器的日志\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"pod生命周期-重难点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod生命周期-重难点"}},[s._v("#")]),s._v(" pod生命周期（重难点）")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118000231590.png",alt:"image-20230118000231590"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118150328240.png",alt:"image-20230118150328240"}})]),s._v(" "),a("p",[s._v("成功：返回0，就表示成功返回。返回其他数据，就表示失败了。")]),s._v(" "),a("h4",{attrs:{id:"容器环境初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器环境初始化"}},[s._v("#")]),s._v(" 容器环境初始化")]),s._v(" "),a("h4",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[s._v("#")]),s._v(" init")]),s._v(" "),a("p",[s._v("初始化容器（不能并行，必须串行，包括pause容器）")]),s._v(" "),a("p",[s._v("介绍：pod能够具有多个容器，应用运行在容器里面，但是它也可能有一个或多个先应用容器启动的Init容器。")]),s._v(" "),a("p",[s._v("Init容器与普通的容器非常像，除了：")]),s._v(" "),a("p",[s._v("Init容器总是运行到成功为止")]),s._v(" "),a("p",[s._v("每个init容器必须在下一个init容器启动之前完成")]),s._v(" "),a("p",[s._v("如果pod的Init容器失败，kubernetes会不断地重启该pod，直到Init容器成功为止，然而，如果pod对应的restartPolicy为nerver，则它不会重新启动")]),s._v(" "),a("p",[s._v("作用：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118110334771.png",alt:"image-20230118110334771"}})]),s._v(" "),a("p",[s._v("举例：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118110756470.png",alt:"image-20230118110756470"}})]),s._v(" "),a("p",[s._v("比如我们有两个pod：mysql（pod1）、Apache+php（pod2）。")]),s._v(" "),a("p",[s._v("此时pod2需要调用pod1服务，如果pod1还没有成功启动，那么pod2就会调用失败。那我们要怎么做到pod2调用pod1之前，保证pod1已经启动成功呢？")]),s._v(" "),a("p",[s._v("可以在pod2之前加一个init容器，让其去监控pod1是否成功启动，只有当成功启动过后，pod2才开始启动")]),s._v(" "),a("p",[s._v("编写init模板：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118112010295.png",alt:"image-20230118112010295"}})]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata:\n name: myapp-pod\n labels:\n  app: myapp\n\nspec:\n containers:\n  - name: myapp-container\n    image: busybox\n    command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sh'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-c'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'echo the app is running! && sleep 3600'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  initContainers:\n  - name: init-myservice\n    image: busybox\n    command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sh'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-c'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'until nslookup myservice; do echo waiting for myservice; sleep2; done;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  - name: init-mydb\n    image: busybox\n    command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sh'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-c'")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'until nslookup mydb; do echo waiting for mydb; sleep 2;done;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118124851122.png",alt:"image-20230118124851122"}})]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kind: Service\napiVersion: v1\nmetadata:\n name: mydb\nspec:\n ports:\n  - protocol: TCP\n    port: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    targetPort: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8377")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kind: Service\napiVersion: v1\nmetadata:\n name: myservice\n\nspec:\n ports:\n  - protocol: TCP\n    port: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    targetPort: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9376")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上面可知，当主main启动后，需要等待出初始化容器myservice、mydb执行完成后，才能真正进行main容器的执行")]),s._v(" "),a("p",[s._v("kind: service?")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("注意事项：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118134610984.png",alt:"image-20230118134610984"}})]),s._v(" "),a("p",[s._v("网路和数据初始化是在pause容器中完成的。")]),s._v(" "),a("p",[s._v("使用命令")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl edit pod podName\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以修改对应的yaml文件，如果修改了image字段相关的数据，会触发init容器的重新启动，也就表示整个pod都会进行重启。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118135704216.png",alt:"image-20230118135704216"}})]),s._v(" "),a("p",[s._v("init容器的资源清单中很多字段都是和主容器字段一样的，除了readiness就绪检测字段。因为readiness是就绪检测，init容器的功能也是为主容器的初始过程服务，如果init也要进行就绪检测，那么就本末倒置，一层套一套更加复杂，所以init中不应该提供就绪检测的生命周期。")]),s._v(" "),a("p",[s._v("缺点：init容器不在main容器过程中，如果init容器放行通过了，那么如果在main容器启动过程中又出错了，那么init容器的存在不就没有意义了吗？")]),s._v(" "),a("p",[s._v("k8s还提供了"),a("strong",[s._v("容器探针")]),s._v("的功能：即readinessProbe和livenessProbe")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118140350014.png",alt:"image-20230118140350014"}})]),s._v(" "),a("p",[s._v("主容器生命周期")]),s._v(" "),a("h4",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[s._v("#")]),s._v(" start")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118145859233.png",alt:"image-20230118145859233"}})]),s._v(" "),a("p",[s._v("start stop很简单。")]),s._v(" "),a("h4",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[s._v("#")]),s._v(" stop")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118140616646.png",alt:"image-20230118140616646"}})]),s._v(" "),a("p",[s._v("具体实现")]),s._v(" "),a("h4",{attrs:{id:"readiness"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readiness"}},[s._v("#")]),s._v(" readiness")]),s._v(" "),a("p",[s._v("就绪检测。pod处于running状态，但是容器中的进程可能还没有真正被创建，不应该对外暴露服务，此时使用readiness，可以通过某种策略判断该容器是否可以真正的对外暴露服务了")]),s._v(" "),a("p",[a("strong",[s._v("就绪检测")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118140748306.png",alt:"image-20230118140748306"}})]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata:\n name: readiness-httpget-pod\n namespace: default\n\nspec:\n containers:\n - name: readiness-httpget-container\n   image: httpServiceImage\n   imagePolicy: IfNotPresent\n   readinessProbe:\n    httpGet:\n     port: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n     path: /index.html\n    initialDelaySeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    periodSeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("因为这里使用了就绪检测，会去Main中的容器看8080端口路径"),a("code",[s._v("/indext.html")]),s._v("是否能够通过"),a("code",[s._v("index.html")]),s._v("调用成功，如果成功了，则可以通过，否则就表示调用失败了。")]),s._v(" "),a("p",[s._v("使用"),a("code",[s._v("kubectl get pod")]),s._v("可以返现status虽然现在处于running状态，但是ready仍为0，因为我们的就绪检测失败了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118141514655.png",alt:"image-20230118141514655"}})]),s._v(" "),a("p",[s._v("那么怎么办呢？首先我们需要使用"),a("code",[s._v("kubectl desribe pod 名字")]),s._v("查看是具体什么原因造成的，然后我们会去容器内部去进行命令交互操作")]),s._v(" "),a("p",[a("code",[s._v("kubectl exe podName.containName -it -- /bin/sh")])]),s._v(" "),a("p",[s._v("进入交互页面，建立index.html页面即可。")]),s._v(" "),a("h4",{attrs:{id:"liveness"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#liveness"}},[s._v("#")]),s._v(" liveness")]),s._v(" "),a("p",[s._v("生存检测")]),s._v(" "),a("p",[s._v("检测僵尸进程")]),s._v(" "),a("p",[a("strong",[s._v("存活检测")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118142755078.png",alt:"image-20230118142755078"}})]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  name: liveness-exec-pod\n  namespace: default\n\nspec:\n  containers:\n   - name: liveness-exec-container\n     image: myServerImage\n     imagePullPolicy: IfNotPresent\n     command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"touch /tmp/live ; sleep 60 ; rm -rf /tmp/live; sleep 3600"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n     livenessProbe:\n      exec:\n       command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-e"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/tmp/live"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n      initialDelaySeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      periodSeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("解释：")]),s._v(" "),a("p",[s._v("imagePullPolicy: IfNotPresent。 如果镜像在本地不存在，则到远程去拉去，否则只拉取本地的镜像")]),s._v(" "),a("p",[a("code",[s._v('command: ["/bin/sh","-c","touch /tmp/live ; sleep 60 ; rm -rf /tmp/live; sleep 3600"]')]),s._v(":创建一个文件60s后，删除该文件")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("livenessProbe:\n      exec:\n       command: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-e"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/tmp/live"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测指定的文件是否存在")]),s._v("\n      initialDelaySeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主容器启动后1s才检测")]),s._v("\n      periodSeconds: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#每隔3s检测一次")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("检测成功返回0，否则返回1")]),s._v(" "),a("p",[s._v("我们可以启动以上容器并等待一分钟：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("kubectl get pod "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-w")]),s._v("\n-w, "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--watch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("false:\n        After listing/getting the requested object, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" changes.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("即可返回相关变化的容器,我们可以等待1min等待变化。")]),s._v(" "),a("p",[s._v("可以看到restarts的数量发生了变化。")]),s._v(" "),a("p",[s._v("当存活检测后，如果存活检测失败，会干掉整个主main，并重pod。")]),s._v(" "),a("p",[s._v("存活检测的其他测试：")]),s._v(" "),a("p",[s._v("http")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230118144828706.png",alt:"image-20230118144828706"}})]),s._v(" "),a("p",[s._v("tcp")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedundefinedimage-20230118144828706.png",alt:""}})]),s._v(" "),a("p",[s._v("总结：init成功后，容器进如running状态，但是仍没有进入ready状态，此时进入"),a("strong",[s._v("就绪检测")]),s._v("，如果就绪检测未通过，则持续进行就绪检测，如果通过pod状态变为ready，此时开始存活检测，存活检测通过，则每隔一段时间检测一次，如果存活检测不通过，则挂掉整个pod，重新启动，即从init开始启动。")]),s._v(" "),a("h2",{attrs:{id:"pod-控制器-灵魂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod-控制器-灵魂"}},[s._v("#")]),s._v(" pod 控制器（灵魂）")]),s._v(" "),a("p",[s._v("掌握各种控制器特点和使用方式")]),s._v(" "),a("p",[s._v("pod分类：自主式（pod退出了，cileixingpod不会被重新创建）、控制器（在控制器的生命周期里，始终要维持pod的副本数量）")]),s._v(" "),a("p",[s._v("一般情况下，我们都会使用控制器下的pod")]),s._v(" "),a("p",[s._v("k8s中有很多控制器，这些相当于一个状态机，用来控制pod的具体状态行为")]),s._v(" "),a("ol",[a("li")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119225227366.png",alt:"image-20230119225227366"}})]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li")]),s._v(" "),a("p",[s._v("声明式定义：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119225318214.png",alt:"image-20230119225318214"}})]),s._v(" "),a("p",[s._v("例如：sql语句，其不需要考虑底层怎么实现的")]),s._v(" "),a("p",[s._v("当创建一个deployment时，会自动创建rs，rs会自动创建对应的pod")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119225756910.png",alt:"image-20230119225756910"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119225746977.png",alt:"image-20230119225746977"}})]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119230059023.png",alt:"image-20230119230059023"}})]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119231203322.png",alt:"image-20230119231203322"}})]),s._v(" "),a("p",[s._v("以上的控制器大多适合于无状态服务的pod")]),s._v(" "),a("p",[s._v("以下可以做有状态得到服务")]),s._v(" "),a("ol",{attrs:{start:"5"}},[a("li")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119231526065.png",alt:"image-20230119231526065"}})]),s._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[s._v("自动扩容缩容方案")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119231914910.png",alt:"image-20230119231914910"}})]),s._v(" "),a("ul",[a("li",[s._v("RS于RC与Delpoyment的关联")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230119232502914.png",alt:"image-20230119232502914"}})]),s._v(" "),a("p",[s._v("如果不知道yaml中某个标签的含义怎么办？")]),s._v(" "),a("p",[a("code",[s._v("kubectl explain rs")])]),s._v(" "),a("h2",{attrs:{id:"服务发现-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务发现-2"}},[s._v("#")]),s._v(" 服务发现")]),s._v(" "),a("p",[s._v("将内部私有服务暴露给客户端")]),s._v(" "),a("p",[s._v("掌握syc原理以及构建方式")]),s._v(" "),a("h2",{attrs:{id:"存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[s._v("#")]),s._v(" 存储")]),s._v(" "),a("p",[s._v("服务分类")]),s._v(" "),a("ul",[a("li",[s._v("有状态服务")])]),s._v(" "),a("p",[s._v("DBMS")]),s._v(" "),a("ul",[a("li",[s._v("无状态服务")])]),s._v(" "),a("p",[s._v("LVS APACHE")]),s._v(" "),a("p",[s._v("多种存储类型的特点，并且在不同环境中选择不同的存储方案")]),s._v(" "),a("h2",{attrs:{id:"调度器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调度器"}},[s._v("#")]),s._v(" 调度器")]),s._v(" "),a("p",[s._v("可以将pod节点进行组装")]),s._v(" "),a("h2",{attrs:{id:"安全机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全机制"}},[s._v("#")]),s._v(" 安全机制")]),s._v(" "),a("p",[s._v("集群的认证、鉴权、访问控制、原理即流程")]),s._v(" "),a("h2",{attrs:{id:"helm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#helm"}},[s._v("#")]),s._v(" HELM")]),s._v(" "),a("p",[s._v("类似yum管理器")]),s._v(" "),a("p",[s._v("掌握HELM原理，自定义模板，可以实现部署插件")]),s._v(" "),a("h2",{attrs:{id:"运维"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运维"}},[s._v("#")]),s._v(" 运维")]),s._v(" "),a("p",[s._v("kubernates源码修改")]),s._v(" "),a("p",[s._v("kubernamtes高可用构建")])])}),[],!1,null,null,null);a.default=n.exports}}]);