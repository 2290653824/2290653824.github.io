(window.webpackJsonp=window.webpackJsonp||[]).push([[373],{698:function(s,a,e){"use strict";e.r(a);var t=e(4),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一-安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-安装git"}},[s._v("#")]),s._v(" 一. 安装git")]),s._v(" "),a("h3",{attrs:{id:"_1-检查是否安装成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-检查是否安装成功"}},[s._v("#")]),s._v(" 1. 检查是否安装成功")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看git基本命令是否可用")]),s._v(" "),a("h3",{attrs:{id:"_2-将ssh添加到对应的github或者gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-将ssh添加到对应的github或者gitlab"}},[s._v("#")]),s._v(" 2. 将ssh添加到对应的github或者gitlab")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your_email@example.com"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("复制对应的key：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa.pub\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("生成新key并添加到github")]),s._v(" "),a("p",[s._v("登录到Github页面 -> 右上角Setttings -> SSH keys ->Add key")]),s._v(" "),a("h3",{attrs:{id:"_3-配置git姓名和邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置git姓名和邮箱"}},[s._v("#")]),s._v(" 3. 配置git姓名和邮箱")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name   "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的名字或昵称"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的邮箱"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-提交代码测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-提交代码测试"}},[s._v("#")]),s._v(" 4. 提交代码测试")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://gitlab.testgu.com/ycyzharry/HelloGit.git "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将远程仓库克隆到本地")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将当前目录所有文件添加到git暂存区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my first commit"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#提交并备注提交信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将本地提交推送到远程仓库")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("参考："),a("a",{attrs:{href:"https://www.cnblogs.com/ycyzharry/p/10889420.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用Homebrew安装Git（Mac）"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"二-git-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-git-基础"}},[s._v("#")]),s._v(" 二. git 基础")]),s._v(" "),a("h3",{attrs:{id:"_1-git中的三种状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-git中的三种状态"}},[s._v("#")]),s._v(" 1. git中的三种状态")]),s._v(" "),a("p",[s._v("Git 有三种状态，你的文件可能处于其中之一：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("已提交（committed）")]),s._v("：数据已经安全的保存在本地数据库中。")]),s._v(" "),a("li",[a("strong",[s._v("已修改（modified）")]),s._v("：已修改表示修改了文件，但还没保存到数据库中。")]),s._v(" "),a("li",[a("strong",[s._v("已暂存（staged）")]),s._v("：表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。")])]),s._v(" "),a("p",[s._v("由此引入 Git 项目的三个工作区域的概念："),a("strong",[s._v("Git 仓库(.git directory)")]),s._v("、"),a("strong",[s._v("工作目录(Working Directory)")]),s._v(" 以及 "),a("strong",[s._v("暂存区域(Staging Area)")]),s._v(" 。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162154630.png",alt:"image-20230131162154630"}})]),s._v(" "),a("p",[a("strong",[s._v("基本的 Git 工作流程如下：")])]),s._v(" "),a("ol",[a("li",[s._v("在工作目录中修改文件。")]),s._v(" "),a("li",[s._v("暂存文件，将文件的快照放入暂存区域。")]),s._v(" "),a("li",[s._v("提交更新，找到暂存区域的文件，将快照永久性存储到 Git 仓库目录。")])]),s._v(" "),a("p",[s._v("另外需要注意，git追踪的是修改，不是文件，所以只要文件有修改，就会产生暂存区与工作区的不一致。")]),s._v(" "),a("h3",{attrs:{id:"_2-git常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git常用操作"}},[s._v("#")]),s._v(" 2. git常用操作")]),s._v(" "),a("h4",{attrs:{id:"_2-1-获取-git-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-获取-git-仓库"}},[s._v("#")]),s._v(" 2.1 获取 Git 仓库")]),s._v(" "),a("p",[s._v("有两种取得 Git 项目仓库的方法。")]),s._v(" "),a("ol",[a("li",[s._v("在现有目录中初始化仓库: 进入项目目录运行 "),a("code",[s._v("git init")]),s._v(" 命令,该命令将创建一个名为 "),a("code",[s._v(".git")]),s._v(" 的子目录。")]),s._v(" "),a("li",[s._v("从一个服务器克隆一个现有的 Git 仓库: "),a("code",[s._v("git clone [url]")]),s._v(" 自定义本地仓库的名字: "),a("code",[s._v("git clone [url] directoryname")])])]),s._v(" "),a("h4",{attrs:{id:"_2-2-记录每次更新到仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-记录每次更新到仓库"}},[s._v("#")]),s._v(" 2.2 记录每次更新到仓库")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("检测当前文件状态")]),s._v(" : "),a("code",[s._v("git status")])]),s._v(" "),a("li",[a("strong",[s._v("提出更改（把它们添加到暂存区")]),s._v("）："),a("code",[s._v("git add filename")]),s._v(" (针对特定文件)、"),a("code",[s._v("git add *")]),s._v("(所有文件)、"),a("code",[s._v("git add *.txt")]),s._v("（支持通配符，所有 .txt 文件）")]),s._v(" "),a("li",[a("strong",[s._v("忽略文件")]),s._v("："),a("code",[s._v(".gitignore")]),s._v(" 文件")]),s._v(" "),a("li",[a("strong",[s._v("提交更新:")]),s._v(" "),a("code",[s._v('git commit -m "代码提交信息"')]),s._v(" （每次准备提交前，先用 "),a("code",[s._v("git status")]),s._v(" 看下，是不是都已暂存起来了， 然后再运行提交命令 "),a("code",[s._v("git commit")]),s._v("）")]),s._v(" "),a("li",[a("strong",[s._v("跳过使用暂存区域更新的方式")]),s._v(" : "),a("code",[s._v('git commit -a -m "代码提交信息"')]),s._v("。 "),a("code",[s._v("git commit")]),s._v(" 加上 "),a("code",[s._v("-a")]),s._v(" 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 "),a("code",[s._v("git add")]),s._v(" 步骤。")]),s._v(" "),a("li",[a("strong",[s._v("移除文件")]),s._v(" ："),a("code",[s._v("git rm filename")]),s._v(" （从暂存区域移除，然后提交。）")]),s._v(" "),a("li",[a("strong",[s._v("对文件重命名")]),s._v(" ："),a("code",[s._v("git mv README.md README")]),s._v("(这个命令相当于"),a("code",[s._v("mv README.md README")]),s._v("、"),a("code",[s._v("git rm README.md")]),s._v("、"),a("code",[s._v("git add README")]),s._v(" 这三条命令的集合)")])]),s._v(" "),a("h4",{attrs:{id:"_2-3-一般流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-一般流程"}},[s._v("#")]),s._v(" 2.3 一般流程")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git add .\n\ngit commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交信息"')]),s._v("\n\ngit push\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("理解commit")]),s._v(" "),a("p",[s._v("就像存档一样，当我们写了一定的代码量过后，应该主动进行一次commit，以便于我们在可以进行"),a("strong",[s._v("回滚操作")])]),s._v(" "),a("h4",{attrs:{id:"_2-4-commit日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-commit日志"}},[s._v("#")]),s._v(" 2.4 commit日志")]),s._v(" "),a("p",[s._v("我们怎么知道我们提价的信息是什么，应该进行怎么回滚，这就需要我们查询相关的日志")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git log\n\ngit log pretty=oneline\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline")]),s._v("\n1094adb7b9b3807259d8cb349e7df1d4d6477073 (HEAD -> master) append GPL\ne475afc93c209a690c39c13a46716e8fa000c366 add distributed\neaadf4e385e865d25c48e7ca9c8395c3f7dfaef0 wrote a readme file\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("其中每次提交都会对应应该id，使用的是SHA1算法")]),s._v(" "),a("h4",{attrs:{id:"_2-5-回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-回滚"}},[s._v("#")]),s._v(" 2.5 回滚")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git reset --hard HEAD^  //回滚到上一个commit\ngit reset --hard commitId //回滚到指定的commit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Git的版本回退速度非常快，因为Git在内部有个指向当前版本的"),a("code",[s._v("HEAD")]),s._v("指针，当你回退版本的时候，Git仅仅是把HEAD从指向"),a("code",[s._v("append GPL")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("┌────┐\n│HEAD│\n└────┘\n   │\n   └──▶ ○ append GPL\n        │\n        ○ add distributed\n        │\n        ○ wrote a readme file\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("改为指向"),a("code",[s._v("add distributed")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("┌────┐\n│HEAD│\n└────┘\n   │\n   │    ○ append GPL\n   │    │\n   └──▶ ○ add distributed\n        │\n        ○ wrote a readme file\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("然后顺便把工作区的文件更新了。所以你让"),a("code",[s._v("HEAD")]),s._v("指向哪个版本号，你就把当前版本定位在哪。")]),s._v(" "),a("p",[s._v("注意"),a("code",[s._v("git reset --hard commitid")]),s._v("会把暂存区中的信息清空")]),s._v(" "),a("h4",{attrs:{id:"_2-6-操作日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-操作日志"}},[s._v("#")]),s._v(" 2.6 操作日志")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git reflog\n\ne475afc HEAD@{1}: reset: moving to HEAD^\n1094adb (HEAD -> master) HEAD@{2}: commit: append GPL\ne475afc HEAD@{3}: commit: add distributed\neaadf4e HEAD@{4}: commit (initial): wrote a readme file\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("根据操作日志，我们可以找到我们对应的commitid，然后重返未来的commit")]),s._v(" "),a("h4",{attrs:{id:"_2-7-暂存区相关操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-暂存区相关操作"}},[s._v("#")]),s._v(" 2.7 暂存区相关操作")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git add把文件从工作区>>>>暂存区，git commit把文件从暂存区>>>>仓库，\n\ngit diff查看工作区和暂存区差异，\n\ngit diff --cached查看暂存区和仓库差异，\n\ngit diff HEAD 查看工作区和仓库的差异，\n\ngit add的反向命令git checkout，撤销工作区修改，即把暂存区最新版本转移到工作区，\n\ngit commit的反向命令git reset HEAD，就是把仓库最新版本转移到暂存区。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("另外需要注意，git追踪的是修改，不是文件，所以只要文件有修改，就会产生暂存区与工作区的不一致。")]),s._v(" "),a("h4",{attrs:{id:"_2-8文件删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-8文件删除"}},[s._v("#")]),s._v(" 2.8文件删除")]),s._v(" "),a("p",[s._v("当我们的文件已经提交，此时如果我们在工作区删除一个文件、此时文件的删除会被git跟踪。")]),s._v(" "),a("p",[s._v("这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，"),a("code",[s._v("git status")]),s._v("命令会立刻告诉你哪些文件被删除了：")]),s._v(" "),a("p",[s._v("现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令"),a("code",[s._v("git rm")]),s._v("删掉，并且"),a("code",[s._v("git commit")]),s._v("：")]),s._v(" "),a("p",[s._v("小提示：先手动删除文件，然后使用git rm "),a("code",[s._v("file")]),s._v("和git add"),a("code",[s._v("file")]),s._v("效果是一样的。")]),s._v(" "),a("p",[s._v("另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout -- test.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("git checkout")]),s._v("其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。")]),s._v(" "),a("h4",{attrs:{id:"_2-9-文件忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-文件忽略"}},[s._v("#")]),s._v(" 2.9 文件忽略")]),s._v(" "),a("p",[s._v("有时候我们想要忽略git对一些文件目录的追踪，有什么办法呢？")]),s._v(" "),a("p",[s._v(".gitignore 文件是一个文本文件，它告诉Git 要忽略项目中的哪些文件或文件夹。 本地 .gitignore 文件通常被放置在项目的根目录中。 你还可以创建一个全局 .gitignore 文件，该文件中的所有条目都会在你所有的Git 仓库中被忽略。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("HELP.md\ntarget/\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(".mvn/wrapper/maven-wrapper.jar\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("**/src/main/**\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("**/src/test/**\nlogs/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### STS ###")]),s._v("\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### IntelliJ IDEA ###")]),s._v("\n.idea\n*.iws\n*.iml\n*.ipr\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### NetBeans ###")]),s._v("\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\nbuild/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("### VS Code ###")]),s._v("\n.vscode/\n\n/logs\n**/.DS_Store\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("h3",{attrs:{id:"_3-工作区与暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-工作区与暂存区"}},[s._v("#")]),s._v(" 3. 工作区与暂存区")]),s._v(" "),a("p",[s._v("Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。")]),s._v(" "),a("p",[s._v("先来看名词解释。")]),s._v(" "),a("h4",{attrs:{id:"_3-1-工作区-working-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-工作区-working-directory"}},[s._v("#")]),s._v(" 3.1 工作区（Working Directory）")]),s._v(" "),a("p",[s._v("就是你在电脑里能看到的目录，比如我的"),a("code",[s._v("learngit")]),s._v("文件夹就是一个工作区：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162213763.png",alt:"image-20230131162213763"}})]),s._v(" "),a("h4",{attrs:{id:"_3-2-版本库-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-版本库-repository"}},[s._v("#")]),s._v(" 3.2 版本库（Repository）")]),s._v(" "),a("p",[s._v("工作区有一个隐藏目录"),a("code",[s._v(".git")]),s._v("，这个不算工作区，而是Git的版本库。")]),s._v(" "),a("p",[s._v("Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支"),a("code",[s._v("master")]),s._v("，以及指向"),a("code",[s._v("master")]),s._v("的一个指针叫"),a("code",[s._v("HEAD")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162222297.png",alt:"image-20230131162222297"}})]),s._v(" "),a("p",[s._v("分支和"),a("code",[s._v("HEAD")]),s._v("的概念我们以后再讲。")]),s._v(" "),a("p",[s._v("前面讲了我们把文件往Git版本库里添加的时候，是分两步执行的：")]),s._v(" "),a("p",[s._v("第一步是用"),a("code",[s._v("git add")]),s._v("把文件添加进去，实际上就是把文件修改添加到暂存区；")]),s._v(" "),a("p",[s._v("第二步是用"),a("code",[s._v("git commit")]),s._v("提交更改，实际上就是把暂存区的所有内容提交到当前分支。")]),s._v(" "),a("p",[s._v("因为我们创建Git版本库时，Git自动为我们创建了唯一一个"),a("code",[s._v("master")]),s._v("分支，所以，现在，"),a("code",[s._v("git commit")]),s._v("就是往"),a("code",[s._v("master")]),s._v("分支上提交更改。")]),s._v(" "),a("p",[s._v("你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。")]),s._v(" "),a("p",[s._v("俗话说，实践出真知。现在，我们再练习一遍，先对"),a("code",[s._v("readme.txt")]),s._v("做个修改，比如加上一行内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后，在工作区新增一个"),a("code",[s._v("LICENSE")]),s._v("文本文件（内容随便写）。")]),s._v(" "),a("p",[s._v("先用"),a("code",[s._v("git status")]),s._v("查看一下状态：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git status\nOn branch master\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   readme.txt\n\nUntracked files:\n  (use "git add <file>..." to include in what will be committed)\n\n\tLICENSE\n\nno changes added to commit (use "git add" and/or "git commit -a")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("Git非常清楚地告诉我们，"),a("code",[s._v("readme.txt")]),s._v("被修改了，而"),a("code",[s._v("LICENSE")]),s._v("还从来没有被添加过，所以它的状态是"),a("code",[s._v("Untracked")]),s._v("。")]),s._v(" "),a("p",[s._v("现在，使用两次命令"),a("code",[s._v("git add")]),s._v("，把"),a("code",[s._v("readme.txt")]),s._v("和"),a("code",[s._v("LICENSE")]),s._v("都添加后，用"),a("code",[s._v("git status")]),s._v("再查看一下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git status\nOn branch master\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   LICENSE\n\tmodified:   readme.txt\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("现在，暂存区的状态就变成这样了：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162328968.png",alt:"image-20230131162328968"}})]),s._v(" "),a("p",[s._v("所以，"),a("code",[s._v("git add")]),s._v("命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行"),a("code",[s._v("git commit")]),s._v("就可以一次性把暂存区的所有修改提交到分支。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git commit -m "understand how stage works"\n[master e43a48b] understand how stage works\n 2 files changed, 2 insertions(+)\n create mode 100644 LICENSE\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("一旦提交后，如果你又没有对工作区做任何修改，那么工作区就是“干净”的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git status\nOn branch master\nnothing to commit, working tree clean\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("现在版本库变成了这样，暂存区就没有任何内容了：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162338322.png",alt:"image-20230131162338322"}})]),s._v(" "),a("h4",{attrs:{id:"_3-3-暂存区的撤销与修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-暂存区的撤销与修改"}},[s._v("#")]),s._v(" 3.3 暂存区的撤销与修改")]),s._v(" "),a("p",[a("code",[s._v("git checkout -- file")]),s._v(" 放弃指定文在工作区的修改")]),s._v(" "),a("p",[s._v("命令"),a("code",[s._v("git checkout -- readme.txt")]),s._v("意思就是，把"),a("code",[s._v("readme.txt")]),s._v("文件在工作区的修改全部撤销，这里有两种情况：")]),s._v(" "),a("p",[s._v("一种是"),a("code",[s._v("readme.txt")]),s._v("自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；")]),s._v(" "),a("p",[s._v("一种是"),a("code",[s._v("readme.txt")]),s._v("已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。")]),s._v(" "),a("p",[s._v("总之，就是让这个文件回到最近一次"),a("code",[s._v("git commit")]),s._v("或"),a("code",[s._v("git add")]),s._v("时的状态。")]),s._v(" "),a("p",[a("code",[s._v("git checkout -- file")]),s._v("命令中的"),a("code",[s._v("--")]),s._v("很重要，没有"),a("code",[s._v("--")]),s._v("，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到"),a("code",[s._v("git checkout")]),s._v("命令。")]),s._v(" "),a("p",[a("code",[s._v("git reset HEAD <file>")]),s._v("可以把暂存区的修改撤销掉（unstage），重新放回工作区：")]),s._v(" "),a("p",[a("code",[s._v("git reset")]),s._v("命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用"),a("code",[s._v("HEAD")]),s._v("时，表示最新的版本。")]),s._v(" "),a("h3",{attrs:{id:"_4-远程git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-远程git"}},[s._v("#")]),s._v(" 4. 远程git")]),s._v(" "),a("h4",{attrs:{id:"_4-1-使用ssh进行双方的连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-使用ssh进行双方的连接"}},[s._v("#")]),s._v(" 4.1 使用SSH进行双方的连接")]),s._v(" "),a("p",[s._v("第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有"),a("code",[s._v("id_rsa")]),s._v("和"),a("code",[s._v("id_rsa.pub")]),s._v("这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ ssh-keygen -t rsa -C "youremail@example.com"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。")]),s._v(" "),a("p",[s._v("如果一切顺利的话，可以在用户主目录里找到"),a("code",[s._v(".ssh")]),s._v("目录，里面有"),a("code",[s._v("id_rsa")]),s._v("和"),a("code",[s._v("id_rsa.pub")]),s._v("两个文件，这两个就是SSH Key的秘钥对，"),a("code",[s._v("id_rsa")]),s._v("是私钥，不能泄露出去，"),a("code",[s._v("id_rsa.pub")]),s._v("是公钥，可以放心地告诉任何人。")]),s._v(" "),a("p",[s._v("第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：")]),s._v(" "),a("p",[s._v("然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴"),a("code",[s._v("id_rsa.pub")]),s._v("文件的内容：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162349267.png",alt:"image-20230131162349267"}})]),s._v(" "),a("p",[s._v("点“Add Key”，你就应该看到已经添加的Key：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162356777.png",alt:"image-20230131162356777"}})]),s._v(" "),a("p",[s._v("为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。")]),s._v(" "),a("p",[s._v("当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。")]),s._v(" "),a("p",[s._v("最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。")]),s._v(" "),a("p",[s._v("如果你不想让别人看到Git库，有两个办法，一个是交点保护费，让GitHub把公开的仓库变成私有的，这样别人就看不见了（不可读更不可写）。另一个办法是自己动手，搭一个Git服务器，因为是你自己的Git服务器，所以别人也是看不见的。这个方法我们后面会讲到的，相当简单，公司内部开发必备。")]),s._v(" "),a("h4",{attrs:{id:"_4-2-添加远程库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-添加远程库"}},[s._v("#")]),s._v(" 4.2 添加远程库")]),s._v(" "),a("p",[s._v("现在的情景是，你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。")]),s._v(" "),a("p",[s._v("首先，登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162405759.png",alt:"image-20230131162405759"}})]),s._v(" "),a("p",[s._v("在Repository name填入"),a("code",[s._v("learngit")]),s._v("，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162414733.png",alt:"image-20230131162414733"}})]),s._v(" "),a("p",[s._v("目前，在GitHub上的这个"),a("code",[s._v("learngit")]),s._v("仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。")]),s._v(" "),a("p",[s._v("现在，我们根据GitHub的提示，在本地的"),a("code",[s._v("learngit")]),s._v("仓库下运行命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote add origin git@github.com:michaelliao/learngit.git\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("请千万注意，把上面的"),a("code",[s._v("michaelliao")]),s._v("替换成你自己的GitHub账户名，否则，你在本地关联的就是我的远程库，关联没有问题，但是你以后推送是推不上去的，因为你的SSH Key公钥不在我的账户列表中。")]),s._v(" "),a("p",[s._v("添加后，远程库的名字就是"),a("code",[s._v("origin")]),s._v("，这是Git默认的叫法，也可以改成别的，但是"),a("code",[s._v("origin")]),s._v("这个名字一看就知道是远程库。")]),s._v(" "),a("p",[s._v("下一步，就可以把本地库的所有内容推送到远程库上：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push -u origin master\nCounting objects: 20, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (15/15), done.\nWriting objects: 100% (20/20), 1.64 KiB | 560.00 KiB/s, done.\nTotal 20 (delta 5), reused 0 (delta 0)\nremote: Resolving deltas: 100% (5/5), done.\nTo github.com:michaelliao/learngit.git\n * [new branch]      master -> master\nBranch 'master' set up to track remote branch 'master' from 'origin'.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("把本地库的内容推送到远程，用"),a("code",[s._v("git push")]),s._v("命令，实际上是把当前分支"),a("code",[s._v("master")]),s._v("推送到远程。")]),s._v(" "),a("p",[s._v("由于远程库是空的，我们第一次推送"),a("code",[s._v("master")]),s._v("分支时，加上了"),a("code",[s._v("-u")]),s._v("参数，Git不但会把本地的"),a("code",[s._v("master")]),s._v("分支内容推送的远程新的"),a("code",[s._v("master")]),s._v("分支，还会把本地的"),a("code",[s._v("master")]),s._v("分支和远程的"),a("code",[s._v("master")]),s._v("分支关联起来，在以后的推送或者拉取时就可以简化命令。")]),s._v(" "),a("p",[s._v("推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162424639.png",alt:"image-20230131162424639"}})]),s._v(" "),a("p",[s._v("从现在起，只要本地作了提交，就可以通过命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("把本地"),a("code",[s._v("master")]),s._v("分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！")]),s._v(" "),a("h4",{attrs:{id:"_4-3-ssh警告"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-ssh警告"}},[s._v("#")]),s._v(" 4.3 SSH警告")]),s._v(" "),a("p",[s._v("当你第一次使用Git的"),a("code",[s._v("clone")]),s._v("或者"),a("code",[s._v("push")]),s._v("命令连接GitHub时，会得到一个警告：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.\nRSA key fingerprint is xx.xx.xx.xx.xx.\nAre you sure you want to continue connecting (yes/no)?\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入"),a("code",[s._v("yes")]),s._v("回车即可。")]),s._v(" "),a("p",[s._v("Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Warning: Permanently added 'github.com' (RSA) to the list of known hosts.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个警告只会出现一次，后面的操作就不会有任何警告了。")]),s._v(" "),a("p",[s._v("如果你实在担心有人冒充GitHub服务器，输入"),a("code",[s._v("yes")]),s._v("前可以对照"),a("a",{attrs:{href:"https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub的RSA Key的指纹信息"),a("OutboundLink")],1),s._v("是否与SSH连接给出的一致。")]),s._v(" "),a("h4",{attrs:{id:"_4-4-删除远程库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-删除远程库"}},[s._v("#")]),s._v(" 4.4 删除远程库")]),s._v(" "),a("p",[s._v("如果添加的时候地址写错了，或者就是想删除远程库，可以用"),a("code",[s._v("git remote rm <name>")]),s._v("命令。使用前，建议先用"),a("code",[s._v("git remote -v")]),s._v("查看远程库信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote -v\norigin  git@github.com:michaelliao/learn-git.git (fetch)\norigin  git@github.com:michaelliao/learn-git.git (push)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后，根据名字删除，比如删除"),a("code",[s._v("origin")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote rm origin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此处的“删除”其实是解除了本地和远程的绑定关系，并不是物理上删除了远程库。远程库本身并没有任何改动。要真正删除远程库，需要登录到GitHub，在后台页面找到删除按钮再删除。")]),s._v(" "),a("h4",{attrs:{id:"_4-5-克隆仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-克隆仓库"}},[s._v("#")]),s._v(" 4.5 克隆仓库")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git clone 地址\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"三-标签管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-标签管理"}},[s._v("#")]),s._v(" 三. 标签管理")]),s._v(" "),a("h3",{attrs:{id:"_1-标签的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-标签的本质"}},[s._v("#")]),s._v(" 1.标签的本质")]),s._v(" "),a("p",[s._v("标签的本质是一次commit，其指向了一个commit对象。它们的值都为各自指向提交的"),a("code",[s._v("SHA1")]),s._v("值；但是，不同于会随着提交的变化而变化的分支，一旦给某次提交添加了标签，该标签就永远不会发生变化。")]),s._v(" "),a("p",[s._v("标签是一次提交，本次提交可以指向任何分支上的一次提交，且标签定下后，不会再进行改变。")]),s._v(" "),a("h3",{attrs:{id:"_2-标签的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-标签的分类"}},[s._v("#")]),s._v(" 2. 标签的分类")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("轻量级标签")]),s._v("（"),a("code",[s._v("lightweight")]),s._v("）：不可添加注释；")]),s._v(" "),a("li",[a("strong",[s._v("带有附注的标签")]),s._v("（"),a("code",[s._v("annotated")]),s._v("）：可以添加注释；")])]),s._v(" "),a("blockquote",[a("p",[s._v("Annotated tags are meant for release while lightweight tags are meant for private or temporary object labels.")])]),s._v(" "),a("p",[s._v("以上是"),a("code",[s._v("git")]),s._v("官方文档对两种标签的说明，大意是：带注释的标签用于发布，而轻量级标签则用于私人或临时对象。")]),s._v(" "),a("h3",{attrs:{id:"_3-标签何时使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-标签何时使用"}},[s._v("#")]),s._v(" 3. 标签何时使用")]),s._v(" "),a("ul",[a("li",[s._v("版本发布：一般"),a("code",[s._v("master")]),s._v("分支都会作为项目的发布分支，当项目开发到了一个成熟的阶段，准备在"),a("code",[s._v("master")]),s._v("分支进行发布时。一般都会在"),a("code",[s._v("master")]),s._v('分支的当前提交上打上一个类似"'),a("code",[s._v("v1.2")]),s._v('"的标签；')]),s._v(" "),a("li",[s._v("版本管理：可以通过标签的形式记录项目某一阶段的状态。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230412201509398.png",alt:"image-20230412201509398"}})]),s._v(" "),a("h3",{attrs:{id:"_4-标签相关命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-标签相关命令"}},[s._v("#")]),s._v(" 4. 标签相关命令")]),s._v(" "),a("h4",{attrs:{id:"_4-1-创建一个标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-创建一个标签"}},[s._v("#")]),s._v(" 4.1 创建一个标签")]),s._v(" "),a("ul",[a("li",[s._v("轻量级标签")])]),s._v(" "),a("p",[s._v("git tag 标签名")]),s._v(" "),a("p",[s._v("我们看看一个轻量级的标签的内容：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230412204829331.png",alt:"image-20230412204829331"}})]),s._v(" "),a("p",[s._v("这里很容易看出来，轻量级的tag内容就是commit。这说明什么")]),s._v(" "),a("p",[s._v("说明：轻量级标签就是代指了一个commit的指针！！它本身就是一个commit")]),s._v(" "),a("ul",[a("li",[s._v("带附注的标签")])]),s._v(" "),a("p",[s._v('git tag -a 标签名 -m "注释"')]),s._v(" "),a("p",[s._v("创建好的标签文件存放在.git/refs/tags中")]),s._v(" "),a("p",[s._v("其实在git中tag也是一个对象，和commit、tree、blob一样")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230412204232458.png",alt:"image-20230412204232458"}})]),s._v(" "),a("p",[s._v("我们看看这个tag的具体信息：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230412204331744.png",alt:"image-20230412204331744"}})]),s._v(" "),a("p",[s._v("**可以看到标签中有一个内容指向了具体的commit。**且带附注的tag的SAH1和其指向的SAH1不一致")]),s._v(" "),a("p",[s._v("说明带附注的标签更加重量级，他是一个tag对象，不是commit，只是其内部有指向commit的指针")]),s._v(" "),a("h4",{attrs:{id:"_4-2-显示标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-显示标签"}},[s._v("#")]),s._v(" 4.2 显示标签")]),s._v(" "),a("p",[s._v("git tag 或者git tag --list")]),s._v(" "),a("p",[s._v("切换分支后，使用git tag依然可以展示标签，表示标签与tag是没有关系的")]),s._v(" "),a("h4",{attrs:{id:"_4-3-显示标签内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-显示标签内容"}},[s._v("#")]),s._v(" 4.3 显示标签内容")]),s._v(" "),a("p",[s._v("git show 标签名")]),s._v(" "),a("h4",{attrs:{id:"_4-4-查找标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-查找标签"}},[s._v("#")]),s._v(" 4.4 查找标签")]),s._v(" "),a("p",[s._v("支持正则表达式")]),s._v(" "),a("p",[a("code",[s._v("git tag -l <tag_name>")])]),s._v(" "),a("h4",{attrs:{id:"_4-5-标签推送到远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-标签推送到远程"}},[s._v("#")]),s._v(" 4.5 标签推送到远程")]),s._v(" "),a("p",[s._v("默认情况git push 是不会推送tag的。")]),s._v(" "),a("p",[s._v("推送特定的tag")]),s._v(" "),a("p",[a("code",[s._v("git push origin <tag_name>")])]),s._v(" "),a("p",[s._v("推送多个tag")]),s._v(" "),a("p",[a("code",[s._v("git push origin v2.0 v3.0")])]),s._v(" "),a("p",[s._v("推送完整指令")]),s._v(" "),a("p",[a("code",[s._v("git push origin refs/tags/v4.0:refs/tags/v4.0")])]),s._v(" "),a("p",[s._v("推送本地全部的tag")]),s._v(" "),a("p",[a("code",[s._v("git push origin --tag")])]),s._v(" "),a("h4",{attrs:{id:"_4-6-删除远程标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-删除远程标签"}},[s._v("#")]),s._v(" 4.6 删除远程标签")]),s._v(" "),a("p",[s._v("当然，我们可以直接在远程仓库上删除远程标签。但是，最好的方式还是采用命令行进行删除。删除远程标签的方法与删除远程分支的方法非常类似，同样有两种方法：")]),s._v(" "),a("p",[a("code",[s._v("git push origin :<tag_name>")])]),s._v(" "),a("p",[s._v("这种方法相当于推送一个空的标签到远程仓库，由此达到删除的效果。比如删除远程仓库中的标签"),a("code",[s._v("v3.0")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-perl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[s._v("git push origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token v-string string"}},[s._v("v3.0")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c049ecef8~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418154504982"}})]),s._v(" "),a("p",[s._v("这样远程仓库中的标签"),a("code",[s._v("V3.0")]),s._v("就被删除了：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c05ba750d~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418154554319"}})]),s._v(" "),a("p",[s._v("但是本地仓库中对应的标签"),a("code",[s._v("V3.0")]),s._v("并没有被删除：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c3a9cc162~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418154631370"}})]),s._v(" "),a("p",[s._v("上述指令为简写，"),a("strong",[s._v("完整写法如下")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("git push origin "),a("span",{pre:!0,attrs:{class:"token symbol"}},[s._v(":refs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tags"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("v3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c3e6571bb~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418154906969"}})]),s._v(" "),a("p",[a("code",[s._v("git push origin --delete <tag_name>")])]),s._v(" "),a("p",[s._v("该方法采用了更加语义化的参数"),a("code",[s._v("--delete")]),s._v("，实现远程标签的删除：")]),s._v(" "),a("div",{staticClass:"language-perl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[s._v("git push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token v-string string"}},[s._v("v2.0")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c3eef1019~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418155134748"}})]),s._v(" "),a("p",[s._v("同样成功地删除了远程仓库中的标签"),a("code",[s._v("v2.0")]),s._v("：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c400bbefd~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418155216230"}})]),s._v(" "),a("p",[s._v("但是，本地的标签"),a("code",[s._v("v2.0")]),s._v("也没有被删除：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c40587525~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418155311429"}})]),s._v(" "),a("p",[s._v("采用下列的完整写法，效果是一样的：")]),s._v(" "),a("div",{staticClass:"language-perl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-perl"}},[a("code",[s._v("git push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" tag "),a("span",{pre:!0,attrs:{class:"token v-string string"}},[s._v("v2.0")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c416b78bc~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418155513090"}})]),s._v(" "),a("blockquote",[a("p",[s._v("不难发现，删除"),a("strong",[s._v("远程分支")]),s._v("和"),a("strong",[s._v("远程标签")]),s._v("的方法是"),a("strong",[s._v("一样")]),s._v("的。")])]),s._v(" "),a("h4",{attrs:{id:"_4-7-删除本地标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7-删除本地标签"}},[s._v("#")]),s._v(" 4.7 删除本地标签")]),s._v(" "),a("p",[a("code",[s._v("git tag -d <tag_name>")])]),s._v(" "),a("p",[s._v("如通过以下命令删除标签"),a("code",[s._v("v3.0")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("git tag -d v3.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c666cfa53~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418155616562"}})]),s._v(" "),a("h4",{attrs:{id:"_4-8-标签的切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-8-标签的切换"}},[s._v("#")]),s._v(" 4.8 标签的切换")]),s._v(" "),a("p",[s._v("类似于commit的切换，会产生分离头指针")]),s._v(" "),a("p",[a("code",[s._v("git checkout tag_name")])]),s._v(" "),a("p",[s._v("如图所示，在"),a("code",[s._v("master")]),s._v("分支上进行了三次提交，并且添加了相应的标签：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c6971af14~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418161353146"}})]),s._v(" "),a("p",[s._v("当我们通过"),a("code",[s._v("checkout")]),s._v("命令切换到标签"),a("code",[s._v("v2.0")]),s._v("时：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3cadb6f5c8~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418161526176"}})]),s._v(" "),a("p",[s._v("可见，会出现游离的提交。此时查看各分支状态：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c6fb9fac7~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418161655468"}})]),s._v(" "),a("p",[s._v("如上图所示，当前处于标签"),a("code",[s._v("v2.0")]),s._v("指向的提交，并且切换标签的过程中改变了"),a("code",[s._v("HEAD")]),s._v("指针的指向。但是，并没有改变分支"),a("code",[s._v("master")]),s._v("的指向。过程如下图所示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c7233c5bb~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418162458123"}})]),s._v(" "),a("p",[s._v("也就是说，切换标签与使用"),a("code",[s._v("reset")]),s._v("进行版本回退十分相似。只不过切换标签只改变了"),a("code",[s._v("HEAD")]),s._v("指针的指向，会造成游离的提交。若有需要可以创建一个新分支进行保存。")]),s._v(" "),a("h4",{attrs:{id:"_4-9-拉取标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-9-拉取标签"}},[s._v("#")]),s._v(" 4.9 拉取标签")]),s._v(" "),a("p",[s._v("在下图所示的情况中，本地仓库"),a("code",[s._v("mygit")]),s._v("与远程仓库有公共的提交历史（同源），并且不发生合并冲突的情况下")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c735807d7~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418160517111"}})]),s._v(" "),a("p",[s._v("可以直接通过"),a("code",[s._v("git pull")]),s._v("将远程仓库的标签拉取下来，并创建本地仓库中没有的标签：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefined1718cc3c77f950e1~tplv-t2oaga2asx-zoom-in-crop-mark:4536:0:0:0.png",alt:"image-20200418160737829"}})]),s._v(" "),a("h2",{attrs:{id:"七-分支管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-分支管理"}},[s._v("#")]),s._v(" 七.分支管理")]),s._v(" "),a("h3",{attrs:{id:"_1-分支原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支原理"}},[s._v("#")]),s._v(" 1. 分支原理")]),s._v(" "),a("p",[s._v("在版本回退里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即"),a("code",[s._v("master")]),s._v("分支。"),a("code",[s._v("HEAD")]),s._v("严格来说不是指向提交，而是指向"),a("code",[s._v("master")]),s._v("，"),a("code",[s._v("master")]),s._v("才是指向提交的，所以，"),a("code",[s._v("HEAD")]),s._v("指向的就是当前分支。")]),s._v(" "),a("p",[s._v("一开始的时候，"),a("code",[s._v("master")]),s._v("分支是一条线，Git用"),a("code",[s._v("master")]),s._v("指向最新的提交，再用"),a("code",[s._v("HEAD")]),s._v("指向"),a("code",[s._v("master")]),s._v("，就能确定当前分支，以及当前分支的提交点：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                  HEAD\n                    │\n                    │\n                    ▼\n                 master\n                    │\n                    │\n                    ▼\n┌───┐    ┌───┐    ┌───┐\n│   │───▶│   │───▶│   │\n└───┘    └───┘    └───┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("每次提交，"),a("code",[s._v("master")]),s._v("分支都会向前移动一步，这样，随着你不断提交，"),a("code",[s._v("master")]),s._v("分支的线也越来越长。")]),s._v(" "),a("p",[s._v("当我们创建新的分支，例如"),a("code",[s._v("dev")]),s._v("时，Git新建了一个指针叫"),a("code",[s._v("dev")]),s._v("，指向"),a("code",[s._v("master")]),s._v("相同的提交，再把"),a("code",[s._v("HEAD")]),s._v("指向"),a("code",[s._v("dev")]),s._v("，就表示当前分支在"),a("code",[s._v("dev")]),s._v("上：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                 master\n                    │\n                    │\n                    ▼\n┌───┐    ┌───┐    ┌───┐\n│   │───▶│   │───▶│   │\n└───┘    └───┘    └───┘\n                    ▲\n                    │\n                    │\n                   dev\n                    ▲\n                    │\n                    │\n                  HEAD\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("你看，Git创建一个分支很快，因为除了增加一个"),a("code",[s._v("dev")]),s._v("指针，改改"),a("code",[s._v("HEAD")]),s._v("的指向，工作区的文件都没有任何变化！")]),s._v(" "),a("p",[s._v("不过，从现在开始，对工作区的修改和提交就是针对"),a("code",[s._v("dev")]),s._v("分支了，比如新提交一次后，"),a("code",[s._v("dev")]),s._v("指针往前移动一步，而"),a("code",[s._v("master")]),s._v("指针不变：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                 master\n                    │\n                    │\n                    ▼\n┌───┐    ┌───┐    ┌───┐    ┌───┐\n│   │───▶│   │───▶│   │───▶│   │\n└───┘    └───┘    └───┘    └───┘\n                             ▲\n                             │\n                             │\n                            dev\n                             ▲\n                             │\n                             │\n                           HEAD\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("假如我们在"),a("code",[s._v("dev")]),s._v("上的工作完成了，就可以把"),a("code",[s._v("dev")]),s._v("合并到"),a("code",[s._v("master")]),s._v("上。Git怎么合并呢？最简单的方法，就是直接把"),a("code",[s._v("master")]),s._v("指向"),a("code",[s._v("dev")]),s._v("的当前提交，就完成了合并：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                           HEAD\n                             │\n                             │\n                             ▼\n                          master\n                             │\n                             │\n                             ▼\n┌───┐    ┌───┐    ┌───┐    ┌───┐\n│   │───▶│   │───▶│   │───▶│   │\n└───┘    └───┘    └───┘    └───┘\n                             ▲\n                             │\n                             │\n                            dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("所以Git合并分支也很快！就改改指针，工作区内容也不变！")]),s._v(" "),a("p",[s._v("合并完分支后，甚至可以删除"),a("code",[s._v("dev")]),s._v("分支。删除"),a("code",[s._v("dev")]),s._v("分支就是把"),a("code",[s._v("dev")]),s._v("指针给删掉，删掉后，我们就剩下了一条"),a("code",[s._v("master")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                           HEAD\n                             │\n                             │\n                             ▼\n                          master\n                             │\n                             │\n                             ▼\n┌───┐    ┌───┐    ┌───┐    ┌───┐\n│   │───▶│   │───▶│   │───▶│   │\n└───┘    └───┘    └───┘    └───┘\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("真是太神奇了，你看得出来有些提交是通过分支完成的吗？")]),s._v(" "),a("p",[s._v("下面开始实战。")]),s._v(" "),a("p",[s._v("首先，我们创建"),a("code",[s._v("dev")]),s._v("分支，然后切换到"),a("code",[s._v("dev")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout -b dev\nSwitched to a new branch 'dev'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("git checkout")]),s._v("命令加上"),a("code",[s._v("-b")]),s._v("参数表示创建并切换，相当于以下两条命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch dev\n$ git checkout dev\nSwitched to branch 'dev'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后，用"),a("code",[s._v("git branch")]),s._v("命令查看当前分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch\n* dev\n  master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("git branch")]),s._v("命令会列出所有分支，当前分支前面会标一个"),a("code",[s._v("*")]),s._v("号。")]),s._v(" "),a("p",[s._v("然后，我们就可以在"),a("code",[s._v("dev")]),s._v("分支上正常提交，比如对"),a("code",[s._v("readme.txt")]),s._v("做个修改，加上一行：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Creating a new branch is quick.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add readme.txt \n$ git commit -m "branch test"\n[dev b17d20e] branch test\n 1 file changed, 1 insertion(+)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("现在，"),a("code",[s._v("dev")]),s._v("分支的工作完成，我们就可以切换回"),a("code",[s._v("master")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout master\nSwitched to branch 'master'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("切换回"),a("code",[s._v("master")]),s._v("分支后，再查看一个"),a("code",[s._v("readme.txt")]),s._v("文件，刚才添加的内容不见了！因为那个提交是在"),a("code",[s._v("dev")]),s._v("分支上，而"),a("code",[s._v("master")]),s._v("分支此刻的提交点并没有变：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230131162437546.png",alt:"image-20230131162437546"}})]),s._v(" "),a("p",[s._v("现在，我们把"),a("code",[s._v("dev")]),s._v("分支的工作成果合并到"),a("code",[s._v("master")]),s._v("分支上：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git merge dev\nUpdating d46f35e..b17d20e\nFast-forward\n readme.txt | 1 +\n 1 file changed, 1 insertion(+)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("code",[s._v("git merge")]),s._v("命令用于合并指定分支到当前分支。合并后，再查看"),a("code",[s._v("readme.txt")]),s._v("的内容，就可以看到，和"),a("code",[s._v("dev")]),s._v("分支的最新提交是完全一样的。")]),s._v(" "),a("p",[s._v("注意到上面的"),a("code",[s._v("Fast-forward")]),s._v("信息，Git告诉我们，这次合并是“快进模式”，也就是直接把"),a("code",[s._v("master")]),s._v("指向"),a("code",[s._v("dev")]),s._v("的当前提交，所以合并速度非常快。")]),s._v(" "),a("p",[s._v("当然，也不是每次合并都能"),a("code",[s._v("Fast-forward")]),s._v("，我们后面会讲其他方式的合并。")]),s._v(" "),a("p",[s._v("合并完成后，就可以放心地删除"),a("code",[s._v("dev")]),s._v("分支了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch -d dev\nDeleted branch dev (was b17d20e).\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("删除后，查看"),a("code",[s._v("branch")]),s._v("，就只剩下"),a("code",[s._v("master")]),s._v("分支了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch\n* master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("因为创建、合并和删除分支非常快，所以Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在"),a("code",[s._v("master")]),s._v("分支上工作效果是一样的，但过程更安全。")]),s._v(" "),a("ul",[a("li",[s._v("switch")])]),s._v(" "),a("p",[s._v("我们注意到切换分支使用"),a("code",[s._v("git checkout <branch>")]),s._v("，而前面讲过的撤销修改则是"),a("code",[s._v("git checkout -- <file>")]),s._v("，同一个命令，有两种作用，确实有点令人迷惑。")]),s._v(" "),a("p",[s._v("实际上，切换分支这个动作，用"),a("code",[s._v("switch")]),s._v("更科学。因此，最新版本的Git提供了新的"),a("code",[s._v("git switch")]),s._v("命令来切换分支：")]),s._v(" "),a("p",[s._v("创建并切换到新的"),a("code",[s._v("dev")]),s._v("分支，可以使用：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch -c dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("直接切换到已有的"),a("code",[s._v("master")]),s._v("分支，可以使用：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用新的"),a("code",[s._v("git switch")]),s._v("命令，比"),a("code",[s._v("git checkout")]),s._v("要更容易理解。")]),s._v(" "),a("h3",{attrs:{id:"_2-推送新分支到远程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-推送新分支到远程"}},[s._v("#")]),s._v(" 2. 推送新分支到远程")]),s._v(" "),a("p",[s._v("首先在本地创建新分支")]),s._v(" "),a("p",[a("code",[s._v("git checkout -b dev")])]),s._v(" "),a("p",[s._v("然后将新分支推到远程（远程没有该分支）")]),s._v(" "),a("p",[a("code",[s._v("git push --set-upstream origin dev")])]),s._v(" "),a("h3",{attrs:{id:"_3-拉取远程对应的分支到本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-拉取远程对应的分支到本地"}},[s._v("#")]),s._v(" 3. 拉取远程对应的分支到本地")]),s._v(" "),a("p",[a("code",[s._v("git checkout -b 本地分支名x origin/远程分支名x")])]),s._v(" "),a("h3",{attrs:{id:"_4-合并冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-合并冲突"}},[s._v("#")]),s._v(" 4. 合并冲突")]),s._v(" "),a("p",[s._v("人生不如意之事十之八九，合并分支往往也不是一帆风顺的。")]),s._v(" "),a("p",[s._v("准备新的"),a("code",[s._v("feature1")]),s._v("分支，继续我们的新分支开发：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch -c feature1\nSwitched to a new branch 'feature1'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("修改"),a("code",[s._v("readme.txt")]),s._v("最后一行，改为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Creating a new branch is quick AND simple.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在"),a("code",[s._v("feature1")]),s._v("分支上提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add readme.txt\n\n$ git commit -m "AND simple"\n[feature1 14096d0] AND simple\n 1 file changed, 1 insertion(+), 1 deletion(-)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("切换到"),a("code",[s._v("master")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch master\nSwitched to branch 'master'\nYour branch is ahead of 'origin/master' by 1 commit.\n  (use \"git push\" to publish your local commits)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("Git还会自动提示我们当前"),a("code",[s._v("master")]),s._v("分支比远程的"),a("code",[s._v("master")]),s._v("分支要超前1个提交。")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("master")]),s._v("分支上把"),a("code",[s._v("readme.txt")]),s._v("文件的最后一行改为：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Creating a new branch is quick & simple.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add readme.txt \n$ git commit -m "& simple"\n[master 5dc6824] & simple\n 1 file changed, 1 insertion(+), 1 deletion(-)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("现在，"),a("code",[s._v("master")]),s._v("分支和"),a("code",[s._v("feature1")]),s._v("分支各自都分别有新的提交，变成了这样：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                            HEAD\n                              │\n                              │\n                              ▼\n                           master\n                              │\n                              │\n                              ▼\n                            ┌───┐\n                         ┌─▶│   │\n┌───┐    ┌───┐    ┌───┐  │  └───┘\n│   │───▶│   │───▶│   │──┤\n└───┘    └───┘    └───┘  │  ┌───┐\n                         └─▶│   │\n                            └───┘\n                              ▲\n                              │\n                              │\n                          feature1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突，我们试试看：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git merge feature1\nAuto-merging readme.txt\nCONFLICT (content): Merge conflict in readme.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("果然冲突了！Git告诉我们，"),a("code",[s._v("readme.txt")]),s._v("文件存在冲突，必须手动解决冲突后再提交。"),a("code",[s._v("git status")]),s._v("也可以告诉我们冲突的文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git status\nOn branch master\nYour branch is ahead of \'origin/master\' by 2 commits.\n  (use "git push" to publish your local commits)\n\nYou have unmerged paths.\n  (fix conflicts and run "git commit")\n  (use "git merge --abort" to abort the merge)\n\nUnmerged paths:\n  (use "git add <file>..." to mark resolution)\n\n\tboth modified:   readme.txt\n\nno changes added to commit (use "git add" and/or "git commit -a")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("我们可以直接查看readme.txt的内容：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Git is a distributed version control system.\nGit is free software distributed under the GPL.\nGit has a mutable index called stage.\nGit tracks changes of files.\n<<<<<<< HEAD\nCreating a new branch is quick & simple.\n=======\nCreating a new branch is quick AND simple.\n>>>>>>> feature1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("Git用"),a("code",[s._v("<<<<<<<")]),s._v("，"),a("code",[s._v("=======")]),s._v("，"),a("code",[s._v(">>>>>>>")]),s._v("标记出不同分支的内容，我们修改如下后保存：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Creating a new branch is quick and simple.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("再提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add readme.txt \n$ git commit -m "conflict fixed"\n[master cf810e4] conflict fixed\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("现在，"),a("code",[s._v("master")]),s._v("分支和"),a("code",[s._v("feature1")]),s._v("分支变成了下图所示：")]),s._v(" "),a("div",{staticClass:"language-ascii line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("                                     HEAD\n                                       │\n                                       │\n                                       ▼\n                                    master\n                                       │\n                                       │\n                                       ▼\n                            ┌───┐    ┌───┐\n                         ┌─▶│   │───▶│   │\n┌───┐    ┌───┐    ┌───┐  │  └───┘    └───┘\n│   │───▶│   │───▶│   │──┤             ▲\n└───┘    └───┘    └───┘  │  ┌───┐      │\n                         └─▶│   │──────┘\n                            └───┘\n                              ▲\n                              │\n                              │\n                          feature1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("用带参数的"),a("code",[s._v("git log")]),s._v("也可以看到分支的合并情况：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git log --graph --pretty=oneline --abbrev-commit\n*   cf810e4 (HEAD -> master) conflict fixed\n|\\  \n| * 14096d0 (feature1) AND simple\n* | 5dc6824 & simple\n|/  \n* b17d20e branch test\n* d46f35e (origin/master) remove test.txt\n* b84166e add test.txt\n* 519219b git tracks changes\n* e43a48b understand how stage works\n* 1094adb append GPL\n* e475afc add distributed\n* eaadf4e wrote a readme file\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("最后，删除"),a("code",[s._v("feature1")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch -d feature1\nDeleted branch feature1 (was 14096d0).\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("工作完成。")]),s._v(" "),a("p",[s._v("哪些命令可能会产生冲突？")]),s._v(" "),a("p",[s._v("push、pull、stash、rebase、merge")]),s._v(" "),a("p",[s._v("产生冲突的本质就是不同的分支在 同一个文件中修改了同一行内容")]),s._v(" "),a("h3",{attrs:{id:"_5-merge与rebase区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-merge与rebase区别"}},[s._v("#")]),s._v(" 5. merge与rebase区别")]),s._v(" "),a("p",[s._v("首先需要明确，两种方案都是将两个分支合并为一个分支。既然是合并，那么就有可能会产生冲突，过程中需要我们手动解决冲突。")]),s._v(" "),a("h4",{attrs:{id:"_5-1-merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-merge"}},[s._v("#")]),s._v(" 5.1 merge")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230201232521410.png",alt:"image-20230201232521410"}})]),s._v(" "),a("p",[s._v("如图所示，有两个分支，一个为master分支，一个为dev分支。在commit 1节点，开启了新的分支，后续master继续开发，dev继续向前开发。当开发到如图所示的情况时，master分支想要合并dev分支，此时master可以使用以下命令：")]),s._v(" "),a("div",{staticClass:"language-GIT line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git merge dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意作用对象，是让目标分支融合到当前分支")]),s._v(" "),a("p",[s._v("即站在master的视角下，让dev分支合并到master分支。结果如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230201232606184.png",alt:"image-20230201232606184"}})]),s._v(" "),a("p",[s._v("此时master会产生一个新的提交，dev也会产生一个新的提交。经过冲突解决后，形成如图所示的分支结构。这样，master分支就能成功感知到dev分支的存在了。dev分支也可以感知到master的存在，至此，两个分支代码相同了")]),s._v(" "),a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[s._v("使用 merge 是很好的方式，因为它是一种"),a("strong",[s._v("非破坏性的")]),s._v("操作，对现有分支不会以任何方式被更改。")]),s._v(" "),a("li",[s._v("另一方面，这也意味着 "),a("code",[s._v("feature")]),s._v(" 分支每次需要合并上游更改时，"),a("strong",[s._v("它都将产生一个额外的合并提交")]),s._v("。")])]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("如果master 提交非常活跃，这可能会严重污染你的 "),a("code",[s._v("feature")]),s._v(" 分支历史记录。不过这个问题可以使用高级选项 "),a("code",[s._v("git log")]),s._v(" 来缓解")])]),s._v(" "),a("h4",{attrs:{id:"_5-2-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-rebase"}},[s._v("#")]),s._v(" 5.2 rebase")]),s._v(" "),a("p",[s._v("还是如图所示的图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230201232521410.png",alt:"image-20230201232521410"}})]),s._v(" "),a("p",[s._v("如果我们在dev的视角下，rebase master，会出现以下的结果")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230201232712987.png",alt:"image-20230201232712987"}})]),s._v(" "),a("p",[s._v("从图中我们可以看出来，rebase过后，变成了一条平滑的曲线，没有分支操作。另外，rebase不会进行新的提交，而是做“桥接”工作。")]),s._v(" "),a("p",[s._v("其找到dev和master的公共祖先commit，然后将5、6拼接到公共祖先，原先的4,3,2则嫁接到dev分支的末尾。")]),s._v(" "),a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[s._v("rebase 的主要好处是可以获得更清晰的项目历史。首先，它消除了 git merge 所需的不必要的合并提交；其次，正如你在上图中所看到的，rebase 会产生完美线性的项目历史记录，你可以在 feature分支上没有任何分叉的情况下一直追寻到项目的初始提交。")])]),s._v(" "),a("p",[s._v("缺点：")]),s._v(" "),a("ul",[a("li",[s._v("破坏了原来的分支提交结构，无法从原本上去查看提交情况。")])]),s._v(" "),a("h5",{attrs:{id:"rebase冲突"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase冲突"}},[s._v("#")]),s._v(" rebase冲突")]),s._v(" "),a("p",[s._v("其实在rebase时也是会产生冲突的，当产生冲突时，会产生以下提示")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230210192841216.png",alt:"image-20230210192841216"}})]),s._v(" "),a("p",[s._v("当出现以下提示时，我们可以用idea自带的工具来解决冲突。")]),s._v(" "),a("p",[s._v("当解决冲突后，就会有以下选项进行")]),s._v(" "),a("p",[a("code",[s._v("git rebase --continue")]),s._v(" 修改了冲突，继续rebase")]),s._v(" "),a("p",[a("code",[s._v("git rebase --skip")]),s._v(" 跳过这个冲突（不建议使用，因为本地代码可能会丢失）")]),s._v(" "),a("p",[a("code",[s._v("git rebase --abort")]),s._v(" 放弃本次rebase，回到rebase之前。")]),s._v(" "),a("p",[a("strong",[s._v("一般不会使用skip。如果有能力修改冲突，修改冲突后continue，如果没有能力修改冲突，就abort放弃本次rebase。")])]),s._v(" "),a("p",[s._v("参考：")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://joyohub.com/2020/04/06/git-rebase/",target:"_blank",rel:"noopener noreferrer"}},[s._v("【Git】：git rebase和git merge有什么区别？"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://waynerv.com/posts/git-rebase-intro/",target:"_blank",rel:"noopener noreferrer"}},[s._v("git rebase 用法详解与工作原理"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"_6-bug分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-bug分支"}},[s._v("#")]),s._v(" 6. bug分支")]),s._v(" "),a("p",[s._v("软件开发中，bug就像家常便饭一样。有了bug就需要修复，在Git中，由于分支是如此的强大，所以，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。")]),s._v(" "),a("p",[s._v("当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支"),a("code",[s._v("issue-101")]),s._v("来修复它，但是，等等，当前正在"),a("code",[s._v("dev")]),s._v("上进行的工作还没有提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git status\nOn branch dev\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   hello.py\n\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   readme.txt\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？")]),s._v(" "),a("h4",{attrs:{id:"_6-1-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-stash"}},[s._v("#")]),s._v(" 6.1 stash")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230203000029444.png",alt:"image-20230203000029444"}})]),s._v(" "),a("p",[s._v("幸好，Git还提供了一个"),a("code",[s._v("stash")]),s._v("功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git stash\nSaved working directory and index state WIP on dev: f52c633 add merge\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("现在，用"),a("code",[s._v("git status")]),s._v("查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。")]),s._v(" "),a("p",[s._v("首先确定要在哪个分支上修复bug，假定需要在"),a("code",[s._v("master")]),s._v("分支上修复，就从"),a("code",[s._v("master")]),s._v("创建临时分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git checkout master\nSwitched to branch 'master'\nYour branch is ahead of 'origin/master' by 6 commits.\n  (use \"git push\" to publish your local commits)\n\n$ git checkout -b issue-101\nSwitched to a new branch 'issue-101'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("现在修复bug，需要把“Git is free software ...”改为“Git is a free software ...”，然后提交：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add readme.txt \n$ git commit -m "fix bug 101"\n[issue-101 4c805e2] fix bug 101\n 1 file changed, 1 insertion(+), 1 deletion(-)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("修复完成后，切换到"),a("code",[s._v("master")]),s._v("分支，并完成合并，最后删除"),a("code",[s._v("issue-101")]),s._v("分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch master\nSwitched to branch 'master'\nYour branch is ahead of 'origin/master' by 6 commits.\n  (use \"git push\" to publish your local commits)\n\n$ git merge --no-ff -m \"merged bug fix 101\" issue-101\nMerge made by the 'recursive' strategy.\n readme.txt | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("太棒了，原计划两个小时的bug修复只花了5分钟！现在，是时候接着回到"),a("code",[s._v("dev")]),s._v("分支干活了！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch dev\nSwitched to branch 'dev'\n\n$ git status\nOn branch dev\nnothing to commit, working tree clean\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("工作区是干净的，刚才的工作现场存到哪去了？用"),a("code",[s._v("git stash list")]),s._v("命令看看：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git stash list\nstash@{0}: WIP on dev: f52c633 add merge\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：")]),s._v(" "),a("p",[s._v("一是用"),a("code",[s._v("git stash apply")]),s._v("恢复，但是恢复后，stash内容并不删除，你需要用"),a("code",[s._v("git stash drop")]),s._v("来删除；")]),s._v(" "),a("p",[s._v("另一种方式是用"),a("code",[s._v("git stash pop")]),s._v("，恢复的同时把stash内容也删了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git stash pop\nOn branch dev\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   hello.py\n\nChanges not staged for commit:\n  (use "git add <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n\tmodified:   readme.txt\n\nDropped refs/stash@{0} (5d677e2ee266f39ea296182fb2354265b91b3b2a)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("再用"),a("code",[s._v("git stash list")]),s._v("查看，就看不到任何stash内容了：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git stash list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("你可以多次stash，恢复的时候，先用"),a("code",[s._v("git stash list")]),s._v("查看，然后恢复指定的stash，用命令：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git stash apply stash@{0}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在master分支上修复了bug后，我们要想一想，dev分支是早期从master分支分出来的，所以，这个bug其实在当前dev分支上也存在。")]),s._v(" "),a("p",[s._v("那怎么在dev分支上修复同样的bug？重复操作一次，提交不就行了？(思考：可以在dev上rebase master吗)")]),s._v(" "),a("p",[s._v("有木有更简单的方法？")]),s._v(" "),a("h4",{attrs:{id:"_6-2-cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-cherry-pick"}},[s._v("#")]),s._v(" 6.2 cherry-pick")]),s._v(" "),a("p",[s._v("有！")]),s._v(" "),a("p",[s._v("同样的bug，要在dev上修复，我们只需要把"),a("code",[s._v("4c805e2 fix bug 101")]),s._v("这个提交所做的修改“复制”到dev分支。注意：我们只想复制"),a("code",[s._v("4c805e2 fix bug 101")]),s._v("这个提交所做的修改，并不是把整个master分支merge过来。")]),s._v(" "),a("p",[s._v("为了方便操作，Git专门提供了一个"),a("code",[s._v("cherry-pick")]),s._v("命令，让我们能复制一个特定的提交到当前分支：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch\n* dev\n  master\n$ git cherry-pick 4c805e2\n[master 1d4b803] fix bug 101\n 1 file changed, 1 insertion(+), 1 deletion(-)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("Git自动给dev分支做了一次提交，注意这次提交的commit是"),a("code",[s._v("1d4b803")]),s._v("，它并不同于master的"),a("code",[s._v("4c805e2")]),s._v("，因为这两个commit只是改动相同，但确实是两个不同的commit。用"),a("code",[s._v("git cherry-pick")]),s._v("，我们就不需要在dev分支上手动再把修bug的过程重复一遍。")]),s._v(" "),a("p",[s._v("有些聪明的童鞋会想了，既然可以在master分支上修复bug后，在dev分支上可以“重放”这个修复过程，那么直接在dev分支上修复bug，然后在master分支上“重放”行不行？当然可以，不过你仍然需要"),a("code",[s._v("git stash")]),s._v("命令保存现场，才能从dev分支切换到master分支。")]),s._v(" "),a("p",[s._v("修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；")]),s._v(" "),a("p",[s._v("当手头工作没有完成时，先把工作现场"),a("code",[s._v("git stash")]),s._v("一下，然后去修复bug，修复后，再"),a("code",[s._v("git stash pop")]),s._v("，回到工作现场；")]),s._v(" "),a("p",[s._v("在master分支上修复的bug，想要合并到当前dev分支，可以用"),a("code",[s._v("git cherry-pick <commit>")]),s._v("命令，把bug提交的修改“复制”到当前分支，避免重复劳动。")]),s._v(" "),a("p",[s._v("merge和rebase其实是一个在分"),a("strong",[s._v("支维度")]),s._v("上进行的操作，而cherry-pick其实是在 commit节点上维度的进行操作")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cherry-pick 常用命令")]),s._v("\ngit cherry-pick commitId\ngit cherry-pick commitId1 commitId2 commitId3\ngit cherry-pick commitId1..commitId3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("cherry-pick和merge、rebase本质目的都一样，就是要合并代码。所以cherry-pick也会产生冲突，这个时候git会给出以下几种选项供我们选择")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("解决冲突，之后：git add ,git cherry-pick --continue\n回滚：git cherry-pick --abort\n中断： git cherry-pick --quit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230203001127670.png",alt:"image-20230203001127670"}})]),s._v(" "),a("h3",{attrs:{id:"_7-feature分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-feature分支"}},[s._v("#")]),s._v(" 7. feature分支")]),s._v(" "),a("p",[s._v("软件开发中，总有无穷无尽的新的功能要不断添加进来。")]),s._v(" "),a("p",[s._v("添加一个新功能时，你肯定不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个feature分支，在上面开发，完成后，合并，最后，删除该feature分支。")]),s._v(" "),a("p",[s._v("现在，你终于接到了一个新任务：开发代号为Vulcan的新功能，该功能计划用于下一代星际飞船。")]),s._v(" "),a("p",[s._v("于是准备开发：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch -c feature-vulcan\nSwitched to a new branch 'feature-vulcan'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("5分钟后，开发完毕：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('$ git add vulcan.py\n\n$ git status\nOn branch feature-vulcan\nChanges to be committed:\n  (use "git reset HEAD <file>..." to unstage)\n\n\tnew file:   vulcan.py\n\n$ git commit -m "add feature vulcan"\n[feature-vulcan 287773e] add feature vulcan\n 1 file changed, 2 insertions(+)\n create mode 100644 vulcan.py\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("切回"),a("code",[s._v("dev")]),s._v("，准备合并：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git switch dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。")]),s._v(" "),a("p",[s._v("但是！")]),s._v(" "),a("p",[s._v("就在此时，接到上级命令，因经费不足，新功能必须取消！")]),s._v(" "),a("p",[s._v("虽然白干了，但是这个包含机密资料的分支还是必须就地销毁：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch -d feature-vulcan\nerror: The branch 'feature-vulcan' is not fully merged.\nIf you are sure you want to delete it, run 'git branch -D feature-vulcan'.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("销毁失败。Git友情提醒，"),a("code",[s._v("feature-vulcan")]),s._v("分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用大写的"),a("code",[s._v("-D")]),s._v("参数。。")]),s._v(" "),a("p",[s._v("现在我们强行删除：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git branch -D feature-vulcan\nDeleted branch feature-vulcan (was 287773e).\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("终于删除成功！")]),s._v(" "),a("h3",{attrs:{id:"_8-团队协作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-团队协作"}},[s._v("#")]),s._v(" 8. 团队协作")]),s._v(" "),a("p",[s._v("当你从远程仓库克隆时，实际上Git自动把本地的"),a("code",[s._v("master")]),s._v("分支和远程的"),a("code",[s._v("master")]),s._v("分支对应起来了，并且，远程仓库的默认名称是"),a("code",[s._v("origin")]),s._v("。")]),s._v(" "),a("p",[s._v("要查看远程库的信息，用"),a("code",[s._v("git remote")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote\norigin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("或者，用"),a("code",[s._v("git remote -v")]),s._v("显示更详细的信息：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git remote -v\norigin  git@github.com:michaelliao/learngit.git (fetch)\norigin  git@github.com:michaelliao/learngit.git (push)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("上面显示了可以抓取和推送的"),a("code",[s._v("origin")]),s._v("的地址。如果没有推送权限，就看不到push的地址。")]),s._v(" "),a("h3",{attrs:{id:"_9-推送分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-推送分支"}},[s._v("#")]),s._v(" 9. 推送分支")]),s._v(" "),a("p",[s._v("推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push origin master\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果要推送其他分支，比如"),a("code",[s._v("dev")]),s._v("，就改成：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git push origin dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("master")]),s._v("分支是主分支，因此要时刻与远程同步；")]),s._v(" "),a("li",[a("code",[s._v("dev")]),s._v("分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；")]),s._v(" "),a("li",[s._v("bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；")]),s._v(" "),a("li",[s._v("feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。")])]),s._v(" "),a("p",[s._v("总之，就是在Git中，分支完全可以在本地自己藏着玩，是否推送，视你的心情而定！")]),s._v(" "),a("h2",{attrs:{id:"八-git-底层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-git-底层原理"}},[s._v("#")]),s._v(" 八.git 底层原理")]),s._v(" "),a("p",[s._v("https://jingsam.github.io/2018/06/03/git-objects.html")]),s._v(" "),a("h2",{attrs:{id:"九-其他特殊操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九-其他特殊操作"}},[s._v("#")]),s._v(" 九.其他特殊操作")]),s._v(" "),a("h3",{attrs:{id:"_1-本地已经提交的commit修改邮箱等信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-本地已经提交的commit修改邮箱等信息"}},[s._v("#")]),s._v(" 1. 本地已经提交的commit修改邮箱等信息")]),s._v(" "),a("p",[s._v("因为公司的审核系统，git commit提交的邮箱必须是公司的工作邮箱，不能是自己的邮箱。这就意味着我本地的新提交如果不是公司的邮箱就无法进行提交，该怎么办呢？这个时候就要使用git rebase操作了。")]),s._v(" "),a("p",[s._v("①首先，我们可以通过git log --oneline查出我们需要修改哪些commit的提交信息。选择我们需要提交的信息的上一个commitHash")]),s._v(" "),a("p",[s._v("②使用以下命令进入rebase 的交互页面")]),s._v(" "),a("div",{staticClass:"language-SQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("git rebase "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i commitHash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此时你会进入到一个交互界面，这个时候，在对应的commitHash前面讲pick修改为e，然后:wq 退出。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230410210308055.png",alt:"image-20230410210308055"}})]),s._v(" "),a("p",[s._v("③如果要进行author邮箱等修改操作，使用以下命令更新邮箱")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v('git config --global user.email ”email“\n\ngit config --global user.name "name“  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("之后可以检测结果")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git config user.email\ngit config user.name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("没有问题后，使用命令")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git commit --amend --reset-author\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("④遇到交互界面，什么都不用做，直接退出即可。")]),s._v(" "),a("p",[s._v("之后在通过git log --oneline检查是否有误")]),s._v(" "),a("p",[s._v("问：如果修改的是第一次提交怎么办？")]),s._v(" "),a("p",[s._v("我们使用git rebase -i 第一次hash 是没有办法修改首节点的，这个时候我们可以使用下面的命令修改首commit节点")]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git rebase -i --root\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);