(window.webpackJsonp=window.webpackJsonp||[]).push([[136],{462:function(n,a,t){"use strict";t.r(a);var i=t(4),o=Object(i.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"一-背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-背景"}},[n._v("#")]),n._v(" 一.背景")]),n._v(" "),a("blockquote",[a("p",[n._v("从前面的博客可以看出，我们的自动装配原理其实也是通过spring.factories文件去识别需要自动加载的类的类路径，ConfigrationClassParser读取了这些信息后，加载beanDefinition。")])]),n._v(" "),a("p",[n._v("但是在一个spring项目启动的过程中，什么时候才是beanDefinition的加载时期，我们这个里@Import加载beanDefinition的真正时期是什么时候？这个时候我们就需要了解一个核心的方法：AbstractApplicationContext.refresh()。")]),n._v(" "),a("p",[n._v("https://www.cnblogs.com/coder-zyc/p/14583011.html")]),n._v(" "),a("h1",{attrs:{id:"spring-beandefinition加载流程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-beandefinition加载流程分析"}},[n._v("#")]),n._v(" "),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("Spring BeanDefinition加载流程分析"),a("OutboundLink")],1)]),n._v(" "),a("p",[a("strong",[n._v("什么是bean定义信息?")])]),n._v(" "),a("p",[n._v("bean定义信息是bean在Spring中的描述，也就是"),a("strong",[n._v("BeanDefinition")]),n._v("，里面存放bean元数据，比如Bean类名、scope、属性、构造函数参数列表、依赖的bean、是否是单例类、是否是懒加载等一些列信息；有了BeanDefinition，Spring容器可以根据BeanDefinition获取到Class属性进行反射创建Bean；")]),n._v(" "),a("p",[n._v("bean定义信息加载会有读取配置类，扫描配置类下注入的Bean和指定的类路径，注册BeanDefinition，存储的BeanDefinition会以beanDefinitionMap的形式放在BeanFactory的实现类，让其根据创建BeanDefinition创建对象；")]),n._v(" "),a("ul",[a("li",[n._v("读取配置类")])]),n._v(" "),a("p",[n._v("BeanDefinitionReader接口： 既可以使用BeanDefinitionRegistry构造，也可以通过loadBeanDefinitions把"),a("strong",[n._v("配置")]),n._v("加载为多个BeanDefinition并注册到BeanDefinitionRegistry中；")]),n._v(" "),a("p",[n._v("实现类如下：")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202108/1334716-20210822012535017-1778871215.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210822012535017-1778871215.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("XmlBeanDefinitionReader从XML配置中读取BeanDefinition；")]),n._v(" "),a("p",[n._v("PropertiesBeanDefinitionReader从Properties文件读取BeanDefinition；")]),n._v(" "),a("p",[n._v("AnnotatedBeanDefinitionReader对带有@Configuration注解的BeanDefinition进行注册；")]),n._v(" "),a("ul",[a("li",[n._v("扫描配置类，如@Configuration以外的注解（@PropertySource，@ComponentScan，@Import，@ImportResource，@Bean methods），接口的默认方法，superclass")])]),n._v(" "),a("p",[n._v("ClassPathBeanDefinitionScanner类： 可以扫描到@Component @Repository @Service @Controller 的BeanDefinition注册到容器中；")]),n._v(" "),a("ul",[a("li",[n._v("注册BeanDefinition")])]),n._v(" "),a("p",[n._v("BeanDefinitionRegistry接口：具有增，查，删BeanDefinition的能力；一次只能注册一个BeanDefinition；")]),n._v(" "),a("p",[n._v("实现类SimpleBeanDefinitionRegistry，DefaultListableBeanFactory，GenericApplicationContext等 一般实现类里 都都有一个beanDefinitionMap来存储 BeanDefinition；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202108/1334716-20210822013514017-128543374.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210822013514017-128543374.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("在bean定义信息加载过程中会涉及BeanFactoryPostProcessor 和 BeanPostProcessor 这两个后置处理器；")]),n._v(" "),a("p",[n._v("前面说到BeanFactoryPostProcessor与BeanPostProcessor"),a("strong",[n._v("不一样")]),n._v("，BeanFactoryPostProcessor是BeanFactory的后置处理器，它为Spring提供一种的容器扩展机制，该机制类似一种钩子函数，它允许我们在容器实例化相应对象之前，对注册到容器的BeanDefinition所保存的信息做相应的修改；关于BeanFactoryPostProcessor的注释如下；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327161858612-741211753.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327161858612-741211753.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("注：BeanFactory为访问容器顶层的接口，它只定义如何访问容器内管理的Bean的方法，各个BeanFactory的具体实现类负责具体Bean的注册以及管理工作；")]),n._v(" "),a("p",[n._v("Spring 配置文件中每一个节点元素在 Spring 容器里都通过一个 BeanDefinition 对象表示，BeanDefinition接口定义了获取/设置bean的定义信息的方法，bean的配置信息包括其对应的对象的class类型、是否是抽象类、构造方法参数以及其他属性等；而在容器中每一个对象都会有一个BeanDefinition的实例与之相对应，该BeanDefinition的实例负责保存对象的所有必要信息；RootBeanDefinition和GenericBeanDefinition为主要的实现类**（ChildBeanDefinition类从Spring2.5开始，ChildBeanDefinition已经不再使用，取而代之的是GenericBeanDefinition）**；关于BeanDefinition 的注释如下；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327162038591-719101171.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327162038591-719101171.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("BeanDefinition继承树如下")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202108/1334716-20210822003851641-34782906.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210822003851641-34782906.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[n._v("AbstractBeanDefinition类：抽象类统一实现了BeanDefinition定义的一部分操作，可以说是定义了BeanDefinition很多默认的属性；正是在AbstractBeanDefinition基础上，Spring衍生出了一系列BeanDefinition；")]),n._v(" "),a("li",[n._v("RootBeanDefinition类：表明它是一个可合并的BeanDefinition，在Spring beanFactory运行期间，可以返回一个特定的bean；")]),n._v(" "),a("li",[n._v("ChildBeanDefinition类："),a("strong",[n._v("从Spring2.5开始，ChildBeanDefinition已经不再使用，取而代之的是GenericBeanDefinition")]),n._v("；")]),n._v(" "),a("li",[n._v("GenericBeanDefinition类： 从Spring2.5开始，注册beandefintion首选的是GenericBeanDefinition；GenericBeanDefinition允许动态的设置父bean；GenericBeanDefinition可以作为RootBeanDefinition与ChildBeanDefinition的替代品；")])]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202108/1334716-20210822005258306-443633491.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210822005258306-443633491.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[n._v("AnnotatedBeanDefinition接口：表示注解类型BeanDefinition；有两个重要的属性，AnnotationMetadata，MethodMetadata分别表示BeanDefinition的注解元信息和方法元信息实现了此接口的BeanDefinition可以获取到注解元数据和方法元数据；")]),n._v(" "),a("li",[n._v("AnnotatedGenericBeanDefinition类：表示带注解修饰的注册组件的BeanDefinition类，如@Configuration注解注释的BeanDefinition类；")]),n._v(" "),a("li",[n._v("ScannedGenericBeanDefinition类：表示@Component、@Service、@Controller等注解注释的BeanDefinition类；")])]),n._v(" "),a("p",[n._v("BeanDefinitionRegistryPostProcessor是bean定义信息注册器的后置器，"),a("strong",[n._v("它的执行时机为所有的bean定义信息（BeanDefinition）将要被加载到容器的时候，但此时Bean实例还没有被实例化")]),n._v("；它与BeanFactoryPostProcessor区别在于，BeanFactoryPostProcessor执行是在"),a("strong",[n._v("所有的bean定义信息已经加载到容器的时候")]),n._v("，因此"),a("strong",[n._v("BeanDefinitionRegistryPostProcessor")]),n._v("的执行优先于"),a("strong",[n._v("BeanFactoryPostProcessor")]),n._v("的执行，它们的相同点是"),a("strong",[n._v("执行时bean实例都没被*"),a("em",[n._v("实例化*")])]),n._v("；")]),n._v(" "),a("p",[n._v("如要对配置文件进行加解密，这个可以在bean定义信息已加载完成，但bean未实例化前进行处理，这个可使用BeanFactoryPostProcessor处理（如jasypt-spring-boot-starter就是类似这种处理的）；")]),n._v(" "),a("p",[n._v("注：BeanDefinitionRegistry 接口提供了向容器手工注册 BeanDefinition 对象的方法；")]),n._v(" "),a("p",[n._v("org.springframework.context.support.AbstractApplicationContext#refresh用于容器创建和刷新，"),a("strong",[n._v("IOC容器的一切从这里开始")]),n._v("；")]),n._v(" "),a("p",[n._v("下面Debug以AnnotationConfigApplicationContext解析配置类作为分析BeanDefinition加载，而用于加载Xml类型的配置文件的ClassPathXmlApplicationContext的BeanDefinition加载是不一样的；")]),n._v(" "),a("p",[n._v("ClassPathXmlApplicationContext是在AbstractApplicationContext#obtainFreshBeanFactory进行BeanDefinition的解析加载，最终会调用AbstractRefreshableApplicationContext#refreshBeanFactory加载BeanDefinition；")]),n._v(" "),a("h2",{attrs:{id:"加载bean定义信息流程如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载bean定义信息流程如下"}},[n._v("#")]),n._v(" 加载bean定义信息流程如下"),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E5%8A%A0%E8%BD%BDbean%E5%AE%9A%E4%B9%89%E4%BF%A1%E6%81%AF%E6%B5%81%E7%A8%8B%E5%A6%82%E4%B8%8B",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[n._v("添加测试代码")])]),n._v(" "),a("p",[n._v("配置类")]),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@ComponentScan")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),n._v("basePackages "),a("span",{staticClass:"token operator",staticStyle:{margin:"0px",padding:"0px",color:"rgb(166, 127, 89)",background:"rgba(255, 255, 255, 0.5)","font-family":"inherit"}},[n._v("=")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v(" "),a("span",{staticClass:"token string",staticStyle:{margin:"0px",padding:"0px",color:"rgb(47, 156, 10)","font-family":"inherit"}},[n._v('"org.example.spring.basic.beans"')]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),n._v("\n"),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Configuration")]),n._v("\n"),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("BeanFactoryConfig")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Bean")]),n._v("\n    "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Person")]),n._v(" "),a("span",{staticClass:"token function",staticStyle:{margin:"0px",padding:"0px",color:"rgb(47, 156, 10)","font-family":"inherit"}},[n._v("person")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n        "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("return")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("new")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Person")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(";")]),n._v("\n    "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),n._v("\n"),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])]),n._v(" "),a("p"),n._v(" "),a("p",[n._v("在org.example.spring.basic.beans包下添加下面几个类；")]),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[n._v(" "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Controller")]),n._v("\n"),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("BeanController")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n"),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">private</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">int</span> id<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">private</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> name<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">private</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">final</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">static</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">Logger</span> logger <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">LoggerFactory</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getLogger</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeanController</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">class</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeanController</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"BeanController constructor without params"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">int</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getId</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">return</span> id<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">void</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">setId</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">int</span> id<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">this</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span>id <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> id<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getName</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">return</span> name<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">void</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">setName</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> name<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">this</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span>name <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> name<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token annotation punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">@Override</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">toString</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">return</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"BeanController{"</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span>\n            <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"id="</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> id <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span>\n            <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">", name=\'"</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> name <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> <span class="token char" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">\'\\ \'</span>\' <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span>\n            <span class="token char" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">\'}\'</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n')])])]),a("p",[a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])])]),a("p"),n._v(" "),a("p"),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[n._v(" "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Component")]),n._v("\n"),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("DemoBeanDefinitionRegistryPostProcessor")]),n._v("\n        "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("implements")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("BeanDefinitionRegistryPostProcessor")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("private")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("final")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("static")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Logger")]),n._v(" logger "),a("span",{staticClass:"token operator",staticStyle:{margin:"0px",padding:"0px",color:"rgb(166, 127, 89)",background:"rgba(255, 255, 255, 0.5)","font-family":"inherit"}},[n._v("=")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("LoggerFactory")]),n._v("\n            "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),a("span",{staticClass:"token function",staticStyle:{margin:"0px",padding:"0px",color:"rgb(47, 156, 10)","font-family":"inherit"}},[n._v("getLogger")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("DemoBeanDefinitionRegistryPostProcessor")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(";")]),n._v("\n"),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">DemoBeanDefinitionRegistryPostProcessor</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"DemoBeanDefinitionRegistryPostProcessor constructor without params"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token annotation punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">@Override</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">void</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">postProcessBeanDefinitionRegistry</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeanDefinitionRegistry</span> registry<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span>\n        <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">throws</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeansException</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"bean定义的数据量:"</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> registry<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getBeanDefinitionCount</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n    <span class="token comment" style="margin: 0px; padding: 0px; color: rgb(125, 139, 153); font-family: inherit;">// 创建bean定义信息</span>\n    <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">AbstractBeanDefinition</span> beanDefinition <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeanDefinitionBuilder</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">rootBeanDefinition</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeanController</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">class</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getBeanDefinition</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n    registry<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">registerBeanDefinition</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"MyBeanController"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">,</span> beanDefinition<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n\n    registry<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">removeBeanDefinition</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"beanController"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token annotation punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">@Override</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">void</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">postProcessBeanFactory</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span>\n        <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">throws</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeansException</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"bean定义的数据量:"</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> beanFactory<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getBeanDefinitionCount</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n')])])]),a("p",[a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])])]),a("p"),n._v(" "),a("p"),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[n._v(" "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Component")]),n._v("\n"),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("DemoBeanFactoryPostProcessor")]),n._v("  "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("implements")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("BeanFactoryPostProcessor")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("private")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("final")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("static")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Logger")]),n._v(" logger "),a("span",{staticClass:"token operator",staticStyle:{margin:"0px",padding:"0px",color:"rgb(166, 127, 89)",background:"rgba(255, 255, 255, 0.5)","font-family":"inherit"}},[n._v("=")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("LoggerFactory")]),n._v("\n            "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),a("span",{staticClass:"token function",staticStyle:{margin:"0px",padding:"0px",color:"rgb(47, 156, 10)","font-family":"inherit"}},[n._v("getLogger")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("DemoBeanFactoryPostProcessor")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(";")]),n._v("\n"),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">DemoBeanFactoryPostProcessor</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"DemoBeanFactoryPostProcessor constructor without params"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n\n<span class="token annotation punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">@Override</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">void</span> <span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">postProcessBeanFactory</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">ConfigurableListableBeanFactory</span> beanFactory<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span>\n        <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">throws</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">BeansException</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n\n    <span class="token comment" style="margin: 0px; padding: 0px; color: rgb(125, 139, 153); font-family: inherit;">// 所有bean的定义，已经加载到beanFactory, 但是bean实例还没创建</span>\n    <span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">int</span> count <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> beanFactory<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getBeanDefinitionCount</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n    <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">[</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">]</span> beanDefName <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">=</span> beanFactory<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">getBeanDefinitionNames</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"当前BeanFactory中有"</span> <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span> count <span class="token operator" style="margin: 0px; padding: 0px; color: rgb(166, 127, 89); background: rgba(255, 255, 255, 0.5); font-family: inherit;">+</span>  <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"个bean"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"beanDefNames:{}"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">,</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">Arrays</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">asList</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span>beanDefName<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n')])])]),a("p",[a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])])]),a("p"),n._v(" "),a("p"),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Person")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("private")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("final")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("static")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Logger")]),n._v(" logger "),a("span",{staticClass:"token operator",staticStyle:{margin:"0px",padding:"0px",color:"rgb(166, 127, 89)",background:"rgba(255, 255, 255, 0.5)","font-family":"inherit"}},[n._v("=")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("LoggerFactory")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),a("span",{staticClass:"token function",staticStyle:{margin:"0px",padding:"0px",color:"rgb(47, 156, 10)","font-family":"inherit"}},[n._v("getLogger")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("(")]),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Person")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(".")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(")")]),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v(";")]),n._v("\n"),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">private</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> id<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">private</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">String</span> name<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n\n<span class="token keyword" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">public</span> <span class="token class-name" style="margin: 0px; padding: 0px; color: rgb(25, 144, 184); font-family: inherit;">Person</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">{</span>\n    logger<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">.</span><span class="token function" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">info</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">(</span> <span class="token string" style="margin: 0px; padding: 0px; color: rgb(47, 156, 10); font-family: inherit;">"person constructor without params"</span> <span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">)</span><span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">;</span>\n<span class="token punctuation" style="margin: 0px; padding: 0px; color: rgb(95, 99, 100); font-family: inherit;">}</span>\n')])])]),a("p",[a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])])]),a("p"),n._v(" "),a("p"),n._v(" "),a("ul",[a("li",[a("h3",{attrs:{id:"abstractapplicationcontext-refresh-调用beanfactory的后置处理器-https-www-cnblogs-com-coder-zyc-p-14583011-html-abstractapplicationcontext-refresh-调用beanfactory的后置处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstractapplicationcontext-refresh-调用beanfactory的后置处理器-https-www-cnblogs-com-coder-zyc-p-14583011-html-abstractapplicationcontext-refresh-调用beanfactory的后置处理器"}},[n._v("#")]),n._v(" AbstractApplicationContext#refresh 调用BeanFactory的后置处理器"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327162608284-846297081.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327162608284-846297081.png",alt:"img"}}),a("OutboundLink")],1),n._v("[#](https://www.cnblogs.com/coder-zyc/p/14583011.html#abstractapplicationcontext#refresh 调用beanfactory的后置处理器)")])]),n._v(" "),a("li",[a("h3",{attrs:{id:"abstractapplicationcontext-invokebeanfactorypostprocessors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstractapplicationcontext-invokebeanfactorypostprocessors"}},[n._v("#")]),n._v(" AbstractApplicationContext#invokeBeanFactoryPostProcessors"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327163014951-887054604.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327163014951-887054604.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#abstractapplicationcontext#invokebeanfactorypostprocessors",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)])])]),n._v(" "),a("p",[n._v("调用BeanFactory的后置处理器，这里会执行自定义未注册(没有显示调用register方法)的beanDefinition加载到IOC容器；")]),n._v(" "),a("ul",[a("li",[a("h3",{attrs:{id:"postprocessorregistrationdelegate-invokebeanfactorypostprocessors-org-springframework-beans-factory-config-configurablelistablebeanfactory-java-util-list-org-springframework-beans-factory-config-beanfactorypostprocessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postprocessorregistrationdelegate-invokebeanfactorypostprocessors-org-springframework-beans-factory-config-configurablelistablebeanfactory-java-util-list-org-springframework-beans-factory-config-beanfactorypostprocessor"}},[n._v("#")]),n._v(" PostProcessorRegistrationDelegate#invokeBeanFactoryPostProcessors(org.springframework.beans.factory.config.ConfigurableListableBeanFactory, java.util.List<org.springframework.beans.factory.config.BeanFactoryPostProcessor>)"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327165200748-531628682.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327165200748-531628682.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#postprocessorregistrationdelegate#invokebeanfactorypostprocessors(org.springframework.beans.factory.config.configurablelistablebeanfactory,-java.util.list)",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)])])]),n._v(" "),a("p",[n._v("首先是判断beanFactory是不是BeanDefinitionRegirstry的类型（具体可从继承树获得对应的关系），如果beanFactory是BeanDefinitionRegirstry类型的，将beanFactory强转成BeanDefinitonRegistry类型的，上面定义的两个list，分别用于存储BeanFactroyPostProcessor和BeanDefinitonRegistryPostProcessor类型的，用于区分的；一开始的时候，beanFactoryProcessors的数量为0，因此它的遍历在这里并不执行；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327165859276-2139552845.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327165859276-2139552845.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("postProcessorNames中包含org.springframework.context.annotation.internalConfigurationAnnotationProcessor的定义信息，它是在org.springframework.context.annotation.AnnotationConfigUtils定义的；")]),n._v(" "),a("p"),n._v(" "),a("p",[n._v("AnnotationConfigUtils#CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327230844564-1625948664.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327230844564-1625948664.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("h4",{attrs:{id:"annotationconfigutils-registerannotationconfigprocessors-org-springframework-beans-factory-support-beandefinitionregistry-java-lang-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#annotationconfigutils-registerannotationconfigprocessors-org-springframework-beans-factory-support-beandefinitionregistry-java-lang-object"}},[n._v("#")]),n._v(" AnnotationConfigUtils#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327232754404-143017544.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327232754404-143017544.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80annotationconfigutils#registerannotationconfigprocessors(org.springframework.beans.factory.support.beandefinitionregistry,-java.lang.object)",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("在这里会先从BeanDefinitionRegistry类型的registry判断是否含有CONFIGURATION_ANNOTATION_PROCESSOR_BEAN_NAME，如果registrry没有则添加ConfigurationClassPostProcessor类型的bean定义信息到registry；为何BeanDefinitionRegistry能获取到AnnotationConfigApplicationContext的数据，这可以从BeanDefinitionRegistry的继承树和该方法的调用栈分析，如下；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210327233202736-185535303.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210327233202736-185535303.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("首先从继承树可以看到AnnotationConfigApplicationContext实现了BeanDefinitionRegistry的接口，AnnotationConfigApplicationContext属于BeanDefinitionRegistry的子类；")]),n._v(" "),a("p",[n._v("之后观察调用栈如下：")]),n._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[n._v("org.springframework.context.annotation.AnnotationConfigApplicationContext "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#AnnotationConfigApplicationContext()")]),n._v("\n -"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework.context.annotation.AnnotatedBeanDefinitionReader\n  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework.context.annotation.AnnotatedBeanDefinitionReader "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#AnnotatedBeanDefinitionReader(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.core.env.Environment)")]),n._v("\n　 -"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework.context.annotation.AnnotationConfigUtils "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry)")]),n._v("\n　  -"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework.context.annotation.AnnotationConfigUtils "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)")]),n._v("\n　　 -"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework.context.annotation.AnnotationConfigUtils "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#registerAnnotationConfigProcessors(org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.Object)")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("可以观察到这个过程，调用的方法声明的入参是BeanDefinitionRegistry类型的，但是调用时候传入的入参是AnnotationConfigApplicationContext，这是里氏替换原则（LSP）；")]),n._v(" "),a("p",[n._v("关于LSP，在代码里，把父类都替换成它的子类，程序的行为没有发生变化，换句话说就是由于子类类型的可替代性才使得父类类型的模块在无需更改的情况下可以扩展，子类类型必须能够替换它的父类类型；")]),n._v(" "),a("p",[n._v("回到上面invokeBeanFactoryPostProcessors的流程，之后调用PostProcessorRegistrationDelegate#invokeBeanDefinitionRegistryPostProcessors；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210328003705482-1914084585.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210328003705482-1914084585.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("postProcessor的size为1，里面保存的元素为ConfigurationClassPostProcessor的实例；之后调用ConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry；"),a("strong",[n._v("因此可看出BeanDefinitionRegistryPostProcessor优先于BeanFactoryPostProcessor执行；")])]),n._v(" "),a("h4",{attrs:{id:"configurationclasspostprocessor-postprocessbeandefinitionregistry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationclasspostprocessor-postprocessbeandefinitionregistry"}},[n._v("#")]),n._v(" ConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry　  "),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210328174159027-599986670.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210328174159027-599986670.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80configurationclasspostprocessor#postprocessbeandefinitionregistry",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("postProcessBeanDefinitionRegistry为BeanDefinitionRegistryPostProcessor接口定义的方法，可对初始化后的BeanDefinitionRegistry进行修改；这里的registriesPostProcessed存储当前registry的hash值，之后调用processConfigBeanDefinitions方法；")]),n._v(" "),a("h4",{attrs:{id:"configurationclasspostprocessor-processconfigbeandefinitions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationclasspostprocessor-processconfigbeandefinitions"}},[n._v("#")]),n._v(" ConfigurationClassPostProcessor#processConfigBeanDefinitions"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210328234312405-1356160485.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210328234312405-1356160485.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80configurationclasspostprocessor#processconfigbeandefinitions",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("candidateNames为没进行解析前，候选的bean的定义名称，包括Spring自带的和自定义添加的；上面红框部分是循环candidateNames，如果是自定义添加的主配置类的bean定义信息，并添加到ConfigCandidates；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210328231444519-788941955.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210328231444519-788941955.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210328234222901-1525149725.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210328234222901-1525149725.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("第一个框是配置类的排序；第二个框是bean名称的生成策略，bean包括@ComponentScan包扫描的和@Import导入的，componentScanBeanNameGenerator对应的是包扫描出来的bean的名称生成器，importBeanNameGenerator对应的是导入的bean的名称生成器；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329004638311-790416115.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329004638311-790416115.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("创建配置类解析器parser；")]),n._v(" "),a("p",[n._v("candidates为将要被解析的配置类，将之前的configCandidates加入其中；")]),n._v(" "),a("p",[n._v("alreadyParsed为已经被解析的配置了，由于下面执行的do while(!candidates.isEmpty())，自定义配置类必定会被解析，alreadyParsed创建configCandidates.size()的容量大小，可以节省空间；")]),n._v(" "),a("p",[n._v("之后调用parser.parse(Candidates)")]),n._v(" "),a("h4",{attrs:{id:"configurationclassparser-parse-java-util-set-org-springframework-beans-factory-config-beandefinitionholder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationclassparser-parse-java-util-set-org-springframework-beans-factory-config-beandefinitionholder"}},[n._v("#")]),n._v(" ConfigurationClassParser#parse(java.util.Set<org.springframework.beans.factory.config.BeanDefinitionHolder>)  "),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329004944352-1712309377.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329004944352-1712309377.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80configurationclassparser#parse(java.util.set)",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("红框部分为解析注解形式的bean定义信息，而这里传入的configCandidates为自定义的配置类；调用parse方法最终会调用ConfigurationClassParser#processConfigurationClass；")]),n._v(" "),a("h4",{attrs:{id:"configurationclassparser-processconfigurationclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationclassparser-processconfigurationclass"}},[n._v("#")]),n._v(" ConfigurationClassParser#processConfigurationClass"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202112/1334716-20211219235901852-2023063636.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20211219235901852-2023063636.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80configurationclassparser#processconfigurationclass",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("首先判断是否跳过解析，用于Condition条件判断；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329005952437-1670412963.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329005952437-1670412963.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("asSourceClass方法用于处理配置类，由于配置类可能存在于父类(若父类的全类名是以java开头的，则除外)，所有需要将configClass变成sourceClass去解析，然后返回sourceClass的父类，如果此时父类为空，则不会进行while循环解析，如果父类为空，则会循环解析父类；")]),n._v(" "),a("p",[n._v("doProcessConfigurationClass方法这里会递归处理配置类及其父类的层次结构；")]),n._v(" "),a("h4",{attrs:{id:"configurationclassparser-doprocessconfigurationclass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationclassparser-doprocessconfigurationclass"}},[n._v("#")]),n._v(" ConfigurationClassParser#doProcessConfigurationClass"),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80configurationclassparser#doprocessconfigurationclass",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("这个方法主要是"),a("strong",[n._v("依次解析@Component注解，@ProPertySource注解，@ComponentScan注解，@Import注解，@ImportResource注解")]),n._v("（用于导入配置文件）"),a("strong",[n._v("，解析@Bean方法，解析接口默认方法")]),n._v("（处理接口的默认方法实现，从jdk8开始，接口的方法可以有默认实现，因此如果接口的方法添加了@Bean注解,该方法也需要被解析）"),a("strong",[n._v("，解析父类")]),n._v("（如果被解析的配置类继承了某个类，那么配置类的父类也会被解析，这个可根据注释看出来）；")]),n._v(" "),a("p"),n._v(" "),a("p",[a("strong",[n._v("@Configuration继承了@Component注解，当内部类也是一个配置类，配置类上有@Configuration注解，需要递归解析内部类，因此会先解析内部类；")]),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202112/1334716-20211219193309672-699161208.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20211219193309672-699161208.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("如果一个配置类内部类也是一个配置类，一般不会有这种写法，如下；")]),n._v(" "),a("details",{staticStyle:{margin:"0px",padding:"0px"},attrs:{open:"","data-math-rendered":"true"}},[a("summary",{staticStyle:{margin:"0px",padding:"0px"}},[n._v("查看代码")]),a("pre",{staticClass:"line-numbers highlighter-prismjs prismjs-lines-highlighted language-java",staticStyle:{margin:"0.5em 0px","padding-top":"0px","padding-right":"var(--spacing-right)","padding-bottom":"0px","padding-left":"3.8em","transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",overflow:"auto","--spacing-right":"1em",color:"black",background:"linear-gradient(transparent 50%, rgba(69, 142, 209, 0.04) 50%) 0% 0% / 3em 3em local content-box rgb(253, 253, 253)","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"font-size":"1em","text-align":"left","white-space":"pre","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",position:"relative","border-left":"10px solid rgb(53, 140, 203)","box-shadow":"rgb(53, 140, 203) -1px 0px 0px 0px, rgb(223, 223, 223) 0px 0px 0px 1px","counter-reset":"linenumber 0","--spacing-left":"3.8em"},attrs:{tabindex:"0",highlighted:"true"}},[a("code",{staticClass:"highlighter-prismjs language-java",staticStyle:{margin:"0px",padding:"0px","font-family":'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',"transition-duration":"0.2s","transition-property":"background, font-size, border-color, border-radius, border-width, padding, margin, color",color:"black",background:"none","font-size":"1em","text-align":"left","white-space":"inherit","word-spacing":"normal","word-break":"normal","overflow-wrap":"normal","line-height":"1.5","tab-size":"4",hyphens:"none",display:"block",position:"relative"}},[n._v(" "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Configuration")]),n._v("\n"),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("Config")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token annotation punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("@Configuration")]),n._v("\n    "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("public")]),n._v(" "),a("span",{staticClass:"token keyword",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("class")]),n._v(" "),a("span",{staticClass:"token class-name",staticStyle:{margin:"0px",padding:"0px",color:"rgb(25, 144, 184)","font-family":"inherit"}},[n._v("InnerConfig")]),n._v(" "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("{")]),n._v("\n    "),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),n._v("\n"),a("span",{staticClass:"token punctuation",staticStyle:{margin:"0px",padding:"0px",color:"rgb(95, 99, 100)","font-family":"inherit"}},[n._v("}")]),a("span",{staticClass:"line-numbers-rows",staticStyle:{margin:"0px",padding:"0px",position:"absolute","pointer-events":"none",top:"0px","font-size":"16px",left:"-3.8em",width:"3em","letter-spacing":"-1px","border-right":"1px solid rgb(153, 153, 153)","user-select":"none","font-family":"inherit"},attrs:{"aria-hidden":"true"}},[a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}}),a("span",{staticStyle:{margin:"0px",padding:"0px",display:"block","counter-increment":"linenumber 1","font-family":"inherit"}})])])])]),n._v(" "),a("p",[n._v("下面这里主要分析一下@ComponentScan注解的解析处理；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329013305765-318547210.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329013305765-318547210.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[a("ul",[a("li",[n._v("第一个红框是将@ComponentScan注解的属性封装到Set"),a("AnnotationAttributes",[n._v("类型的componentScans对象；如下；")])],1)])])]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329013550485-1899869860.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329013550485-1899869860.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[a("ul",[a("li",[n._v("第二个红框是解析@ComponetScan的处理；")])])])]),n._v(" "),a("p",[n._v("调用org.springframework.context.annotation.ComponentScanAnnotationParser#parse")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329013855552-1035030314.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329013855552-1035030314.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("该方法前面的是创建的类路径扫描器scanner，将传入的componentScan的值一一赋值给scanner；调用scanner.doScan方法扫描指定的路径；")]),n._v(" "),a("p",[n._v("调用org.springframework.context.annotation.ClassPathBeanDefinitionScanner#doScan")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329231309887-1329478097.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329231309887-1329478097.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("遍历包扫描的路径的集合，findCandidateComponents方法根据包扫描的路径获取对应的候选组件，registerBeanDefinition方法将候选组件封装的BeandDefinitionHolder对象添加到beanDefinitions，并返回；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329231713255-520648517.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329231713255-520648517.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("componentsIndex默认为null，如果要componentsIndex不为null，"),a("strong",[n._v("需要导入如下依赖，并将工程重新构建")]),n._v("；因此默认调用scanCandidateComponents方法；")]),n._v(" "),a("p",[n._v("注：spring-context-indexer这个依赖是Spring5.x以后新增的；")]),n._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!")]),n._v("-- 注解@Indexed不能孤立存在,需要添加spring-context-indexer依赖 --"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v("dependency"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v("groupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("org.springframework"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v(" /groupId "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v("artifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("spring-context-indexer"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v(" /artifactId "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("5.2")]),n._v(".4.RELEASE"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v(" /version "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<")]),n._v(" /dependency "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("之后调用ClassPathScanningCandidateComponentProvider#scanCandidateComponents")]),n._v(" "),a("h4",{attrs:{id:"classpathscanningcandidatecomponentprovider-scancandidatecomponents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#classpathscanningcandidatecomponentprovider-scancandidatecomponents"}},[n._v("#")]),n._v(" ClassPathScanningCandidateComponentProvider#scanCandidateComponents　"),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210329234502743-788261067.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210329234502743-788261067.png",alt:"img"}}),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.cnblogs.com/coder-zyc/p/14583011.html#%E3%80%80%E3%80%80%E3%80%80%E3%80%80classpathscanningcandidatecomponentprovider#scancandidatecomponents",target:"_blank",rel:"noopener noreferrer"}},[n._v("#"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("packageSearchPath为拼接需要扫描的包下面的类路径；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330000012726-322721930.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330000012726-322721930.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("resources为packageSearchPath路径下的绝对路径的class文件；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330000938670-2064820492.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330000938670-2064820492.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("isCandidateComponent是用于判断是否候选组件，如果是则加入到BeanDefinition的集合candidates中；Person是由@Bean注入的，Person的定义信息在另外的地方添加；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330004625131-950570399.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330004625131-950570399.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("ul",[a("li",[a("ul",[a("li",[n._v("第三个红框是包扫描路径下组件递归**依次解析@ProPertySource注解，@ComponentScan注解，@Import注解，@ImportResource注解，解析@Bean方法，解析接口默认方法，解析父类；**如解析一个Controller的@ComponentScan注解，但一般不会这样用；")])])])]),n._v(" "),a("p",[n._v("测试代码中的Person类是@Bean注入在的，它的定义信息解析是在@Configuration注解解析ConfigurationClassPostProcessor#processConfigBeanDefinition那里；loadBeanDefinitions方法里加载不是包扫描（即@ComponentScan扫描的）的bean的定义信息，如@Bean，@Import等；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330021657931-1995613271.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330021657931-1995613271.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("调用loadBeanDefinitions方法；遍历获取到BeanFactoryConfig类型的configClass；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330021827336-683027043.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330021827336-683027043.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForConfigurationClass")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330022152591-934506342.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330022152591-934506342.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("而@Bean注入的beanName为methodName，可从下面ConfigurationClassBeanDefinitionReader#loadBeanDefinitionsForBeanMethod看出；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330022341127-53073955.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330022341127-53073955.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("当loadBeanDefinitionsForBeanMethodf方法执行完，beanDefinitionMap出现Person的定义信息；在实例化bean时，加载的beanDefinitionMap会被用于合并beanDefintion；")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202103/1334716-20210330022754340-707542394.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210330022754340-707542394.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("执行结果如下："),a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202104/1334716-20210402002845596-333256474.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20210402002845596-333256474.png",alt:"img"}}),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("bean定义信息是先往容器加载，除了**BeanDefinitionRegistryPostProcessor和BeanFactoryPostProcessor类型的bean加载bean定义信息过程中调用getBean方法实例化了，**其余的bean是在定义信息加载后实例化；")]),n._v(" "),a("p",[n._v("从上面可以看出，ConfigurationClassPostProcessor会处理所有BeanDefinition中的符合注解条件的BeanDefinition（@Configuration，@Component，@ComponentScan，@Import，@ImportResource，@Bean注解自定义方法），这个过程使用ConfigurationClassParser解析成ConfigurationClass类型的结果集，之后使用ConfigurationClassBeanDefinitionReader对解析出的结果集进行加载；")]),n._v(" "),a("p",[n._v("流程图如下：")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://img2020.cnblogs.com/blog/1334716/202112/1334716-20211219211305203-2016944848.png",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/1334716-20211219211305203-2016944848.png",alt:"img"}}),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=o.exports}}]);