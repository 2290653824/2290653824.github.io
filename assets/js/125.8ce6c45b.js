(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{450:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("本文章主要对mongodb的快速操作进行讲解，不对深层次原理进行讲解")])]),s._v(" "),t("p",[s._v("操作数据库")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819125646474.png",alt:"image-20230819125646474"}})]),s._v(" "),t("h3",{attrs:{id:"一-连接mongodb服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-连接mongodb服务器"}},[s._v("#")]),s._v(" 一.连接mongodb服务器")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("mongo "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("地址 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--port")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("端口\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"二-常用的基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-常用的基本命令"}},[s._v("#")]),s._v(" 二.常用的基本命令")]),s._v(" "),t("h4",{attrs:{id:"_1-数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据库"}},[s._v("#")]),s._v(" 1. 数据库")]),s._v(" "),t("h5",{attrs:{id:"_1创建数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1创建数据库"}},[s._v("#")]),s._v(" ①创建数据库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("use 数据库\nuse articledb\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意，只要在新建的库中实际上有操作了后，才会真正创建此数据库。")]),s._v(" "),t("p",[s._v("为什么呢？因为此时的库是创建在内存中的，而show dbs展示的是磁盘当中的库，只有我们在新建的库当中创建了新的文档后，才会持久化到磁盘。")]),s._v(" "),t("p",[s._v("没有则创建，有则使用")]),s._v(" "),t("h5",{attrs:{id:"_2展示数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2展示数据库"}},[s._v("#")]),s._v(" ②展示数据库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("show dbs //展示当前有哪些库\nshow databases\n\ndb //展示当前正在使用的库，默认在test库\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("默认的三个库有什么作用？")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819131305645.png",alt:"image-20230819131305645"}})]),s._v(" "),t("h5",{attrs:{id:"_3删除数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3删除数据库"}},[s._v("#")]),s._v(" ③删除数据库")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.dropDatabase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  删除当前库 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("主要是删除已经持久化的数据库")]),s._v(" "),t("h4",{attrs:{id:"_2-集合collection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-集合collection"}},[s._v("#")]),s._v(" 2. 集合collection")]),s._v(" "),t("h5",{attrs:{id:"_1创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1创建"}},[s._v("#")]),s._v(" ①创建")]),s._v(" "),t("p",[s._v("显示创建")]),s._v(" "),t("p",[t("code",[s._v('db.creatCollection("名字")')])]),s._v(" "),t("p",[s._v("隐式创建：向某一个集合中插入文档，集合存在则插入，不存在则创建一个集合并插入")]),s._v(" "),t("h5",{attrs:{id:"_2删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2删除"}},[s._v("#")]),s._v(" ②删除")]),s._v(" "),t("p",[t("code",[s._v("db.集合名.drop();")])]),s._v(" "),t("h5",{attrs:{id:"_3查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3查询"}},[s._v("#")]),s._v(" ③查询")]),s._v(" "),t("p",[s._v("查询当前数据库的集合")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("show collections\nshow tables\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"_3-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-文档"}},[s._v("#")]),s._v(" 3.文档")]),s._v(" "),t("p",[s._v("文档的数据结构和JSON基本一样。所有存储在集合中的数据都是BSON格式。")]),s._v(" "),t("h5",{attrs:{id:"_1文档的插入-隐式创建集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1文档的插入-隐式创建集合"}},[s._v("#")]),s._v(" ①文档的插入(隐式创建集合)")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.collection.insert"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("document or array of documents"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\twriteConcern: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("document"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(",\n\t\tordered: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("boolean"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819231013506.png",alt:"image-20230819231013506"}})]),s._v(" "),t("p",[t("code",[s._v("db.集合名.insert({json格式})")])]),s._v(" "),t("blockquote",[t("p",[s._v("单条数据插入例子：")]),s._v(" "),t("p",[s._v("要向comment的集合(表)中插入一条测试数据：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.comment.insert"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100000"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"今天天气真好，阳光明\n媚"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rose"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),s._v(":null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("提示：")]),s._v(" "),t("p",[s._v("1）comment集合如果不存在，则会隐式创建")]),s._v(" "),t("p",[s._v("2）mongo中的数字，默认情况下是double类型，如果要存整型，必须使用函数NumberInt(整型数字)，否则取出来就有问题了。")]),s._v(" "),t("p",[s._v("3）插入当前日期使用 new Date()")]),s._v(" "),t("p",[s._v("4）插入的数据没有指定 _id ，会自动生成主键值")]),s._v(" "),t("p",[s._v("5）如果某字段没值，可以赋值为null，或不写该字段")]),s._v(" "),t("p",[s._v("执行后，如下，说明插入一个数据成功了。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("WriteResult"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nInserted"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注意：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("文档中的键/值对是有序的。")])]),s._v(" "),t("li",[t("p",[s._v("文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。")])]),s._v(" "),t("li",[t("p",[s._v("MongoDB区分类型和大小写。")])]),s._v(" "),t("li",[t("p",[s._v("MongoDB的文档不能有重复的键。")])]),s._v(" "),t("li",[t("p",[s._v("文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。")])])])]),s._v(" "),t("p",[t("code",[s._v("db.集合名.insertMany('[{},{},{}]')")])]),s._v(" "),t("blockquote",[t("p",[s._v("插入多条数据例子：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.comment.insertMany"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我\n他。"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1002"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"相忘于江湖"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-\n05T22:08:15.522Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我夏天空腹喝凉开水，冬天喝温开水"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1005"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"伊人憔\n悴"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-05T23:58:51.485Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("888")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"我一直喝凉开水，冬天夏天都喝。"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1004"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"杰克船\n长"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-06T01:05:06.321Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("666")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"专家说不能空腹吃饭，影响健康。"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1003"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凯\n撒"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-06T08:18:35.288Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(",\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"articleid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"100001"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"content"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"研究表明，刚烧开的水千万不能喝，因为烫\n嘴。"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"userid"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1003"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nickname"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凯撒"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"createdatetime"')]),s._v(":new Date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-\n06T11:01:02.521Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"likenum"')]),s._v(":NumberInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"state"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("提示：")]),s._v(" "),t("p",[s._v("插入时指定了 _id ，则主键就是该值。")]),s._v(" "),t("p",[s._v("如果某条数据插入失败，将会终止插入，但已经插入成功的数据不会回滚掉。")]),s._v(" "),t("p",[s._v("因为批量插入由于数据较多容易出现失败，因此，可以使用try catch进行异常捕捉处理，测试的时候可以不处理。如（了解）")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819231503158.png",alt:"image-20230819231503158"}})])]),s._v(" "),t("h5",{attrs:{id:"_2文档的查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2文档的查询"}},[s._v("#")]),s._v(" ②文档的查询")]),s._v(" "),t("p",[s._v("基本语法:"),t("code",[s._v("db.collection.find(<query>, [projection])")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819232430698.png",alt:"image-20230819232430698"}})]),s._v(" "),t("ul",[t("li",[s._v("查询单个")])]),s._v(" "),t("p",[t("code",[s._v("db.集合名.find()")]),s._v("  返回集合中所有数据")]),s._v(" "),t("p",[s._v("db.集合名.find(json) 根据具体条件进行查询 "),t("code",[s._v("db.comment.find({userid:'1003'})")])]),s._v(" "),t("ul",[t("li",[s._v("查询多个")])]),s._v(" "),t("p",[s._v("db.集合名.findOne(json) 根据条件查询，并只返回一条数据")]),s._v(" "),t("p",[s._v("查询用户编号是1003的记录，但只最多返回符合条件的第一条记录："),t("code",[s._v("db.comment.findOne({userid:'1003'})")])]),s._v(" "),t("h5",{attrs:{id:"_3投影查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3投影查询"}},[s._v("#")]),s._v(" ③投影查询")]),s._v(" "),t("p",[s._v("什么是投影查询，mongo数据查询默认会显示所有的数据，就像select * ，我们怎么指定想要显示的字段呢？")]),s._v(" "),t("p",[t("code",[s._v("db.集合名.find({条件},{userid:1,_id:0})")])]),s._v(" "),t("p",[s._v("这样，就仅仅会显示userid字段")]),s._v(" "),t("h5",{attrs:{id:"_4文档的更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4文档的更新"}},[s._v("#")]),s._v(" ④文档的更新")]),s._v(" "),t("p",[t("code",[s._v("db.collection.updata(query,update,options)")])]),s._v(" "),t("p",[s._v("语法：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819234321540.png",alt:"image-20230819234321540"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819234344856.png",alt:"image-20230819234344856"}})]),s._v(" "),t("blockquote",[t("p",[s._v("主要关注前四个参数")])]),s._v(" "),t("ul",[t("li",[s._v("覆盖修改：")])]),s._v(" "),t("p",[s._v("如果我们想修改_id为1的记录，点赞量为1001，输入以下语句：")]),s._v(" "),t("p",[t("code",[s._v('db.comment.update({_id:"1"},{likenum:NumberInt(1001)})')])]),s._v(" "),t("p",[s._v("执行后，我们会发现，这条文档除了likenum字段其它字段都不见了")]),s._v(" "),t("ul",[t("li",[s._v("局部修改")])]),s._v(" "),t("p",[s._v("为了解决这个问题，我们需要使用修改器$set来实现，命令如下：")]),s._v(" "),t("p",[s._v("我们想修改_id为2的记录，浏览量为889，输入以下语句：")]),s._v(" "),t("p",[t("code",[s._v('db.comment.update({_id:"2"},{$set:{likenum:NumberInt(889)}})')])]),s._v(" "),t("ul",[t("li",[s._v("批量修改")])]),s._v(" "),t("p",[s._v("更新所有用户为 1003 的用户的昵称为 凯撒大帝 。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("//默认只修改第一条数据\ndb.comment.update"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("userid:"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1003"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$set")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("nickname:"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凯撒2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n//修改所有符合条件的数据\ndb.comment.update"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("userid:"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1003"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$set")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("nickname:"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"凯撒大帝"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("multi:true"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("提示：如果不加后面的参数，则只更新符合条件的第一条记录")]),s._v(" "),t("ul",[t("li",[s._v("upsert\n"),t("code",[s._v('db.stu.update({"_id": 3}, {用于更新的文档内容}, “这里就是要添加的第三个参数，是固定的！”)')])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L215bGlfYmluYmlu,size_16,color_FFFFFF,t_70.png",alt:"img"}})]),s._v(" "),t("p",[s._v("所以这个方法适用于：以更新条件为基础，如果查到对应数据，则将对应数据更新，如果查不到对应数据，那么则以更新条件新增一条数据！\n优点：\n设想，如果我们对某种数据操作都是先查数据库，确定是否有对应文档，再决定更新还是插入，那么在多个进程同时操作同一段代码，或者多个进程/线程操作同一个条件时，就会遇到同时对给定条件插入多个文档这样的竞态条件，    但是，使用upsert，既可以避免这种竞态问题，又可以减少代码量，并且这样会更高效，是原子性的")]),s._v(" "),t("ul",[t("li",[s._v("列值增长的修改")])]),s._v(" "),t("p",[s._v("如果我们想实现对某列值在原有值的基础上进行增加或减少，可以使用 $inc 运算符来实现。")]),s._v(" "),t("p",[s._v("需求：对3号数据的点赞数，每次递增1")]),s._v(" "),t("p",[t("code",[s._v('db.comment.update({_id:"3"},{$inc:{likenum:NumberInt(1)}})')])]),s._v(" "),t("h5",{attrs:{id:"_5文档的删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5文档的删除"}},[s._v("#")]),s._v(" ⑤文档的删除")]),s._v(" "),t("p",[s._v("语法结构: "),t("code",[s._v("db.集合名称.remove(条件)")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.comment.remove"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("_id:"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果删除全部："),t("code",[s._v("db.comment.remove({})")])]),s._v(" "),t("h3",{attrs:{id:"三-分页查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-分页查询"}},[s._v("#")]),s._v(" 三. 分页查询")]),s._v(" "),t("h5",{attrs:{id:"_1数量查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1数量查询"}},[s._v("#")]),s._v(" ①数量查询")]),s._v(" "),t("p",[t("code",[s._v("db.collection.count(query, options)")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230819235603256.png",alt:"image-20230819235603256"}})]),s._v(" "),t("ul",[t("li",[s._v("统计某集合中的所有记录")])]),s._v(" "),t("p",[t("code",[s._v("db.comment.count()")])]),s._v(" "),t("ul",[t("li",[s._v("按照条件统计记录")])]),s._v(" "),t("p",[t("code",[s._v('db.comment.count({userid:"1003"})')])]),s._v(" "),t("h5",{attrs:{id:"_2分页查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2分页查询"}},[s._v("#")]),s._v(" ②分页查询")]),s._v(" "),t("p",[s._v("可以使用limit()方法来读取指定数量的数据，使用skip()方法来跳过指定数量的数据。")]),s._v(" "),t("p",[t("code",[s._v(">db.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER)")])]),s._v(" "),t("p",[s._v("如果你想返回指定条数的记录，可以在fifind方法后调用limit来返回结果(TopN)，默认值20，例如："),t("code",[s._v("db.comment.find().limit(3)")])]),s._v(" "),t("p",[s._v("skip方法同样接受一个数字参数作为跳过的记录条数。（前N个不要）,默认值是0")]),s._v(" "),t("p",[t("code",[s._v("db.comment.find().skip(3)")])]),s._v(" "),t("p",[s._v("上面两个语法组合到一起，就是分页查询")]),s._v(" "),t("p",[s._v("分页查询：需求：每页2个，第二页开始：跳过前两条数据，接着值显示3和4条数据")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("//第一页\ndb.comment.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".skip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".limit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n//第二页\ndb.comment.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".skip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".limit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n//第三页\ndb.comment.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".skip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".limit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"四-排序查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-排序查询"}},[s._v("#")]),s._v(" 四.排序查询")]),s._v(" "),t("p",[s._v("sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。")]),s._v(" "),t("p",[s._v("语法如下所示：")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("db.COLLECTION_NAME.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".sort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("KEY:1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n或\ndb.集合名称.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".sort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("排序方式"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("例如：")]),s._v(" "),t("p",[s._v("对userid降序排列，并对访问量进行升序排列"),t("code",[s._v("db.comment.find().sort({userid:-1,likenum:1})")])]),s._v(" "),t("p",[s._v("提示：")]),s._v(" "),t("p",[s._v("skip(), limilt(), sort()三个放在一起执行的时候，执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()，和命令编写顺序无关")]),s._v(" "),t("h3",{attrs:{id:"五-更多特殊"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-更多特殊"}},[s._v("#")]),s._v(" 五.更多特殊")]),s._v(" "),t("h4",{attrs:{id:"正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[s._v("#")]),s._v(" 正则表达式")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820001348524.png",alt:"image-20230820001348524"}})]),s._v(" "),t("h4",{attrs:{id:"范围查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#范围查询"}},[s._v("#")]),s._v(" 范围查询")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820001718728.png",alt:"image-20230820001718728"}})]),s._v(" "),t("h4",{attrs:{id:"包含查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#包含查询"}},[s._v("#")]),s._v(" 包含查询")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820001704768.png",alt:"image-20230820001704768"}})]),s._v(" "),t("h4",{attrs:{id:"条件连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件连接查询"}},[s._v("#")]),s._v(" 条件连接查询")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820001732969.png",alt:"image-20230820001732969"}})]),s._v(" "),t("blockquote",[t("p",[s._v("常用命令总结：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820001844193.png",alt:"image-20230820001844193"}})])]),s._v(" "),t("h3",{attrs:{id:"六-索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六-索引"}},[s._v("#")]),s._v(" 六.索引")]),s._v(" "),t("h4",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1.概述")]),s._v(" "),t("p",[s._v("索引支持在MongoDB中高效地执行查询。如果没有索引，MongoDB必须执行全集合扫描，即扫描集合中的每个文档，以选择与查询语句 匹配的文档。这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非 常致命的。")]),s._v(" "),t("p",[s._v("如果查询存在适当的索引，MongoDB可以使用该索引限制必须检查的文档数。 索引是特殊的数据结构，它以易于遍历的形式存储集合数据集的一小部分。索引存储特定字段或一组字段的值，按字段值排序。索引项的排")]),s._v(" "),t("p",[s._v("序支持有效的相等匹配和基于范围的查询操作。此外，MongoDB还可以使用索引中的排序返回排序结果。 官网文档:https://docs.mongodb.com/manual/indexes/\n了解:\nMongoDB索引使用B树数据结构(确切的说是B-Tree，MySQL是B+Tree)")]),s._v(" "),t("h4",{attrs:{id:"_2-索引类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引类型"}},[s._v("#")]),s._v(" 2.索引类型")]),s._v(" "),t("h5",{attrs:{id:"单字段索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单字段索引"}},[s._v("#")]),s._v(" 单字段索引")]),s._v(" "),t("p",[s._v("MongoDB支持在文档的单个字段上创建用户定义的升序/降序索引，称为单字段索引(Single Field Index)。 对于单个字段索引和排序操作，索引键的排序顺序(即升序或降序)并不重要，因为MongoDB可以在任何方向上遍历索引。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820095004865.png",alt:"image-20230820095004865"}})]),s._v(" "),t("blockquote",[t("p",[s._v("TODO:这里就和mysql不同了，mysql似乎只能默认升序排序，而且只能从一个方向遍历")]),s._v(" "),t("p",[s._v("答：gpt说到，mysql的索引是默认的升序，但是可以指定为降序")]),s._v(" "),t("div",{staticClass:"language-mysql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("CREATE TABLE my_table (\n    id INT PRIMARY KEY,\n    name VARCHAR(50),\n    age INT,\n    INDEX idx_name (name DESC)\n);\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("h5",{attrs:{id:"复合索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复合索引"}},[s._v("#")]),s._v(" 复合索引")]),s._v(" "),t("p",[s._v("MongoDB还支持多个字段的用户定义索引，即复合索引(Compound Index)。")]),s._v(" "),t("p",[s._v("复合索引中列出的字段顺序具有重要意义。例如，如果复合索引由{ userid: 1, score: -1 }组成，则索引首先按userid正序排序，然后 在每个userid的值内，再在按score倒序排序。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820095036666.png",alt:"image-20230820095036666"}})]),s._v(" "),t("h5",{attrs:{id:"其他特殊索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他特殊索引"}},[s._v("#")]),s._v(" 其他特殊索引")]),s._v(" "),t("p",[t("strong",[s._v("地理空间索引(Geospatial Index)、文本索引(Text Indexes)、哈希索引(Hashed Indexes)。")])]),s._v(" "),t("p",[s._v("地理空间索引(Geospatial Index) 为了支持对地理空间坐标数据的有效查询，MongoDB提供了两种特殊的索引:返回结果时使用平面几何的二维索引和返回结果时使用球面几何的二维球面索引。")]),s._v(" "),t("p",[s._v("文本索引(Text Indexes)【建议使用更高效的文本索引lucence】")]),s._v(" "),t("p",[s._v("MongoDB提供了一种文本索引类型，支持在集合中搜索字符串内容。这些文本索引不存储特定于语言的停止词(例如“the”、“a”、“or”)， 而将集合中的词作为词干，只存储根词。")]),s._v(" "),t("p",[s._v("【搭建集群时会自动使用hash索引】")]),s._v(" "),t("p",[s._v("哈希索引(Hashed Indexes) 为了支持基于散列的分片，MongoDB提供了散列索引类型，它对字段值的散列进行索引。这些索引在其范围内的值分布更加随机，但只支持相等匹配，不支持基于范围的查询。")]),s._v(" "),t("h4",{attrs:{id:"_3-索引的基本操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-索引的基本操作"}},[s._v("#")]),s._v(" 3. 索引的基本操作")]),s._v(" "),t("h5",{attrs:{id:"返回一个集合的所有索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#返回一个集合的所有索引"}},[s._v("#")]),s._v(" 返回一个集合的所有索引")]),s._v(" "),t("p",[t("code",[s._v("db.collection.getIndexs()")])]),s._v(" "),t("p",[s._v("提示:该语法命令运行要求是MongoDB 3.0+")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820095909279.png",alt:"image-20230820095909279"}})]),s._v(" "),t("p",[s._v("结果中显示的是默认 _id 索引。 默认_id索引:")]),s._v(" "),t("p",[s._v("MongoDB在创建集合的过程中，在 _id 字段上创建一个唯一的索引，默认名字为 "),t("em",[s._v("id")]),s._v(" ，该索引可防止客户端插入两个具有相同值的文 档，您不能在_id字段上删除此索引。")]),s._v(" "),t("p",[s._v("注意:该索引是唯一索引，因此值不能重复，即 _id 值不能重复的。在分片集群中，通常使用 _id 作为片键。")]),s._v(" "),t("h5",{attrs:{id:"索引的创建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的创建"}},[s._v("#")]),s._v(" 索引的创建")]),s._v(" "),t("p",[t("code",[s._v("db.collection.createIndex(keys, options)")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100111755.png",alt:"image-20230820100111755"}})]),s._v(" "),t("p",[s._v("注意在 3.0.0 版本前创建索引方法为 db.collection.ensureIndex() ，之后的版本使用了 db.collection.createIndex() 方法，")]),s._v(" "),t("p",[s._v("ensureIndex() 还能用，但只是 createIndex() 的别名。")]),s._v(" "),t("blockquote",[t("p",[s._v("示例1：创建单字段索引")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100222272.png",alt:"image-20230820100222272"}})]),s._v(" "),t("p",[s._v("示例2：创建复合索引")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100256578.png",alt:"image-20230820100256578"}})])]),s._v(" "),t("h5",{attrs:{id:"索引的移除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的移除"}},[s._v("#")]),s._v(" 索引的移除")]),s._v(" "),t("ul",[t("li",[s._v("移除指定的索引")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100525805.png",alt:"image-20230820100525805"}})]),s._v(" "),t("blockquote",[t("p",[s._v("示例：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100546186.png",alt:"image-20230820100546186"}})])]),s._v(" "),t("ul",[t("li",[s._v("删除所有索引")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" db.collection.dropIndexes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100624179.png",alt:"image-20230820100624179"}})])]),s._v(" "),t("h5",{attrs:{id:"执行计划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行计划"}},[s._v("#")]),s._v(" 执行计划")]),s._v(" "),t("blockquote",[t("p",[s._v("可类比mysql的explain语句")])]),s._v(" "),t("p",[s._v("分析查询性能(Analyze Query Performance)通常使用执行计划(解释计划、Explain Plan)来查看查询的情况，如查询耗费的时间、是 否基于索引查询等。那么，通常，我们想知道，建立的索引是否有效，效果如何，都需要通过执行计划查看。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v(" db.collection.find"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("query,options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".explain"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("关注点在stage字段")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100859168.png",alt:"image-20230820100859168"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100913395.png",alt:"image-20230820100913395"}})]),s._v(" "),t("h5",{attrs:{id:"覆盖的查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#覆盖的查询"}},[s._v("#")]),s._v(" 覆盖的查询")]),s._v(" "),t("blockquote",[t("p",[s._v("和mysql的覆盖索引一样")])]),s._v(" "),t("p",[s._v("当查询条件和查询的投影仅包含索引字段时，MongoDB直接从索引返回结果，而不扫描任何文档或将文档带入内存。 这些覆盖的查询可以 非常有效。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820100956132.png",alt:"image-20230820100956132"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230820101026225.png",alt:"image-20230820101026225"}})]),s._v(" "),t("p",[s._v("参考:")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://other-file-manager.oss-cn-hangzhou.aliyuncs.com/xiaohongshu/20230819224944_mongodb_base.pdf",target:"_blank",rel:"noopener noreferrer"}},[s._v("黑马入门mongoDb"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);