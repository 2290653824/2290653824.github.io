(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{526:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-一个分布式id要满足哪些条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-一个分布式id要满足哪些条件"}},[s._v("#")]),s._v(" 1. 一个分布式id要满足哪些条件")]),s._v(" "),t("ul",[t("li",[s._v("全局唯一")]),s._v(" "),t("li",[s._v("方便易用")]),s._v(" "),t("li",[s._v("高可用")]),s._v(" "),t("li",[s._v("高性能")]),s._v(" "),t("li",[s._v("安全")])]),s._v(" "),t("p",[s._v("一个高质量的分布式id，最好也可以满足下面的条件")]),s._v(" "),t("ul",[t("li",[s._v("安全：不包含敏感信息，如数量、mac地址等")]),s._v(" "),t("li",[s._v("有序递增：满足数据库的索引性质")]),s._v(" "),t("li",[s._v("有具体的业务含义：方便发生bug时进行定位操作")]),s._v(" "),t("li",[s._v("可以独立部署")])]),s._v(" "),t("h2",{attrs:{id:"_2-分布式id常见解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-分布式id常见解决方案"}},[s._v("#")]),s._v(" 2. 分布式id常见解决方案")]),s._v(" "),t("h3",{attrs:{id:"数据库模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库模式"}},[s._v("#")]),s._v(" 数据库模式")]),s._v(" "),t("p",[s._v("通关关系型数据库生成id，如mysql")]),s._v(" "),t("p",[s._v("具体方案：")]),s._v(" "),t("p",[s._v("①创建一个数据库：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sequence_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bigint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("stub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("stub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("stub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("code",[s._v("stub")]),s._v(" 字段无意义，只是为了占位，便于我们插入或者修改数据。并且，给 "),t("code",[s._v("stub")]),s._v(" 字段创建了唯一索引，保证其唯一性。")]),s._v(" "),t("p",[s._v("② 使用replace into语句")]),s._v(" "),t("div",{staticClass:"language-SQL line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPLACE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" sequence_id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stub"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'stub'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" LAST_INSERT_ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMIT")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("插入数据这里，我们没有使用 "),t("code",[s._v("insert into")]),s._v(" 而是使用 "),t("code",[s._v("replace into")]),s._v(" 来插入数据，具体步骤是这样的：")]),s._v(" "),t("p",[s._v("1)第一步： 尝试把数据插入到表中。")]),s._v(" "),t("p",[s._v("2)第二步： 如果主键或唯一索引字段出现重复数据错误而插入失败时，先从表中删除含有重复关键字值的冲突行，然后再次尝试把数据插入到表中。")]),s._v(" "),t("ul",[t("li",[s._v("优缺：实现简单、ID保持自增、存储消耗的空间较小")]),s._v(" "),t("li",[s._v("缺点：传统的mysql无法支持大并发量、存在数据库单点问题、id无法提现具体的业务逻辑、存在安全问题（数量）、每次都需要访问数据库磁盘效率低下。")])]),s._v(" "),t("h3",{attrs:{id:"数据库号段模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库号段模式"}},[s._v("#")]),s._v(" 数据库号段模式")]),s._v(" "),t("p",[s._v("数据库模式的每次获取都要从数据库中获取磁盘数据，在并发量比较大的情况下，"),t("strong",[s._v("获取id的速度慢且容易造成数据库宕机")]),s._v("。那么什么方法可以解决呢？号段模式：批量获取id，存在内存里，当我们需要用到的时候，直接从内存中里取数据就可以了。")]),s._v(" "),t("p",[s._v("①创建一个数据库表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sequence_id_generator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("current_max_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bigint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'当前最大id'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("step"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'号段的长度'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'版本号'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("biz_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COMMENT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'业务类型'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8mb4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[t("code",[s._v("current_max_id")]),s._v(" 字段和"),t("code",[s._v("step")]),s._v("字段主要用于获取批量 ID，获取的批量 id 为： "),t("code",[s._v("current_max_id ~ current_max_id+step")]),s._v("。")]),s._v(" "),t("p",[s._v("![image-20230410111433253](/Users/zhengjian/Library/Application Support/typora-user-images/image-20230410111433253.png)")]),s._v(" "),t("p",[t("code",[s._v("version")]),s._v(" 字段主要用于解决并发问题（乐观锁）,"),t("code",[s._v("biz_type")]),s._v(" 主要用于表示业")]),s._v(" "),t("p",[s._v("②插入数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sequence_id_generator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("current_max_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("step"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("biz_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("③获取指定业务下的一批唯一ID")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("current_max_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("step"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sequence_id_generator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("biz_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("结果：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("id\tcurrent_max_id\tstep\tversion\tbiz_type\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("④如果下次来取数据，更新之后重新查询即可")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" sequence_id_generator "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" current_max_id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("biz_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("current_max_id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("step"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("sequence_id_generator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("biz_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("结果")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("id\tcurrent_max_id\tstep\tversion\tbiz_type\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[t("strong",[s._v("优点")]),s._v(" ：ID 有序递增、存储消耗空间小、减小了并发问题、优化了查询的效率")]),s._v(" "),t("li",[t("strong",[s._v("缺点")]),s._v(" ：存在数据库单点问题（可以使用数据库集群解决，不过增加了复杂度）、ID 没有具体业务含义、安全问题（比如根据订单 ID 的递增规律就能推算出每天的订单量，商业机密啊！ ）")])]),s._v(" "),t("h3",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[s._v("#")]),s._v(" redis")]),s._v(" "),t("p",[s._v("一般情况下，NoSQL 方案使用 Redis 多一些。我们通过 Redis 的 "),t("code",[s._v("incr")]),s._v(" 命令即可实现对 id 原子顺序递增。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" sequence_id_biz_type "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nOK\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" incr sequence_id_biz_type\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" get sequence_id_biz_type\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("为了提高可用性和并发，我们可以使用 Redis Cluster。Redis Cluster 是 Redis 官方提供的 Redis 集群解决方案（3.0+版本）")]),s._v(" "),t("p",[t("strong",[s._v("Redis 方案的优缺点：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("优点")]),s._v(" ： 性能不错并且生成的 ID 是有序递增的")]),s._v(" "),t("li",[t("strong",[s._v("缺点")]),s._v(" ： 和数据库主键自增方案的缺点类似")])]),s._v(" "),t("h3",{attrs:{id:"mongodb-objectid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mongodb-objectid"}},[s._v("#")]),s._v(" mongodb ObjectId")]),s._v(" "),t("p",[s._v("objectId结构 12字节")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("0~3：时间戳")])]),s._v(" "),t("li",[t("p",[s._v("3~6： 代表机器 ID")])]),s._v(" "),t("li",[t("p",[s._v("7~8：机器进程 ID")])]),s._v(" "),t("li",[t("p",[s._v("9~11 ：自增值")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("优点")]),s._v(" ： 性能不错并且生成的 ID 是有序递增的")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("缺点")]),s._v(" ： 需要解决重复 ID 问题（当机器时间不对的情况下，可能导致会产生重复 ID） 、有安全性问题（ID 生成有规律性）")])])]),s._v(" "),t("p",[s._v("这里关注一下时间不对造成重复id问题。")]),s._v(" "),t("p",[s._v("问题存在的原因是因为存在"),t("strong",[s._v("时间回拨")]),s._v("问题：")]),s._v(" "),t("h4",{attrs:{id:"什么是时间回拨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是时间回拨"}},[s._v("#")]),s._v(" 什么是时间回拨")]),s._v(" "),t("p",[s._v("时间回拨（Time Drift）是指时钟的误差导致时间变慢或者变快，从而影响计时准确性的现象。在分布式系统中，不同机器上的时钟可能存在微小的差异，如果系统依赖于时钟来进行排序、计算超时等操作，就可能出现问题。")]),s._v(" "),t("p",[s._v("例如，在使用雪花算法生成ID时，如果某个机器发生了时间回拨，那么当前时间戳就会比之前生成ID的时间戳还要小，这就会导致生成的ID重复。为了避免这种情况，通常需要进行一定的时间同步，确保各个机器上的时钟尽量保持同步，并且需要对时间回拨进行处理，避免产生重复ID或者其他的错误。")]),s._v(" "),t("p",[s._v("解决时间回拨的方法有很多种，常见的方式包括：")]),s._v(" "),t("ol",[t("li",[s._v("使用网络时间协议（NTP）等工具对时钟进行同步；")]),s._v(" "),t("li",[s._v("在生成ID时检测时间戳是否小于之前生成的ID的时间戳，如果是则等待直到时间追上去后再生成ID；")]),s._v(" "),t("li",[s._v("对整个系统进行时钟漂移的监控和调整，及时进行修正。")])]),s._v(" "),t("p",[s._v("就从objectId来看，对于同一个机器来说，在时间戳110时间段生成了一个id：110 0000 00 001")]),s._v(" "),t("p",[s._v("然后在111阶段生成了一个id：111 0000 00 001。这两个id不会出现重复问题，但是如果本在111时间戳阶段发生了时间回拨问题，那么机器生成的id可能是110 0000 00 001，此时生成的id就算是重复了。")]),s._v(" "),t("p",[s._v("发生时间回拨的可能原因是什么？")]),s._v(" "),t("p",[s._v("时间回拨的原因可能有很多，主要包括以下几种情况：")]),s._v(" "),t("ol",[t("li",[s._v("硬件故障：例如电源故障、主板故障、硬盘损坏等问题都可能导致时钟发生回拨；")]),s._v(" "),t("li",[s._v("软件错误：例如操作系统异常、BIOS 设置错误、应用程序故障等也可能会导致时钟发生回拨；")]),s._v(" "),t("li",[s._v("时间同步问题：如果某些机器没有使用时间同步服务或者同步误差较大，也可能导致时钟不同步，出现回拨现象；")]),s._v(" "),t("li",[s._v("其他因素：例如电压不稳定、温度过高等因素也可能影响时钟的精度和准确性。")])]),s._v(" "),t("p",[s._v("需要注意的是，时间回拨虽然在分布式系统中比较常见，但是在单机环境中也可能会出现。因此，在进行计时和时间戳相关处理时，都需要格外注意时间回拨带来的影响。")]),s._v(" "),t("h3",{attrs:{id:"uuid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uuid"}},[s._v("#")]),s._v(" UUID")]),s._v(" "),t("p",[s._v("UUID包含32个16进制数字，且被分割为5个部分")]),s._v(" "),t("p",[t("strong",[s._v("467e8542-2275-4163-95d6-7adc205580a9")])]),s._v(" "),t("p",[s._v("各部分的数字个数为：8-4-4-4-12")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230410113501693.png",alt:"image-20230410113501693"}})]),s._v(" "),t("p",[s._v("UUID也有不同的版本，不同的版本生成UUID的规则也不一样")]),s._v(" "),t("p",[s._v("5 种不同的 Version(版本)值分别对应的含义（参考"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E5%94%AF%E4%B8%80%E8%AF%86%E5%88%AB%E7%A0%81",target:"_blank",rel:"noopener noreferrer"}},[s._v("维基百科对于 UUID 的介绍open in new window"),t("OutboundLink")],1),s._v("）：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("版本 1")]),s._v(" : UUID 是根据时间和节点 ID（通常是 MAC 地址）生成；")]),s._v(" "),t("li",[t("strong",[s._v("版本 2")]),s._v(" : UUID 是根据标识符（通常是组或用户 ID）、时间和节点 ID 生成；")]),s._v(" "),t("li",[t("strong",[s._v("版本 3、版本 5")]),s._v(" : 版本 5 - 确定性 UUID 通过散列（hashing）名字空间（namespace）标识符和名称生成；")]),s._v(" "),t("li",[t("strong",[s._v("版本 4")]),s._v(" : UUID 使用"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("随机性open in new window"),t("OutboundLink")],1),s._v("或"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("伪随机性open in new window"),t("OutboundLink")],1),s._v("生成。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedimage-20230410113945616.png",alt:"image-20230410113945616"}})]),s._v(" "),t("p",[s._v("JDK 中通过 "),t("code",[s._v("UUID")]),s._v(" 的 "),t("code",[s._v("randomUUID()")]),s._v(" 方法生成的 UUID 的版本默认为 4。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UUID")]),s._v(" uuid "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UUID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("randomUUID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" uuid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("从上面的介绍中可以看出，UUID 可以保证唯一性，因为其生成规则包括 MAC 地址、时间戳、名字空间（Namespace）、随机或伪随机数、时序等元素，计算机基于这些规则生成的 UUID 是肯定不会重复的。")]),s._v(" "),t("p",[s._v("虽然，UUID 可以做到全局唯一性，但是，我们一般很少会使用它。")]),s._v(" "),t("p",[s._v("比如使用 UUID 作为 MySQL 数据库主键的时候就非常不合适：")]),s._v(" "),t("ul",[t("li",[s._v("数据库主键要尽量越短越好，而 UUID 的消耗的存储空间比较大（32 个字符串，128 位）。")]),s._v(" "),t("li",[s._v("UUID 是无顺序的，InnoDB 引擎下，数据库主键的无序性会严重影响数据库性能。")])]),s._v(" "),t("p",[s._v("最后，我们再简单分析一下 "),t("strong",[s._v("UUID 的优缺点")]),s._v(" （面试的时候可能会被问到的哦！） :")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("优点")]),s._v(" ：生成速度比较快、简单易用。无序网络，单机自行生成。速度快")]),s._v(" "),t("li",[t("strong",[s._v("缺点")]),s._v(" ： 存储消耗空间大（32 个字符串，128 位） 、 不安全（基于 MAC 地址生成 UUID 的算法会造成 MAC 地址泄露)、无序（非自增）、没有具体业务含义、需要解决重复 ID 问题（当机器时间不对的情况下，可能导致会产生重复 ID）")])]),s._v(" "),t("h3",{attrs:{id:"雪花算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#雪花算法"}},[s._v("#")]),s._v(" 雪花算法")]),s._v(" "),t("p",[s._v("Snowflake 是 Twitter 开源的分布式 ID 生成算法。Snowflake 由 64 bit 的二进制数字组成，这 64bit 的二进制被分成了几部分，每一部分存储的数据都有特定的含义：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("第 0 位")]),s._v("： 符号位（标识正负），始终为 0，没有用，不用管。")]),s._v(" "),t("li",[t("strong",[s._v("第 1~41 位")]),s._v(" ：一共 41 位，用来表示时间戳，单位是毫秒，可以支撑 2 ^41 毫秒（约 69 年）")]),s._v(" "),t("li",[t("strong",[s._v("第 42~52 位")]),s._v(" ：一共 10 位，一般来说，前 5 位表示机房 ID，后 5 位表示机器 ID（实际项目中可以根据实际情况调整）。这样就可以区分不同集群/机房的节点。")]),s._v(" "),t("li",[t("strong",[s._v("第 53~64 位")]),s._v(" ：一共 12 位，用来表示序列号。 序列号为自增值，代表单台机器每毫秒能够产生的最大 ID 数(2^12 = 4096),也就是说单台机器每毫秒最多可以生成 4096 个 唯一 ID。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/undefinedsnowflake-distributed-id-schematic-diagram.png",alt:"Snowflake 示意图"}})]),s._v(" "),t("p",[s._v("如果你想要使用 Snowflake 算法的话，一般不需要你自己再造轮子。有很多基于 Snowflake 算法的开源实现比如美团 的 Leaf、百度的 UidGenerator，并且这些开源实现对原有的 Snowflake 算法进行了优化。")]),s._v(" "),t("p",[s._v("另外，在实际项目中，我们一般也会对 Snowflake 算法进行改造，最常见的就是在 Snowflake 算法生成的 ID 中加入业务类型信息。")]),s._v(" "),t("p",[s._v("我们再来看看 Snowflake 算法的优缺点 ：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("优点")]),s._v(" ：生成速度比较快、生成的 ID 有序递增、比较灵活（可以对 Snowflake 算法进行简单的改造比如加入业务 ID）")]),s._v(" "),t("li",[t("strong",[s._v("缺点")]),s._v(" ： 需要解决重复 ID 问题（依赖时间，当机器时间不对的情况下，可能导致会产生重复 ID）。")])]),s._v(" "),t("p",[s._v("可以看到，只要与时间相关的，基本上都需要注意"),t("strong",[s._v("时间回拨")]),s._v("的问题")]),s._v(" "),t("p",[s._v("解决方案有：")]),s._v(" "),t("ul",[t("li",[s._v("将ID生成交给少量服务器，并关闭时钟同步。")]),s._v(" "),t("li",[s._v("直接报错，交给上层业务处理。")]),s._v(" "),t("li",[s._v("如果回拨时间较短，在耗时要求内，比如5ms，那么等待回拨时长后再进行生成。")]),s._v(" "),t("li",[s._v("如果回拨时间很长，那么无法等待，可以匀出少量位（1~2位）作为回拨位，一旦时钟回拨，将回拨位加1，可得到不一样的ID，2位回拨位允许标记三次时钟回拨，基本够使用。如果超出了，可以再选择抛出异常。")])]),s._v(" "),t("h3",{attrs:{id:"谈一谈mongodb的object-id"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈一谈mongodb的object-id"}},[s._v("#")]),s._v(" 谈一谈mongodb的object_id")]),s._v(" "),t("p",[s._v("3.2 版本之前")]),s._v(" "),t("p",[s._v("Object_id的组成。一共12字节【和mysql主键类比的话，多了4字节】")]),s._v(" "),t("ul",[t("li",[s._v("4字节timestamp，秒级别")]),s._v(" "),t("li",[s._v("3字节 机器识别码")]),s._v(" "),t("li",[s._v("2字节 进程id")]),s._v(" "),t("li",[s._v("3字节 随机数开始的计数器")])]),s._v(" "),t("p",[s._v('"在同一秒内，两个进程实例产生了相同的5字节随机数，且刚巧这两个进程的自增计数器的值也相同"--这种情况发生的概率实在太低了，完全可以认为不可能发生，所以使用互联无关的随机数来区分不同进程实例是完全合乎需求的。')]),s._v(" "),t("p",[s._v("3.2 后")]),s._v(" "),t("ul",[t("li",[s._v("A 4-byte timestamp, representing the ObjectId's creation, measured in seconds since the Unix epoch.")]),s._v(" "),t("li",[s._v("A 5-byte random value generated once per process. This random value is unique to the machine and process.")]),s._v(" "),t("li",[s._v("A 3-byte incrementing counter, initialized to a random value.")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("4字节 Unix时间戳")]),s._v(" "),t("li",[s._v("5字节 随机数")]),s._v(" "),t("li",[s._v("3字节 随机数开始的计数器")])])]),s._v(" "),t("p",[s._v("为什么不继续使用“机器标识+进程号”？")]),s._v(" "),t("ul",[t("li",[s._v("机器标识码，ObjectId 的机器标识码是取系统 hostname 哈希值的前几位，问题来了，想必在座的各位都有干过吧：准备了几台虚拟机，hostname 都是默认的 localhost，谁都想着这玩意儿能有什么用，还得刻意给不同机器起不同的 hostname？此外，hostname 在容器、云主机里一般默认就是随机数，也不会检查同一集群里是否有 hostname 重名")]),s._v(" "),t("li",[s._v("进程号，这个问题就更大了，要知道，容器内的进程拥有自己独立的进程空间，在这个空间里只用它自己这一个进程（以及它的子进程），所以它的进程号永远都是 1。也就是说，如果某个服务（既可以是 mongo 实例也可以是 mongo 客户端）是使用容器部署的，无论部署多少个实例，在这个服务上生成的 ObjectId，第八第九个字节恒为 "),t("code",[s._v("0000 0001")]),s._v("，相当于说这两个字节废了")])]),s._v(" "),t("h3",{attrs:{id:"分布式id框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式id框架"}},[s._v("#")]),s._v(" 分布式id框架")]),s._v(" "),t("p",[s._v("UidGenerator(百度)、Leaf(美团)、Tinyid(滴滴)")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/itxiaoshen/p/15208459.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cnblogs.com/itxiaoshen/p/15208459.html"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);