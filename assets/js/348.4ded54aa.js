(window.webpackJsonp=window.webpackJsonp||[]).push([[348],{671:function(s,e,a){"use strict";a.r(e);var n=a(4),t=Object(n.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"_1-服务发现service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务发现service"}},[s._v("#")]),s._v(" 1. 服务发现service")]),s._v(" "),e("p",[s._v("service、endpoints、pod之间的关系")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230830161826983.png",alt:"image-20230830161826983"}})]),s._v(" "),e("p",[s._v("现在有两个节点node1和node2，里面都有相应的镜像容器nginx和pause。对于pause容器，会对pod内部的网络进行一个统一管理。")]),s._v(" "),e("p",[s._v("那么不在同一个网络里的node1和node2，应该怎么进行管理呢？此时就会用到service，service会管理对应的endpoint，endpopint中有对应的服务地址关系表，当我们的node1想要对node2进行通信的时候，我们的node1先会发送到endpoint，然后再由endpoint转发到node2.")]),s._v(" "),e("h3",{attrs:{id:"命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令：")]),s._v(" "),e("p",[e("code",[s._v("kubectl get svc")])]),s._v(" "),e("p",[s._v("kubectl describe svc -o wide")]),s._v(" "),e("h3",{attrs:{id:"清单编写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清单编写"}},[s._v("#")]),s._v(" 清单编写")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230830163204957.png",alt:"image-20230830163204957"}})]),s._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deploy  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配哪些pod会被该service进行代理")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ClusterIP  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#是绑定在Node上面的")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("type有4种类型：")]),s._v(" "),e("ul",[e("li",[s._v("ClusterIp")])]),s._v(" "),e("p",[s._v("只能在集群内部使用，不配置类型的话默认就是ClusterIp。只是东西流量")]),s._v(" "),e("ul",[e("li",[s._v("ExternalName")])]),s._v(" "),e("p",[s._v("返回定义的CNAME别名和，可以配置为域名")]),s._v(" "),e("ul",[e("li",[s._v("NodePort")])]),s._v(" "),e("p",[s._v("（随机开启一个端口进行映射，该端口是直接绑定在node上的，且集群中的每一个node都会绑定在这个端口【相当于可以将pod服务暴露给外部进行访问，但是实际生产不会使用，效率较低，而且是四层负载】）")]),s._v(" "),e("blockquote",[e("p",[s._v("NodePort 是一种 Service 类型，它允许你将应用程序暴露到集群节点的特定端口上。当你创建一个 NodePort 类型的 Service 时，Kubernetes 会在每个节点上打开一个随机的端口，然后将该端口映射到 Service 中定义的目标端口（通常是 Pod 中容器的端口）。这样，你可以通过访问集群节点的 IP 地址和映射的端口来访问 Service。")]),s._v(" "),e("p",[s._v("举个例子，如果你创建了一个 NodePort 类型的 Service，并将目标端口设置为 80，Kubernetes 会为每个节点打开一个随机的端口（比如 30000-32767 范围内的端口），然后将该端口映射到 Pod 中容器的 80 端口。这样，你可以通过访问任何节点的 IP 地址和映射的端口（例如 "),e("code",[s._v("http://node-ip:node-port")]),s._v("）来访问 Service 中的应用程序。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831111348954.png",alt:"image-20230831111348954"}})])]),s._v(" "),e("ul",[e("li",[s._v("LoadBalancer")])]),s._v(" "),e("p",[s._v("使用云服务商提供的负载均衡器服务")]),s._v(" "),e("ul",[e("li",[s._v("相关命令")])]),s._v(" "),e("p",[e("code",[s._v("kubectl get svc")])]),s._v(" "),e("p",[e("code",[s._v("kubectl describe svc nginx-svc")]),s._v(" 查看svc的详细信息")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831101844948.png",alt:"image-20230831101844948"}})]),s._v(" "),e("p",[s._v("其中endpoints表示代理到的节点【endpoint是根据selector来实现的】")]),s._v(" "),e("p",[e("code",[s._v("kubectl get po -o wide")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831102047060.png",alt:"image-20230831102047060"}})]),s._v(" "),e("p",[s._v("我们查看详细信息，可以看到具体代理到的节点就是我们对应pod的ip")]),s._v(" "),e("p",[e("code",[s._v("kubectl exec -it busybox -- sh")]),s._v(" "),e("code",[s._v("curl http://nginx-svc")]),s._v(" 创建其他pod通过service name进行访问（推荐）")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831102319412.png",alt:"image-20230831102319412"}})]),s._v(" "),e("p",[s._v("这里我们就基于我们的服务名访问到了nginx，而且我们看到的这个ip是nginx-service")]),s._v(" "),e("h4",{attrs:{id:"功能1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能1"}},[s._v("#")]),s._v(" 功能1")]),s._v(" "),e("p",[s._v("是怎么运作的呢？")]),s._v(" "),e("p",[s._v("通过kubectl找到了server-api，再通过server-api找到对应的service，再通过service找到挂在的nginx。")]),s._v(" "),e("p",[s._v("通过wget在本地的iptables找到service")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831103353511.png",alt:"image-20230831103353511"}})]),s._v(" "),e("p",[s._v("当然，跨命名空间也是可以访问的，可以在servicename的后面加上对应的命名空间的名字：例如http://nginx-service.default 也可以.")]),s._v(" "),e("h4",{attrs:{id:"功能2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能2"}},[s._v("#")]),s._v(" 功能2")]),s._v(" "),e("p",[s._v("以上都是实现的集群内部的各个pod之间通过服务名进行访问，那可以实现集群内部pod访问k8s集群外的其他服务吗？【理解：内部的pod是可以访问互联网，比如访问www.baidu.com，这个是可以的。但是如果是我们自己的mysql服务，这时候我们就需要在pod的java项目里面写上对应的ip。但是肯定不能写ip吧，我们希望写一个服务名，这样以后ip地址变了，但是服务名就不用更改，现在我们的需求就是通过服务名，pod能不能访问到集群外部的服务】")]),s._v(" "),e("p",[s._v("实现具体方式")]),s._v(" "),e("ol",[e("li",[s._v("编写service配置文件时，不指定selector属性")]),s._v(" "),e("li",[s._v("自己来创建endpoint配置【为什么自己创建endpoint呢，因为当使用selector时，自动创建的是内部ip与服务名的绑定，现在我们想让外部ip与服务名绑定，我们需要自己写endpoint才行】")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831105001969.png",alt:"image-20230831105001969"}})]),s._v(" "),e("p",[s._v("创建成功后，我们可以通过"),e("code",[s._v("kubectl get svc")]),s._v(" "),e("code",[s._v("kubectl get ep")]),s._v(" 查看相应的信息")]),s._v(" "),e("p",[s._v("然后会发现，我们新创建的svc没有对应的ep，所以我们这个时候来创建对应的ep")]),s._v(" "),e("p",[s._v("ep也是一种对应的资源，也需要写相应的yaml文件")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831105548475.png",alt:"image-20230831105548475"}})]),s._v(" "),e("p",[s._v("然后进行创建，然后我们查看详细信息，就可以对应了。")]),s._v(" "),e("p",[s._v("测试，进入pod容器，使用wget http://nginx-svc-external, 就可以访问成功")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831110000700.png",alt:"image-20230831110000700"}})]),s._v(" "),e("h3",{attrs:{id:"功能3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能3"}},[s._v("#")]),s._v(" 功能3")]),s._v(" "),e("p",[s._v("上面说的我们配置的事ip地址，那我们可以直接配置一个外网的域名吗？答案是可以的")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831110841962.png",alt:"image-20230831110841962"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: toBaidu\n  name: baidu-service\nspec:\n  type: ExternalName\n  externalName: www.baidu.com\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"ingress-重点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ingress-重点"}},[s._v("#")]),s._v(" ingress 重点")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831112059266.png",alt:"image-20230831112059266"}})]),s._v(" "),e("p",[s._v("其实这里的 Ingress 可以类比为nginx，可以想向城对nginx做了一层封装。Ingress依赖了nginx。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831112622638.png",alt:"image-20230831112622638"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831112702858.png",alt:"image-20230831112702858"}})]),s._v(" "),e("p",[s._v("是七层协议")]),s._v(" "),e("h4",{attrs:{id:"安装scp学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装scp学习"}},[s._v("#")]),s._v(" 安装"),e("a",{attrs:{href:"https://help.aliyun.com/zh/ecs/use-cases/run-scp-commands-to-transfer-files-to-or-from-a-linux-instance",target:"_blank",rel:"noopener noreferrer"}},[s._v("scp学习"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("https://kubernetes.feisky.xyz/extension/ingress")]),s._v(" "),e("ol",[e("li",[s._v("安装helm管理")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831112954932.png",alt:"image-20230831112954932"}})]),s._v(" "),e("p",[e("code",[s._v("wget https://get.helm.sh/helm-v3.2.3-linux-amd64.tar.gz")])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("移动")])]),s._v(" "),e("p",[e("code",[s._v("cp -r helm /usr/local/bin/")])]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("code",[s._v("helm version")])])]),s._v(" "),e("p",[s._v("添加helm仓库")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ingress-nginx http://kubernetes.github.io/ingress-nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看仓库列表")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("helm repo list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("搜索ingress-nginx")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("helm search repo ingress-nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831124837275.png",alt:"image-20230831124837275"}})]),s._v(" "),e("p",[s._v("下载")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("helm pull ingress-nginx/ingress-nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("解压：")]),s._v(" "),e("p",[e("code",[s._v("tar -zxvf ingress-nginx-4.7.1.tgz")])]),s._v(" "),e("p",[s._v("更改镜像：values.yaml")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831134355585.png",alt:"image-20230831134355585"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("registry: registry.cn.hangzhou.aliyuncs.com\nimage: google_containers/nginx-ingress-controller\n注释掉hash校验\n\n\nregistry: registry.cn-hangzhou.aliyuncs.com\nimage: google_containers/kube-webhook-certgen\n\n\nhostNetwork: "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\ndnsPolicy: ClusterFirstWithHostNet\n\n\n修改部署配置 kind: DaemonSet\nnodeSelector:\n ingress: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v(" \n \n \n将admissionWebhooks.enable修改为false\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831154033827.png",alt:"image-20230831154033827"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831154759393.png",alt:"image-20230831154759393"}})]),s._v(" "),e("p",[s._v("以上更改配置非常复杂：")]),s._v(" "),e("ol",[e("li",[s._v("创建integress专属的命名空间")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubectl create ns ingress-nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[e("code",[s._v("Kubectl get ns")])])]),s._v(" "),e("li",[e("p",[s._v("为需要部署的ingress的节点上加上标签")])])]),s._v(" "),e("p",[s._v("kubectl label no minikube ingress=true")]),s._v(" "),e("p",[s._v("查看节点信息：")]),s._v(" "),e("p",[s._v("kubectl get nodes")]),s._v(" "),e("p",[s._v("kubectl get nodes --show-labels")]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[s._v("安装 ingress-nginx")])]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[s._v("helm install ingress"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("nginx "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n ingress"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("nginx "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"5"}},[e("li")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831162846340.png",alt:"image-20230831162846340"}})]),s._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[s._v("查看对应的命名空间是否已经建立了对应的节点")])]),s._v(" "),e("p",[e("code",[s._v("kubectl get po -n ingress-nginx")])]),s._v(" "),e("p",[s._v("上面可能在集群模式下才会有效果，现在我们在minikube上，使用官方文档的方式试一试")]),s._v(" "),e("p",[s._v("https://kubernetes.io/zh-cn/docs/tasks/access-application-cluster/ingress-minikube/")]),s._v(" "),e("h3",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用：")]),s._v(" "),e("p",[s._v("创建对应的ingress文件")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code")]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"})]),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831172940616.png",alt:"image-20230831172940616"}})]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: baidu-nginx-ingress\n  annotations:\n    kubernetes.io/ingress.class: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("\nspec:\n  rules:\n  - host: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("122.228")]),s._v(".207.18\n    http:\n      path: \n      - pathType: Prefix\n        backend:\n          name: nginx-svc\n          port:\n            number: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("     \n        path: /api\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("创建成功后，我们就是用kubectl get ingress 的方式来获取数据")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831173305148.png",alt:"image-20230831173305148"}})]),s._v(" "),e("blockquote",[e("p",[s._v("Kubernetes Ingress 是一种资源对象，它充当了在集群中管理外部访问的 API 网关的角色。Ingress 允许你定义如何将外部请求路由到你的服务，通常用于 HTTP 和 HTTPS 请求。")]),s._v(" "),e("p",[s._v("以下是 Ingress 的一些关键特性和作用：")]),s._v(" "),e("ol",[e("li",[e("strong",[s._v("路由外部流量")]),s._v("：Ingress 允许你将外部流量路由到集群中的不同服务。你可以基于请求的主机名、路径、HTTP 头等标准来定义路由规则。")]),s._v(" "),e("li",[e("strong",[s._v("SSL/TLS 终止")]),s._v("：Ingress 支持 SSL/TLS 终止，这意味着你可以在 Ingress 上配置 TLS 证书，用于加密外部访问的流量。")]),s._v(" "),e("li",[e("strong",[s._v("负载均衡")]),s._v("：Ingress 可以与底层负载均衡器（通常由云提供商管理）集成，以分发外部流量到不同的后端服务。")]),s._v(" "),e("li",[e("strong",[s._v("多域名和虚拟主机")]),s._v("：你可以配置一个 Ingress 对象来处理多个域名（虚拟主机）的流量，将不同的域名路由到不同的服务。")]),s._v(" "),e("li",[e("strong",[s._v("路径和前缀路由")]),s._v("：Ingress 具有强大的路径和前缀路由功能，允许你基于请求的 URL 路径将流量路由到不同的服务。")]),s._v(" "),e("li",[e("strong",[s._v("灵活性")]),s._v("：Ingress 是一个高度可配置的资源，你可以根据你的需求定制路由规则，允许你实现高度定制化的流量控制。")]),s._v(" "),e("li",[e("strong",[s._v("集中管理")]),s._v("：通过 Ingress，你可以在一个集中的位置管理所有入口流量，而无需为每个服务单独配置外部访问规则。")])]),s._v(" "),e("p",[s._v("请注意，Ingress 控制器是需要安装和配置的，它负责实际的路由和负载均衡功能。Kubernetes 社区提供了多个 Ingress 控制器的实现，如 Nginx Ingress Controller、Traefik、HAProxy Ingress 等，你可以根据你的需求选择并安装适合的控制器。")])]),s._v(" "),e("h2",{attrs:{id:"_2-存储管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-存储管理"}},[s._v("#")]),s._v(" 2. 存储管理")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831181032113.png",alt:"image-20230831181032113"}})]),s._v(" "),e("p",[s._v("ConfigMap存储一些明文的配置")]),s._v(" "),e("p",[s._v("secret中可以存储一些加密的信息")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建configMap")]),s._v("\nkubectl create configmap\n\nExamples:\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a new config map named my-config based on folder bar")]),s._v("\n  kubectl create configmap my-config --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/bar\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a new config map named my-config with specified keys instead of file basenames on disk")]),s._v("\n  kubectl create configmap my-config --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("key1"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/bar/file1.txt --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/path/to/bar/file2.txt\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a new config map named my-config with key1=config1 and key2=config2")]),s._v("\n  kubectl create configmap my-config --from-literal"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("key1"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("config1 --from-literal"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("key2"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("config2\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a new config map named my-config from the key=value pairs in the file")]),s._v("\n  kubectl create configmap my-config --from-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/bar\n  \n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a new config map named my-config from an env file")]),s._v("\n  kubectl create configmap my-config --from-env-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/foo.env --from-env-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("path/to/bar.env\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);