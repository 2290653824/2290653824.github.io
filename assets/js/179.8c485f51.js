(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{503:function(t,a,s){"use strict";s.r(a);var n=s(4),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1.简介")]),t._v(" "),a("p",[t._v("简单工厂模式严格来说并不是一个设计模式，反而较像是一种编程习惯。")]),t._v(" "),a("p",[t._v("简单工厂模式("),a("code",[t._v("Simple Factory Pattern")]),t._v(")：又称为静态工厂方法("),a("code",[t._v("Static Factory Method")]),t._v(")模式，它属于类创建型模式。在简单工厂模式中，"),a("code",[t._v("可以根据参数的不同返回不同类的实例")]),t._v("。简单工厂模式专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有共同的父类。")]),t._v(" "),a("h2",{attrs:{id:"_2-uml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-uml"}},[t._v("#")]),t._v(" 2. UML")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223122849679.png",alt:"image-20221223122849679"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Factory: 工厂角色")]),t._v(" 负责根据不同的参数创建不同的实例。")]),t._v(" "),a("li",[a("strong",[t._v("IProduct: 抽象产品角色")]),t._v(" 所有产品实例的接口，负责描述所有产品实例的行为。")]),t._v(" "),a("li",[a("strong",[t._v("Product(A B ..): 具象产品角色")]),t._v(" 所有产品的实例，实现了抽象产品定义的代码")])]),t._v(" "),a("h2",{attrs:{id:"_3-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现"}},[t._v("#")]),t._v(" 3. 实现")]),t._v(" "),a("p",[t._v("其实简单工厂最好的实现就是在spring中了。")]),t._v(" "),a("p",[t._v("spring中的BeanFactory就是根据用户传入的参数从而创建不同的bean")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223123508118.png",alt:"image-20221223123508118"}})]),t._v(" "),a("h2",{attrs:{id:"_4-适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-适用场景"}},[t._v("#")]),t._v(" 4.适用场景")]),t._v(" "),a("ul",[a("li",[t._v("工厂类负责创建的对象比较少：由于创建的对象较少，不会造成工厂方法中的业务逻辑太过复杂。")]),t._v(" "),a("li",[t._v("客户端只知道传入工厂类的参数，对于如何创建对象不关心：客户端既不需要关心创建细节，甚至连类名都不需要记住，只需要知道类型所对应的参数。")])]),t._v(" "),a("h2",{attrs:{id:"_5-优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-优缺点"}},[t._v("#")]),t._v(" 5.优缺点")]),t._v(" "),a("p",[t._v("由于工厂类集中了所有产品创建逻辑，一旦不能正常工作，整个系统都要受到影响。")]),t._v(" "),a("p",[t._v("使用简单工厂模式将会增加系统中类的个数，在一定程序上增加了系统的复杂度和理解难度。")]),t._v(" "),a("p",[t._v("系统扩展困难，一旦添加新产品就不得不修改工厂逻辑，在产品类型较多时，有可能造成工厂逻辑过于复杂，不利于系统的扩展和维护。")]),t._v(" "),a("p",[t._v("简单工厂模式由于使用了静态工厂方法，造成工厂角色无法形成基于继承的等级结构。")]),t._v(" "),a("p",[t._v("关键在于增加新的产品时需要更改工厂里的生产逻辑，可以用另外一种模式：工厂方法模式来解决这个问题。")]),t._v(" "),a("h2",{attrs:{id:"_6-简单应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-简单应用"}},[t._v("#")]),t._v(" 6.简单应用")]),t._v(" "),a("ol",[a("li",[t._v("在JDK类库中广泛使用了简单工厂模式，如工具类java.text.DateFormat，它用于格式化一个本地日期或者时间")]),t._v(" "),a("li",[t._v("Java加密技术")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取不同加密算法的密钥生成器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyGenerator")]),t._v(" keyGen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KeyGenerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DESede"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建密码器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cipher")]),t._v(" cp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cipher")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DESede"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);