(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{505:function(t,s,a){"use strict";a.r(s);var n=a(4),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-简介"}},[t._v("#")]),t._v(" 一.简介")]),t._v(" "),s("h3",{attrs:{id:"_1-什么是工厂方法模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是工厂方法模式"}},[t._v("#")]),t._v(" 1. 什么是工厂方法模式")]),t._v(" "),s("p",[s("strong",[t._v("工厂方法模式")]),t._v("是一种创建型设计模式， 其在父类中提供一个创建对象的方法， 允许子类决定实例化对象的类型。")]),t._v(" "),s("p",[t._v("即工厂子类重写方法实现具体的创建逻辑，客户端引用抽象工厂和抽象对象获取实例，客户端无需关心创建怎么样的对象和如何创建对象，只需要拿到对应的抽象工厂和抽象产品。")]),t._v(" "),s("p",[t._v("简单工厂模式最大的缺点是当有新产品要加入到系统中时，必须修改工厂类，加入必要的处理逻辑，这违背了“开闭原则”。\n在简单工厂模式中，所有的产品都是由同一个工厂创建，工厂类职责较重，业务逻辑较为复杂，具体产品与工厂类之间的耦合度高，严重影响了系统的灵活性和扩展性")]),t._v(" "),s("h3",{attrs:{id:"_2-问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-问题"}},[t._v("#")]),t._v(" 2.问题")]),t._v(" "),s("p",[t._v("比如开发一个物流管理系统，最开始的时候只能处理卡车运输，所以大部分的核心代码在名为"),s("code",[t._v("卡车")]),t._v("的类中。")]),t._v(" "),s("p",[t._v("但是随着业务越做越大，后面提出了进行开通海上运输的服务要求。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223000446218.png",alt:"image-20221223000446218"}})]),t._v(" "),s("p",[t._v("代码问题该怎么怎么处理呢？如果在以前卡车的逻辑上进行修改代码，可能会非常复杂，因为"),s("code",[t._v("可能需要修改以前的代码")]),t._v(",更糟糕的是，如何在后续过程又要增加一种新的运输方式，可能修改的代码更多。")]),t._v(" "),s("p",[t._v("最后，不得不编写复杂的代码，根据不同的运输对象的类，在应用中进行不同的处理。")]),t._v(" "),s("h3",{attrs:{id:"_3-解决方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决方法"}},[t._v("#")]),t._v(" 3.解决方法")]),t._v(" "),s("p",[t._v("工厂方法模式建议使用特殊的"),s("em",[t._v("工厂")]),t._v("方法代替对于对象构造函数的直接调用 （即使用 "),s("code",[t._v("new")]),t._v("运算符）。 不用担心， 对象仍将通过 "),s("code",[t._v("new")]),t._v("运算符创建， 只是该运算符改在工厂方法中调用罢了。 工厂方法返回的对象通常被称作 “产品”。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223000812257.png",alt:"image-20221223000812257"}})]),t._v(" "),s("p",[t._v("现在我们可以在子类中重写工厂方法，从而改变创建产品的类型。")]),t._v(" "),s("p",[t._v("注意：仅当这些产品具有共同的基类或者接口时， 子类才能返回不同类型的产品， 同时基类中的工厂方法还应将其返回类型声明为这一共有接口。")]),t._v(" "),s("p",[t._v("按照上面的例子："),s("code",[t._v("卡车")]),t._v("Truck和 "),s("code",[t._v("轮船")]),t._v("Ship类都必须实现 "),s("code",[t._v("运输")]),t._v("Transport接口， 该接口声明了一个名为 "),s("code",[t._v("deliver")]),t._v("交付的方法。 每个类都将以不同的方式实现该方法： 卡车走陆路交付货物， 轮船走海路交付货物。  "),s("code",[t._v("陆路运输")]),t._v("Road­Logistics类中的工厂方法返回卡车对象， 而 "),s("code",[t._v("海路运输")]),t._v("Sea­Logistics类则返回轮船对象。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223001022265.png",alt:"image-20221223001022265"}})]),t._v(" "),s("p",[t._v("调用工厂方法的代码 （通常被称为"),s("em",[t._v("客户端")]),t._v("代码） 无需了解不同子类返回实际对象之间的差别。 客户端将所有产品视为抽象的 "),s("code",[t._v("运输")]),t._v(" 。 客户端知道所有运输对象都提供 "),s("code",[t._v("交付")]),t._v("方法， 但是并不关心其具体实现方式。")]),t._v(" "),s("h2",{attrs:{id:"二-uml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-uml"}},[t._v("#")]),t._v(" 二.UML")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20221223001109222.png",alt:"image-20221223001109222"}})]),t._v(" "),s("p",[t._v("工厂方法的目的是使得创建对象和使用对象是分离的，并且客户端总是引用抽象工厂和抽象产品")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("产品")]),t._v(" （Product） 将会对接口进行声明。 对于所有由创建者及其子类构建的对象， 这些接口都是通用的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("具体产品")]),t._v(" （Concrete Products） 是产品接口的不同实现。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("创建者")]),t._v(" （Creator） 类声明返回产品对象的工厂方法。 该方法的返回对象类型必须与产品接口相匹配。")]),t._v(" "),s("p",[t._v("你可以将工厂方法声明为抽象方法， 强制要求每个子类以不同方式实现该方法。 或者， 你也可以在基础工厂方法中返回默认产品类型。")]),t._v(" "),s("p",[t._v("注意， 尽管它的名字是创建者， 但它最主要的职责并"),s("strong",[t._v("不是")]),t._v("创建产品。 一般来说， 创建者类包含一些与产品相关的核心业务逻辑。 工厂方法将这些逻辑处理从具体产品类中分离出来。 打个比方， 大型软件开发公司拥有程序员培训部门。 但是， 这些公司的主要工作还是编写代码， 而非生产程序员。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("具体创建者")]),t._v(" （Concrete Creators） 将会重写基础工厂方法， 使其返回不同类型的产品。")]),t._v(" "),s("p",[t._v("注意， 并不一定每次调用工厂方法都会"),s("strong",[t._v("创建")]),t._v("新的实例。 工厂方法也可以返回缓存、 对象池或其他来源的已有对象。")])])]),t._v(" "),s("p",[t._v("即在接口或抽象类中定义了核心逻辑，在其子类中根据不同的业务进行产品创建实现。客户端只需要拿到抽象工厂的引用，就可以拿到对应的抽象产品，客户端不需要关心创建的是什么产品，也不需要关心如何创建这个产品。")]),t._v(" "),s("h2",{attrs:{id:"三-代码案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-代码案例"}},[t._v("#")]),t._v(" 三.代码案例")]),t._v(" "),s("p",[t._v("我们拿生产手机和电脑举例")]),t._v(" "),s("p",[t._v("定义抽象产品和具体产品")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    …………\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Phone")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    …………\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Computer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    …………\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[t._v("定义抽象工厂和具体工厂")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProduct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在子类中实现创建对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProduct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Phone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ComputerFactory")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在子类中实现创建对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProduct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Computer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("p",[t._v("编写客户端")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("psvm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//客户端只需要改动这里的具体工厂，就可以实现创建对应的创建的对象，不需要考虑是怎么进行创建的。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//还可以使用反射+配置文件的方式进行具体工厂的创建。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Factory")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PhoneFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" product"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createProduct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"四-适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四-适用场景"}},[t._v("#")]),t._v(" 四.适用场景")]),t._v(" "),s("p",[s("strong",[t._v("当你在编写代码的过程中")]),t._v("， "),s("strong",[t._v("如果无法预知对象确切类别及其依赖关系时")]),t._v("， "),s("strong",[t._v("可使用工厂方法。")])]),t._v(" "),s("p",[s("strong",[t._v("如果你希望用户能扩展你软件库或框架的内部组件，可使用工厂方法。")])]),t._v(" "),s("p",[s("strong",[t._v("如果你希望复用现有对象来节省系统资源")]),t._v("， "),s("strong",[t._v("而不是每次都重新创建对象")]),t._v("， "),s("strong",[t._v("可使用工厂方法")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"五-优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五-优缺点"}},[t._v("#")]),t._v(" 五.优缺点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("你可以避免创建者和具体产品之间的紧密耦合。")])]),t._v(" "),s("li",[s("p",[s("em",[t._v("单一职责原则")]),t._v("。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。")])]),t._v(" "),s("li",[s("p",[s("em",[t._v("开闭原则")]),t._v("。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。")])]),t._v(" "),s("li",[s("p",[t._v("应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。")])])]),t._v(" "),s("h2",{attrs:{id:"六-与其他模式的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六-与其他模式的关系"}},[t._v("#")]),t._v(" 六.与其他模式的关系")]),t._v(" "),s("ul",[s("li",[t._v("在许多设计工作的初期都会使用"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法模式"),s("OutboundLink")],1),t._v(" （较为简单， 而且可以更方便地通过子类进行定制）， 随后演化为使用"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/abstract-factory",target:"_blank",rel:"noopener noreferrer"}},[t._v("抽象工厂模式"),s("OutboundLink")],1),t._v("、 "),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型模式"),s("OutboundLink")],1),t._v("或"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/builder",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成器模式"),s("OutboundLink")],1),t._v(" （更灵活但更加复杂）。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/abstract-factory",target:"_blank",rel:"noopener noreferrer"}},[t._v("抽象工厂模式"),s("OutboundLink")],1),t._v("通常基于一组"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法"),s("OutboundLink")],1),t._v("， 但你也可以使用"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型模式"),s("OutboundLink")],1),t._v("来生成这些类的方法。")]),t._v(" "),s("li",[t._v("你可以同时使用"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/iterator",target:"_blank",rel:"noopener noreferrer"}},[t._v("迭代器模式"),s("OutboundLink")],1),t._v("来让子类集合返回不同类型的迭代器， 并使得迭代器与集合相匹配。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/prototype",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型"),s("OutboundLink")],1),t._v("并不基于继承， 因此没有继承的缺点。 另一方面， "),s("em",[t._v("原型")]),t._v("需要对被复制对象进行复杂的初始化。 "),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法"),s("OutboundLink")],1),t._v("基于继承， 但是它不需要初始化步骤。")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/factory-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法"),s("OutboundLink")],1),t._v("是"),s("a",{attrs:{href:"https://refactoringguru.cn/design-patterns/template-method",target:"_blank",rel:"noopener noreferrer"}},[t._v("模板方法模式"),s("OutboundLink")],1),t._v("的一种特殊形式。 同时， "),s("em",[t._v("工厂方法")]),t._v("可以作为一个大型"),s("em",[t._v("模板方法")]),t._v("中的一个步骤。")])]),t._v(" "),s("h2",{attrs:{id:"七-案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七-案例"}},[t._v("#")]),t._v(" 七.案例")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230102191451333.png",alt:"image-20230102191451333"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230102191457860.png",alt:"image-20230102191457860"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230102191502681.png",alt:"image-20230102191502681"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);