(window.webpackJsonp=window.webpackJsonp||[]).push([[353],{676:function(s,t,a){"use strict";a.r(t);var e=a(4),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"一-kubernetes-简介和背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-kubernetes-简介和背景"}},[s._v("#")]),s._v(" 一. Kubernetes 简介和背景")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAcmVkcm9zZTIxMDA=,size_20,color_FFFFFF,t_70,g_se,x_16.png",alt:"在这里插入图片描述"}})]),s._v(" "),t("p",[t("strong",[s._v("传统部署")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("无法为物理服务器中的应用程序定义资源边界")])]),s._v(" "),t("li",[t("p",[s._v("当一个服务器部署多个应用时，可能存在一个应用大量占用资源而导致另一个应用运行受影响")])]),s._v(" "),t("li",[t("p",[s._v("当每台服务器运行一个应用时，存在资源浪费以及物理服务器维护成本很高")])])]),s._v(" "),t("p",[t("strong",[s._v("虚拟化部署")])]),s._v(" "),t("p",[s._v("●  缺点：增加了操作系统，浪费了部分资源")]),s._v(" "),t("p",[t("strong",[s._v("容器化部署")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("一个容器故障停机了，无法做到立刻启动另一个容器修复")])]),s._v(" "),t("li",[t("p",[s._v("当应用的并发访问量变大的时候，横向扩展容器数量麻烦")]),s._v(" "),t("p",[s._v("Kubernetes（常简称为K8s）是一个开源的容器编排和管理平台，用于自动化应用程序的部署、扩展和操作。它可以管理跨多个主机的容器化应用，提供了一种简化和自动化容器化应用程序的管理方式。")])])]),s._v(" "),t("p",[s._v("在容器部署的基础上，有下面的一些特殊功能")]),s._v(" "),t("p",[s._v("● （1）自我修复：一旦某个容器崩溃，能够再1秒中左右迅速启动新的容器\n● （2）弹性伸缩：可以根据需要，自动对集群中正在运行的容器数量进行调整\n● （3）服务发现：服务可以通过自动发现的形式找到它所依赖的服务\n● （4）负载均衡：如果一个服务启动了多个容器，能够自动实现请求的负载均衡\n● （5）版本回退：如果发现新发布的程序版本有问题，可以立即回退到原来的版本\n…………")]),s._v(" "),t("h2",{attrs:{id:"二-kubernetes-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-kubernetes-架构"}},[s._v("#")]),s._v(" 二. "),t("strong",[s._v("Kubernetes 架构：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/components-of-kubernetes.svg",alt:"Components of Kubernetes"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230901100930449.png",alt:"image-20230901100930449"}})]),s._v(" "),t("h3",{attrs:{id:"_1-master"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-master"}},[s._v("#")]),s._v(" 1. Master")]),s._v(" "),t("p",[t("strong",[s._v("kube-apiserver（API Server）")]),s._v("： kube-apiserver 是 Kubernetes 的 API 入口，接收来自用户、客户端和其它组件的 API 请求，并将其分发到适当的组件进行处理。它是集群的控制中心。")]),s._v(" "),t("p",[t("strong",[s._v("kube-controller-manager（Controller Manager）")]),s._v("： kube-controller-manager 监控集群中的资源状态，并根据定义的期望状态来自动调整系统状态。例如，ReplicaSet、Deployment、Service 等控制器都属于这个组件的管理范畴。")]),s._v(" "),t("p",[t("strong",[s._v("kube-scheduler（Scheduler）")]),s._v("： kube-scheduler 负责将未分配的 Pod 调度到适当的 Worker 节点上，考虑到资源需求、硬件约束和亲和性等因素，以确保集群的均衡和高效。")]),s._v(" "),t("p",[t("strong",[s._v("etcd")]),s._v("： etcd 是一个高可用的分布式键值存储，用于存储 Kubernetes 集群的所有配置数据、状态信息和元数据。所有 Master 节点共享同一个 etcd 集群。")]),s._v(" "),t("p",[t("strong",[s._v("cloud-controller-manager")]),s._v("：主要目的是将云服务提供商相关的逻辑与 Kubernetes 核心代码进行分离。这样做的好处是，可以将云特定的操作和资源管理与 Kubernetes 的核心逻辑隔离开来，使 Kubernetes 的核心代码更加稳定和通用。同时，它也允许云提供商根据其平台的特性进行定制和优化。")]),s._v(" "),t("h3",{attrs:{id:"_2-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-node"}},[s._v("#")]),s._v(" 2. node")]),s._v(" "),t("p",[t("strong",[s._v("kubelet：")]),s._v(" kubelet 是每个 Worker 节点上的代理，负责监控该节点上的 Pod，并确保 Pod 的容器处于预期的状态。它会与 Master 节点中的 kube-apiserver 通")]),s._v(" "),t("p",[s._v("信以获取分配给它的 Pod。")]),s._v(" "),t("p",[t("strong",[s._v("kube-proxy：")]),s._v(" kube-proxy 负责维护节点上的网络代理，它管理集群中的网络规则，以便允许集群内的 Pod 与外部网络和其它 Pod 进行通信。")]),s._v(" "),t("p",[t("strong",[s._v("容器运行时（如 Docker）：")]),s._v(" Worker 节点上的容器运行时负责启动和管理容器。它负责拉取容器镜像、创建容器、监控容器状态，并处理容器生命周期。")]),s._v(" "),t("p",[t("strong",[s._v("Pod：")]),s._v(" Pod 是 Kubernetes 中最小的可调度单元，一个 Pod 中可以包含一个或多个容器。Worker 节点托管这些 Pod 的容器，保证它们在正确的节点上运")]),s._v(" "),t("p",[s._v("行。")]),s._v(" "),t("h2",{attrs:{id:"三-kubernetes-核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-kubernetes-核心概念"}},[s._v("#")]),s._v(" 三. Kubernetes 核心概念：")]),s._v(" "),t("h3",{attrs:{id:"_1-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-pod"}},[s._v("#")]),s._v(" 1. "),t("strong",[s._v("Pod")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("是 Kubernetes 中最小的可部署的计算单元。它可以包含一个或多个容器，这些容器共享相同的网络命名空间、存储和其他资源。\n")])])]),t("p",[s._v("一个node可以包含多个Pod，一个Pod里可以运行多个容器")]),s._v(" "),t("p",[s._v("资源清单")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 Kubernetes API 版本，这里是 v1，表示使用的是 Kubernetes 的核心 API 版本。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#资源类型：可以指定Pod、Service、deployment、ingress等等")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前属性的一些元数据")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("demo\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定所属的命名空间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对象规约")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.7.9\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" IfNotPresent "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Always、Never 、IfNotPresent")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("startupProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动探针，用于检测容器是否成功启动")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tcpSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("successThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeoutSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器启动后执行的命令")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("g\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("workingDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/share/nginx/html"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将容器的80端口映射到主机的一个随机端口")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义容器的环境变量")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JVM_OPTS\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Xms128m -Xms128m"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" OnFailure "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Aways、Never、OnFailure")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("p",[s._v("探针：")]),s._v(" "),t("ul",[t("li",[s._v("startupProbe")]),s._v(" "),t("li",[s._v("livenessProbe")]),s._v(" "),t("li",[s._v("readinessProbe")])]),s._v(" "),t("p",[s._v("探测方式:")]),s._v(" "),t("p",[s._v("httpGet方式")]),s._v(" "),t("p",[s._v("tcpSocket方式")]),s._v(" "),t("p",[s._v("exec方式")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("startupProbe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /index.html\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("successThreshold")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeoutSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_2-控制器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-控制器"}},[s._v("#")]),s._v(" 2. 控制器")]),s._v(" "),t("ul",[t("li",[s._v("副本")])]),s._v(" "),t("p",[s._v('在 Kubernetes 中，"副本"（Replica）是指具有相同配置和功能的 Pod 的集合。副本的引入是为了增加应用程序的可用性和容错性。通过创建多个相同配置的 Pod 副本，即使某个 Pod 发生故障或不可用，其他副本仍然可以继续提供服务。')]),s._v(" "),t("p",[s._v("控制器是一种用于管理和维护副本数目的对象，以确保所需的副本数一直保持在集群中运行。控制器是为了简化管理和维护多个副本的任务而引入的概念。")]),s._v(" "),t("p",[s._v("控制器与 Pod 之间的关系是，控制器是用来管理 Pod 副本的。它负责确保指定的副本数一直保持在运行状态，如果有副本数量不足，则会自动创建新的副本，反之如果超过了指定的副本数，则会停止多余的副本。这样可以实现自动的容错和扩展。")]),s._v(" "),t("h4",{attrs:{id:"_1replicaset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1replicaset"}},[s._v("#")]),s._v(" ①"),t("strong",[s._v("ReplicaSet")])]),s._v(" "),t("p",[s._v("确保一定数量的 Pod 副本在运行中，支持根据标签选择器来管理 Pod 副本。")]),s._v(" "),t("p",[s._v("主要的作用就是确保容器应用的副本数量始终保持一个定义的副本数。")]),s._v(" "),t("h4",{attrs:{id:"_2deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2deployment"}},[s._v("#")]),s._v(" ②"),t("strong",[s._v("Deployment")])]),s._v(" "),t("p",[s._v("在 ReplicaSet 的基础上提供了滚动更新和回滚能力，以便对应用进行升级和降级。")]),s._v(" "),t("p",[s._v("如果对yaml文件进行了修改，Deployment会自动通过滚动更新的方式去更新pod")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" apps/v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Deployment\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deploy\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deploy\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("revisionHistoryLimit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 历史保留数，即更新的pod可以进行回滚")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deploy\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("strategy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rollingUpdate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("maxSurge")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 25% "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示在滚动更新过程中，可以超出指定的 replicas 数量的新副本数量，即允许“超出”预期的副本数。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("maxUnavailable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 25% "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  表示在滚动更新过程中，可以同时不可用的副本数量，即允许“不可用”的副本数。")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" RollingUpdate "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RollingUpdate 、 Recreate")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("deploy\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.7.9\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" IfNotPresent\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n          "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add ports section here")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Define the container port")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Always\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("terminationGracePeriodSeconds")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("p",[s._v("暂停与恢复：")]),s._v(" "),t("p",[t("code",[s._v("kubectl rollout pause deployment <name>")]),s._v(" 暂停")]),s._v(" "),t("p",[t("code",[s._v("kubectl rollout deployment <name>")]),s._v(" 恢复")]),s._v(" "),t("p",[s._v("滚动更新")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9saXVtaWFvY24uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70.png",alt:"在这里插入图片描述"}})]),s._v(" "),t("h4",{attrs:{id:"_3statefulset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3statefulset"}},[s._v("#")]),s._v(" ③"),t("strong",[s._v("StatefulSet")])]),s._v(" "),t("p",[s._v("用于管理有状态应用，确保每个 Pod 都有唯一的标识和稳定的网络标识。")]),s._v(" "),t("h4",{attrs:{id:"_4daemonset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4daemonset"}},[s._v("#")]),s._v(" ④"),t("strong",[s._v("DaemonSet")])]),s._v(" "),t("p",[s._v("用于在每个节点上运行一个副本，确保每个节点都有一个副本在运行。")]),s._v(" "),t("h4",{attrs:{id:"_5job-和-cronjob"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5job-和-cronjob"}},[s._v("#")]),s._v(" ⑤"),t("strong",[s._v("Job 和 CronJob")])]),s._v(" "),t("p",[s._v("用于管理批处理任务，Job 确保任务完成，CronJob 基于时间表周期性地运行任务。")]),s._v(" "),t("h3",{attrs:{id:"_3-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-service"}},[s._v("#")]),s._v(" 3. Service")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230830161826983.png",alt:"image-20230830161826983"}})]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("负载均衡")]),s._v("：Service 可以在一组运行相同应用的 Pod 之间进行负载均衡，将传入的请求分发到各个 Pod 上，从而实现请求的分流。")]),s._v(" "),t("li",[t("strong",[s._v("Pod 发现")]),s._v("：Service 提供了一个稳定的虚拟 IP 地址和端口，用于访问一组后端 Pod。这使得应用无需关心 Pod 的 IP 地址和端口号的变化，而只需使用 Service 的虚拟 IP 地址来访问后端服务。")]),s._v(" "),t("li",[t("strong",[s._v("外部访问")]),s._v("：Service 可以将集群内部的服务暴露给集群外部，通过 NodePort、LoadBalancer 或 Ingress 等方式。这使得外部用户能够访问集群中的应用。")]),s._v(" "),t("li",[t("strong",[s._v("跨命名空间访问")]),s._v("：Service 可以在同一集群内的不同命名空间之间进行通信。这允许不同命名空间中的应用之间相互访问。")])]),s._v(" "),t("p",[s._v("Service如何定义")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx-deploy  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配哪些pod会被该service进行代理")]),s._v("\n  ports:\n  - protocol: TCP\n    port: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    targetPort: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n  type: ClusterIP  \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("type有4种类型：")]),s._v(" "),t("ul",[t("li",[s._v("ClusterIP")])]),s._v(" "),t("p",[s._v("只能在集群内部使用，不配置类型的话默认就是ClusterIP。只是东西流量")]),s._v(" "),t("ul",[t("li",[s._v("ExternalName")])]),s._v(" "),t("p",[s._v("返回定义的CNAME别名和，可以配置为域名")]),s._v(" "),t("ul",[t("li",[s._v("NodePort")])]),s._v(" "),t("p",[s._v("（随机开启一个端口进行映射，该端口是直接绑定在node上的，且集群中的每一个node都会绑定在这个端口【相当于可以将pod服务暴露给外部进行访问，但是实际生产不会使用，效率较低，而且是四层负载】）")]),s._v(" "),t("blockquote",[t("p",[s._v("NodePort 是一种 Service 类型，它允许你将应用程序暴露到集群节点的特定端口上。当你创建一个 NodePort 类型的 Service 时，Kubernetes 会在每个节点上打开一个随机的端口，然后将该端口映射到 Service 中定义的目标端口（通常是 Pod 中容器的端口）。这样，你可以通过访问集群节点的 IP 地址和映射的端口来访问 Service。")]),s._v(" "),t("p",[s._v("举个例子，如果你创建了一个 NodePort 类型的 Service，并将目标端口设置为 80，Kubernetes 会为每个节点打开一个随机的端口（比如 30000-32767 范围内的端口），然后将该端口映射到 Pod 中容器的 80 端口。这样，你可以通过访问任何节点的 IP 地址和映射的端口（例如 "),t("code",[s._v("http://node-ip:node-port")]),s._v("）来访问 Service 中的应用程序。")])]),s._v(" "),t("ul",[t("li",[s._v("LoadBalancer")])]),s._v(" "),t("p",[s._v("使用云服务商提供的负载均衡器服务")]),s._v(" "),t("ul",[t("li",[s._v("相关命令")])]),s._v(" "),t("p",[t("code",[s._v("kubectl get svc <name>")])]),s._v(" "),t("h4",{attrs:{id:"pod之间进行访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod之间进行访问"}},[s._v("#")]),s._v(" pod之间进行访问")]),s._v(" "),t("p",[s._v("是怎么运作的呢？")]),s._v(" "),t("p",[s._v("通过kubectl找到了server-api，再通过server-api找到对应的service，再通过service找到挂在的nginx。")]),s._v(" "),t("p",[s._v("通过wget在本地的iptables找到service")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831103353511.png",alt:"image-20230831103353511"}})]),s._v(" "),t("p",[s._v("当然，跨命名空间也是可以访问的，可以在servicename的后面加上对应的命名空间的名字：例如http://nginx-service.default 也可以.")]),s._v(" "),t("h4",{attrs:{id:"pod访问外部网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod访问外部网络"}},[s._v("#")]),s._v(" pod访问外部网络")]),s._v(" "),t("p",[s._v("以上都是实现的集群内部的各个pod之间通过服务名进行访问，那可以实现集群内部pod访问k8s集群外的其他服务吗？【理解：内部的pod是可以访问互联网，比如访问www.baidu.com，这个是可以的。但是如果是我们自己的mysql服务，这时候我们就需要在pod的java项目里面写上对应的ip。但是肯定不能写ip吧，我们希望写一个服务名，这样以后ip地址变了，但是服务名就不用更改，现在我们的需求就是通过服务名，pod能不能访问到集群外部的服务】")]),s._v(" "),t("p",[s._v("实现具体方式")]),s._v(" "),t("ol",[t("li",[s._v("编写service配置文件时，不指定selector属性")]),s._v(" "),t("li",[s._v("自己来创建endpoint配置【为什么自己创建endpoint呢，因为当使用selector时，自动创建的是内部ip与服务名的绑定，现在我们想让外部ip与服务名绑定，我们需要自己写endpoint才行】")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831105001969.png",alt:"image-20230831105001969"}})]),s._v(" "),t("p",[s._v("创建成功后，我们可以通过"),t("code",[s._v("kubectl get svc")]),s._v(" "),t("code",[s._v("kubectl get ep")]),s._v(" 查看相应的信息")]),s._v(" "),t("p",[s._v("然后会发现，我们新创建的svc没有对应的ep，所以我们这个时候来创建对应的ep")]),s._v(" "),t("p",[s._v("ep也是一种对应的资源，也需要写相应的yaml文件")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831105548475.png",alt:"image-20230831105548475"}})]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("apiVersion: v1\nkind: Endpoints\nmetadata: \n  labels:\n    app: nginx\n  name: nginx-svc-external\n  namespace: default\nsubsets:\n- addresses: \n  - ip: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("120.78")]),s._v(".159.117\n  ports:\n  - name: web\n  \tport: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n  \tprotocal: TCP\n  \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("然后进行创建，然后我们查看详细信息，就可以对应了。")]),s._v(" "),t("p",[s._v("测试，进入pod容器，使用wget http://nginx-svc-external, 就可以访问成功")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://2290653824-github-io.oss-cn-hangzhou.aliyuncs.com/image-20230831110000700.png",alt:"image-20230831110000700"}})]),s._v(" "),t("h4",{attrs:{id:"外部网络访问pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外部网络访问pod"}},[s._v("#")]),s._v(" 外部网络访问Pod")]),s._v(" "),t("p",[s._v("需要使用特殊的应用Ingress")])])}),[],!1,null,null,null);t.default=n.exports}}]);